package com.pq.tracs.model.dao;

import com.pq.tracs.model.bo.ContractAttachmentImpl;

import java.sql.SQLException;

import oracle.jbo.JboException;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jheadstart.controller.jsf.bean.FileHandlerBean;
import oracle.ord.im.OrdDocDomain;

import org.apache.myfaces.trinidad.model.UploadedFile;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractAttachmentViewRowImpl extends ViewRowImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getId();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContractId {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getContractId();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setContractId((Number)value);
            }
        }
        ,
        Name {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getName();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Description {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        FileSize {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getFileSize();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setFileSize((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        Attachment {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getAttachment();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setAttachment((BlobDomain)value);
            }
        }
        ,
        AttachmentType {
            public Object get(ContractAttachmentViewRowImpl obj) {
                return obj.getAttachmentType();
            }

            public void put(ContractAttachmentViewRowImpl obj, Object value) {
                obj.setAttachmentType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ContractAttachmentViewRowImpl object);

        public abstract void put(ContractAttachmentViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int FILESIZE = AttributesEnum.FileSize.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ATTACHMENT = AttributesEnum.Attachment.index();
    public static final int ATTACHMENTTYPE = AttributesEnum.AttachmentType.index();

    /**This is the default constructor (do not remove)
     */
    public ContractAttachmentViewRowImpl() {
    }

    /**Gets ContractAttachment entity object.
     */
    public ContractAttachmentImpl getContractAttachment() {
        return (ContractAttachmentImpl)getEntity(0);
    }

    /**Gets the attribute value for ID using the alias name Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as attribute value for ID using the alias name Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for CONTRACT_ID using the alias name ContractId
     */
    public Number getContractId() {
        return (Number) getAttributeInternal(CONTRACTID);
    }

    /**Sets <code>value</code> as attribute value for CONTRACT_ID using the alias name ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }


    /**Gets the attribute value for DESCRIPTION using the alias name Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**Gets the attribute value for CREATED_BY using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CREATED_DATE using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }


    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * Gets the attribute value for ATTACHMENT using the alias name Attachment.
     * @return the ATTACHMENT
     */
    public BlobDomain getAttachment() {
        return (BlobDomain) getAttributeInternal(ATTACHMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT using the alias name Attachment.
     * @param value value to set the ATTACHMENT
     */
    public void setAttachment(BlobDomain value) {
        setAttributeInternal(ATTACHMENT, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_TYPE using the alias name AttachmentType.
     * @return the ATTACHMENT_TYPE
     */
    public String getAttachmentType() {
        return (String) getAttributeInternal(ATTACHMENTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_TYPE using the alias name AttachmentType.
     * @param value value to set the ATTACHMENT_TYPE
     */
    public void setAttachmentType(String value) {
        setAttributeInternal(ATTACHMENTTYPE, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for FILE_SIZE using the alias name FileSize.
     * @return the FILE_SIZE
     */
    public Number getFileSize() {
        return (Number) getAttributeInternal(FILESIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_SIZE using the alias name FileSize.
     * @param value value to set the FILE_SIZE
     */
    public void setFileSize(Number value) {
        setAttributeInternal(FILESIZE, value);
    }


}
