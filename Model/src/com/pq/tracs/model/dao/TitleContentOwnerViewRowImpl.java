package com.pq.tracs.model.dao;

import com.pq.tracs.model.bo.ContentOwnerImpl;

import com.pq.tracs.model.bo.ContentOwnerTitleImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 03 10:57:07 EST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TitleContentOwnerViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        TitleId {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getTitleId();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setTitleId((Number)value);
            }
        }
        ,
        Name {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getName();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        OwnerType {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getOwnerType();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setOwnerType((String)value);
            }
        }
        ,
        Site {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getSite();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setSite((String)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        PrimaryFlag {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getPrimaryFlag();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setPrimaryFlag((String)value);
            }
        }
        ,
        Id1 {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getId1();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setId1((Number)value);
            }
        }
        ,
        ContentOwnerNo {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getContentOwnerNo();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setContentOwnerNo((Number)value);
            }
        }
        ,
        LastUpdatedDate1 {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getLastUpdatedDate1();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate1((Date)value);
            }
        }
        ,
        TitleView {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getTitleView();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleContentOwnerTypeLookup {
            public Object get(TitleContentOwnerViewRowImpl obj) {
                return obj.getTitleContentOwnerTypeLookup();
            }

            public void put(TitleContentOwnerViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TitleContentOwnerViewRowImpl object);

        public abstract void put(TitleContentOwnerViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int TITLEID = AttributesEnum.TitleId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int OWNERTYPE = AttributesEnum.OwnerType.index();
    public static final int SITE = AttributesEnum.Site.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int PRIMARYFLAG = AttributesEnum.PrimaryFlag.index();
    public static final int ID1 = AttributesEnum.Id1.index();
    public static final int CONTENTOWNERNO = AttributesEnum.ContentOwnerNo.index();
    public static final int LASTUPDATEDDATE1 = AttributesEnum.LastUpdatedDate1.index();
    public static final int TITLEVIEW = AttributesEnum.TitleView.index();
    public static final int TITLECONTENTOWNERTYPELOOKUP = AttributesEnum.TitleContentOwnerTypeLookup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TitleContentOwnerViewRowImpl() {
    }

    /**
     * Gets ContentOwnerTitle entity object.
     * @return the ContentOwnerTitle
     */
    public ContentOwnerTitleImpl getContentOwnerTitle() {
        return (ContentOwnerTitleImpl)getEntity(0);
    }

    /**
     * Gets ContentOwner entity object.
     * @return the ContentOwner
     */
    public ContentOwnerImpl getContentOwner() {
        return (ContentOwnerImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @return the CONTENT_OWNER_ID
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @param value value to set the CONTENT_OWNER_ID
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
        }
        
    


    /**
     * Gets the attribute value for TITLE_ID using the alias name TitleId.
     * @return the TITLE_ID
     */
    public Number getTitleId() {
        return (Number)getAttributeInternal(TITLEID);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE_ID using the alias name TitleId.
     * @param value value to set the TITLE_ID
     */
    public void setTitleId(Number value) {
        setAttributeInternal(TITLEID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for OWNER_TYPE using the alias name OwnerType.
     * @return the OWNER_TYPE
     */
    public String getOwnerType() {
        return (String) getAttributeInternal(OWNERTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for OWNER_TYPE using the alias name OwnerType.
     * @param value value to set the OWNER_TYPE
     */
    public void setOwnerType(String value) {
        setAttributeInternal(OWNERTYPE, value);
    }

    /**
     * Gets the attribute value for SITE using the alias name Site.
     * @return the SITE
     */
    public String getSite() {
        return (String) getAttributeInternal(SITE);
    }

    /**
     * Sets <code>value</code> as attribute value for SITE using the alias name Site.
     * @param value value to set the SITE
     */
    public void setSite(String value) {
        setAttributeInternal(SITE, value);
    }

    /**
     * Gets the attribute value for ACTIVE_FLAG using the alias name ActiveFlag.
     * @return the ACTIVE_FLAG
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVE_FLAG using the alias name ActiveFlag.
     * @param value value to set the ACTIVE_FLAG
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for PRIMARY_FLAG using the alias name PrimaryFlag.
     * @return the PRIMARY_FLAG
     */
    public String getPrimaryFlag() {
        return (String) getAttributeInternal(PRIMARYFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIMARY_FLAG using the alias name PrimaryFlag.
     * @param value value to set the PRIMARY_FLAG
     */
    public void setPrimaryFlag(String value) {
        setAttributeInternal(PRIMARYFLAG, value);
       if(value.equalsIgnoreCase("Y") && this.getTitleView() != null){
           ((TitleViewRowImpl)this.getTitleView()).setContentOwnerId(this.getContentOwnerId());
        }
      
    }

    /**
     * Gets the attribute value for ID using the alias name Id1.
     * @return the ID
     */
    public Number getId1() {
        return (Number)getAttributeInternal(ID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id1.
     * @param value value to set the ID
     */
    public void setId1(Number value) {
        setAttributeInternal(ID1, value);
    }

    /**
     * Gets the attribute value for CONTENT_OWNER_NO using the alias name ContentOwnerNo.
     * @return the CONTENT_OWNER_NO
     */
    public Number getContentOwnerNo() {
        return (Number)getAttributeInternal(CONTENTOWNERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT_OWNER_NO using the alias name ContentOwnerNo.
     * @param value value to set the CONTENT_OWNER_NO
     */
    public void setContentOwnerNo(Number value) {
        setAttributeInternal(CONTENTOWNERNO, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate1.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate1() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE1);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate1.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate1(Date value) {
        setAttributeInternal(LASTUPDATEDDATE1, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link TitleView.
     */
    public Row getTitleView() {
        return (Row)getAttributeInternal(TITLEVIEW);
    }

    /**
     * Sets the master-detail link TitleView between this object and <code>value</code>.
     */
    public void setTitleView(Row value) {
        setAttributeInternal(TITLEVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TitleContentOwnerTypeLookup.
     */
    public RowSet getTitleContentOwnerTypeLookup() {
        return (RowSet)getAttributeInternal(TITLECONTENTOWNERTYPELOOKUP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    
}
