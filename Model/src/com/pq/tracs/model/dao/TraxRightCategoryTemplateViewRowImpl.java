package com.pq.tracs.model.dao;


import com.pq.tracs.model.bo.RightCategoryTemplateImpl;

import java.sql.PreparedStatement;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxRightCategoryTemplateViewRowImpl extends ViewRowImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        RightTemplateId {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getRightTemplateId();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setRightTemplateId((Number)value);
            }
        }
        ,
        CategoryId {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getCategoryId();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setCategoryId((Number)value);
            }
        }
        ,
        Name {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getName();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Value {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getValue();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setValue((String)value);
            }
        }
        ,
        FullOrPartial {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getFullOrPartial();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setFullOrPartial((String)value);
            }
        }
        ,
        PermitFlag {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getPermitFlag();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setPermitFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        FullOrPartialFlag {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getFullOrPartialFlag();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setFullOrPartialFlag((String)value);
            }
        }
        ,
        CategoryLookup {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getCategoryLookup();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CategoryValueLookupDropDown {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getCategoryValueLookupDropDown();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RightsTemplateLookup {
            public Object get(TraxRightCategoryTemplateViewRowImpl obj) {
                return obj.getRightsTemplateLookup();
            }

            public void put(TraxRightCategoryTemplateViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxRightCategoryTemplateViewRowImpl object);

        public abstract void put(TraxRightCategoryTemplateViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int RIGHTTEMPLATEID = AttributesEnum.RightTemplateId.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int FULLORPARTIAL = AttributesEnum.FullOrPartial.index();
    public static final int PERMITFLAG = AttributesEnum.PermitFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int FULLORPARTIALFLAG = AttributesEnum.FullOrPartialFlag.index();
    public static final int CATEGORYLOOKUP = AttributesEnum.CategoryLookup.index();
    public static final int CATEGORYVALUELOOKUPDROPDOWN = AttributesEnum.CategoryValueLookupDropDown.index();
    public static final int RIGHTSTEMPLATELOOKUP = AttributesEnum.RightsTemplateLookup.index();

    /**This is the default constructor (do not remove)
     */
    public TraxRightCategoryTemplateViewRowImpl() {
    }

    /**Gets TraxRightCategoryTemplate entity object.
     */
    public RightCategoryTemplateImpl getTraxRightCategoryTemplate() {
        return (RightCategoryTemplateImpl)getEntity(0);
    }

    /**Gets the attribute value for ID using the alias name Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as attribute value for ID using the alias name Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for CATEGORY_ID using the alias name CategoryId
     */
    public Number getCategoryId() {
        return (Number) getAttributeInternal(CATEGORYID);
    }

    /**Sets <code>value</code> as attribute value for CATEGORY_ID using the alias name CategoryId
     */
    public void setCategoryId(Number value) {
        if(value!=null){
            try {
                CategoryViewImpl vo = (CategoryViewImpl)getApplicationModule().findViewObject("TraxCategoryViewFullOrPartialFlag");
                vo.setWhereClause("ID=" + value.intValue());
                vo.executeQuery();
                CategoryViewRowImpl row = (CategoryViewRowImpl)vo.first();
                if(row!=null){
                    setFullOrPartialFlag(row.getFullOrPartialFlag());
                }
            }
            catch (Exception e) {
                System.out.println("******************Exception in setCategoryId:" + e);
                e.printStackTrace();
            } 
        }
        
        setAttributeInternal(CATEGORYID, value);
    
    }

    /**Gets the attribute value for RIGHT_TEMPLATE_ID using the alias name RightTemplateId
     */
    public Number getRightTemplateId() {
        return (Number) getAttributeInternal(RIGHTTEMPLATEID);
    }

    /**Sets <code>value</code> as attribute value for RIGHT_TEMPLATE_ID using the alias name RightTemplateId
     */
    public void setRightTemplateId(Number value) {
        setAttributeInternal(RIGHTTEMPLATEID, value);
    }

    /**Gets the attribute value for NAME using the alias name Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**Sets <code>value</code> as attribute value for NAME using the alias name Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**Gets the attribute value for VALUE using the alias name Value
     */
    public String getValue() {
        return (String) getAttributeInternal(VALUE);
    }

    /**Sets <code>value</code> as attribute value for VALUE using the alias name Value
     */
    public void setValue(String value) {
        setAttributeInternal(VALUE, value);
    }

    /**Gets the attribute value for FULL_OR_PARTIAL using the alias name FullOrPartial
     */
    public String getFullOrPartial() {
        return (String) getAttributeInternal(FULLORPARTIAL);
    }

    /**Sets <code>value</code> as attribute value for FULL_OR_PARTIAL using the alias name FullOrPartial
     */
    public void setFullOrPartial(String value) {
        setAttributeInternal(FULLORPARTIAL, value);
    }

    /**Gets the attribute value for CREATED_BY using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CREATED_DATE using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }


    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**Gets the attribute value for the calculated attribute FullOrPartialFlag
     */
    public String getFullOrPartialFlag() {
        return (String) getAttributeInternal(FULLORPARTIALFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute FullOrPartialFlag
     */
    public void setFullOrPartialFlag(String value) {
        setAttributeInternal(FULLORPARTIALFLAG, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CategoryLookup.
     */
    public RowSet getCategoryLookup() {
        return (RowSet)getAttributeInternal(CATEGORYLOOKUP);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CategoryValueLookupDropDown.
     */
    public RowSet getCategoryValueLookupDropDown() {
        return (RowSet)getAttributeInternal(CATEGORYVALUELOOKUPDROPDOWN);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RightsTemplateLookup.
     */
    public RowSet getRightsTemplateLookup() {
        return (RowSet)getAttributeInternal(RIGHTSTEMPLATELOOKUP);
    }

    /**Gets the attribute value for PERMIT_FLAG using the alias name PermitFlag
     */
    public String getPermitFlag() {
        return (String) getAttributeInternal(PERMITFLAG);
    }

    /**Sets <code>value</code> as attribute value for PERMIT_FLAG using the alias name PermitFlag
     */
    public void setPermitFlag(String value) {
        setAttributeInternal(PERMITFLAG, value);
    }
}
