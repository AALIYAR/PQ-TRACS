package com.pq.tracs.model.bo.common;

import oracle.jbo.common.JboResourceBundle;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---------------------------------------------------------------------
public class TitleImplMsgBundle extends JboResourceBundle {


    static final Object[][] sMessageStrings = 
    {
{ "Title_Rule_0", "Only one Classification can be flagged as primary." },
{ "Title_Rule_4", "Only one Language can be flagged as primary." },
{ "Title_Rule_2", "Only one Subject can be flagged as primary." },
{ "Title_Rule_3", "Only one Series can be flagged as primary." },
{ "Title_Rule_5", "Only one Abstract Language can be flagged as primary." },
      { "Title_Rule_1", "Only one Varying Form can be flagged as primary." }, { "CataloguedBy_LABEL", "Catalogued By" }, { "CatalogNumber_LABEL", "Catalog #" }, { "LongTitle_LABEL", "Title" }, { "TargetTrackingNo_LABEL", "Tracking #" }, { "CheckInRequirements_LABEL", "Check-In Requirements" }, { "CatalogPrefix_LABEL", "Catalog Prefix" }, { "CatalogRoot_LABEL", "Catalog Root" }, { "CatalogSuffix_LABEL", "Catalog Suffix" }, { "Author_LABEL", "Author" }, { "CurrentCatalogNumber_LABEL", "Current Catalog Number" }, { "SecondaryPmClass_LABEL", "Secondary PM Class" }, { "CurrentCatalogPrefix_LABEL", "Current Catalog Prefix" }, { "CurrentCatalogRoot_LABEL", "Current Catalog Root" }, { "CurrentCatalogSuffix_LABEL", "Current Catalog Suffix" }, { "PublicationStartYear_LABEL", "Publication Start Year" }, { "PublicationEndYear_LABEL", "Publication End Year" }, { "ShortTitle_LABEL", "Short Title" }, { "FilmAvailability_LABEL", "Film Availability" }, { "BibliographicStatus_LABEL", "Bibliographic Status" }, { "TitleDescription_LABEL", "Title Description" }, { "SecondaryCatalogNumber_LABEL", "Secondary Catalog Number" }, { "OriginalPublishingCo_LABEL", "Original Publishing Co." }, { "OriginalPlaceOfPublication_LABEL", "Original Place Of Publication" }, { "OriginalDatesOfPublication_LABEL", "Original Dates Of Publication" }, { "PlaceOfPublicationCode_LABEL", "Place Of Publication Code" }, { "LanguageNote_LABEL", "Language Note" }, { "ExercisingRights_LABEL", "Exercising Rights" }, { "NonFilingIndicator_LABEL", "Non-Filing Indicator" }, { "EditionStatement_LABEL", "Edition Statement" }, { "AlphaRecordDates_LABEL", "Alpha Record Dates" }, { "PubYearVolumeFormatted_LABEL", "Pub. Year Volume Formatted" }, { "PubYearVolumeUnformatted_LABEL", "Pub. Year Volume Unformatted" }, { "CatalogingSourceUrl_LABEL", "Cataloging Source Url" }, { "SerialSubType_LABEL", "Serial Sub Type" }, { "PublicationFrequency_LABEL", "Publication Frequency" }, { "CatalogPublicationCity_LABEL", "Catalog Publication City" }, { "CatalogIndicator_LABEL", "Catalog Indicator" }, { "Routing_LABEL", "Routing" }, { "SpecialCopyright_LABEL", "Special Copyright" }, { "CompSubAccountNumber_LABEL", "Comp Sub Account Number" }, { "PaidSubAccountNumber_LABEL", "Paid Sub Account Number" }, { "CreatedBy_LABEL", "Created By" }, { "CreatedDate_LABEL", "Created Date" }, { "LastUpdatedBy_LABEL", "Last Updated By" }, { "LastUpdatedDate_LABEL", "Last Updated Date" }, { "PrimaryPmClass_LABEL", "Primary PM Class" }, { "ProductLine_LABEL", "Product Line" }, { "ActiveFlag_LABEL", "Active Flag" }, { "NewspaperEditionFilmed_LABEL", "Newspaper Edition Filmed" }, { "ContentType_LABEL", "Content Type" }, { "Enumeration_LABEL", "Enumeration" }, { "NumberOfUnits_LABEL", "Number Of Units" }, { "SubContentType_LABEL", "Sub Content Type" }, { "PeerReviewFlag_LABEL", "Peer Review Flag" }, { "OpenAccess_LABEL", "Open Access" }, { "EditableFlag_LABEL", "Editable Flag" }, { "Title_Rule_7", "A Catalog Title can only have one Primary Ulrichs Title." }, { "SortTitle_LABEL", "Sort Title" }, { "Title_Rule_6", "Only one Content Owner can be flagged as primary." }, { "ReasonNotExercisingRights_LABEL", "Reason for not Exercising Rights" } };

    /**This is the default constructor (do not remove)
     */
    public TitleImplMsgBundle() {
    }

    /**@return an array of key-value pairs.
     */
    public Object[][] getContents() {
        return super.getMergedArray(sMessageStrings, super.getContents());
    }
}
