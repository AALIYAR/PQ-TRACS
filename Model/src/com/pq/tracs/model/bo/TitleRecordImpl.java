package com.pq.tracs.model.bo;

import java.math.BigDecimal;

import java.sql.PreparedStatement;

import java.sql.ResultSet;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NullValue;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jheadstart.util.DatabaseProcedure;

//import com.pq.tracs.model.dao.OvrBrowseTypeViewImpl;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TitleRecordImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    @Override
    public void lock() {
        try {
            super.lock();
            } catch (RowInconsistentException e) 
            {
             refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES) ;
             super.lock();
            }
        
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TitleRecordImpl obj) {
                return obj.getId();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        TitleId {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleId();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setTitleId((Number)value);
            }
        }
        ,
        Pmid {
            public Object get(TitleRecordImpl obj) {
                return obj.getPmid();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPmid((String)value);
            }
        }
        ,
        PmTitle {
            public Object get(TitleRecordImpl obj) {
                return obj.getPmTitle();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPmTitle((String)value);
            }
        }
        ,
        SubTitle {
            public Object get(TitleRecordImpl obj) {
                return obj.getSubTitle();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setSubTitle((String)value);
            }
        }
        ,
        SortTitle {
            public Object get(TitleRecordImpl obj) {
                return obj.getSortTitle();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setSortTitle((String)value);
            }
        }
        ,
        Edition {
            public Object get(TitleRecordImpl obj) {
                return obj.getEdition();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setEdition((String)value);
            }
        }
        ,
        Qualifier {
            public Object get(TitleRecordImpl obj) {
                return obj.getQualifier();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setQualifier((String)value);
            }
        }
        ,
        PartNumber {
            public Object get(TitleRecordImpl obj) {
                return obj.getPartNumber();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPartNumber((String)value);
            }
        }
        ,
        PartName {
            public Object get(TitleRecordImpl obj) {
                return obj.getPartName();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPartName((String)value);
            }
        }
        ,
        LegacyPartNumber {
            public Object get(TitleRecordImpl obj) {
                return obj.getLegacyPartNumber();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setLegacyPartNumber((String)value);
            }
        }
        ,
        Acronym {
            public Object get(TitleRecordImpl obj) {
                return obj.getAcronym();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAcronym((String)value);
            }
        }
        ,
        SourceType {
            public Object get(TitleRecordImpl obj) {
                return obj.getSourceType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setSourceType((String)value);
            }
        }
        ,
        PmClass {
            public Object get(TitleRecordImpl obj) {
                return obj.getPmClass();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPmClass((String)value);
            }
        }
        ,
        BlockByPubFlag {
            public Object get(TitleRecordImpl obj) {
                return obj.getBlockByPubFlag();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setBlockByPubFlag((String)value);
            }
        }
        ,
        TranslationFlag {
            public Object get(TitleRecordImpl obj) {
                return obj.getTranslationFlag();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setTranslationFlag((String)value);
            }
        }
        ,
        PubSearchAlertFlag {
            public Object get(TitleRecordImpl obj) {
                return obj.getPubSearchAlertFlag();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPubSearchAlertFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TitleRecordImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TitleRecordImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TitleRecordImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TitleRecordImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        AsciiStorage {
            public Object get(TitleRecordImpl obj) {
                return obj.getAsciiStorage();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAsciiStorage((String)value);
            }
        }
        ,
        ImageStorage {
            public Object get(TitleRecordImpl obj) {
                return obj.getImageStorage();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setImageStorage((String)value);
            }
        }
        ,
        JournalCode {
            public Object get(TitleRecordImpl obj) {
                return obj.getJournalCode();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setJournalCode((String)value);
            }
        }
        ,
        ManufacturingProcess {
            public Object get(TitleRecordImpl obj) {
                return obj.getManufacturingProcess();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setManufacturingProcess((String)value);
            }
        }
        ,
        PmFamily {
            public Object get(TitleRecordImpl obj) {
                return obj.getPmFamily();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPmFamily((String)value);
            }
        }
        ,
        PmGroups {
            public Object get(TitleRecordImpl obj) {
                return obj.getPmGroups();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPmGroups((String)value);
            }
        }
        ,
        PmType {
            public Object get(TitleRecordImpl obj) {
                return obj.getPmType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPmType((String)value);
            }
        }
        ,
        SecondarySourceType {
            public Object get(TitleRecordImpl obj) {
                return obj.getSecondarySourceType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setSecondarySourceType((String)value);
            }
        }
        ,
        VaultName {
            public Object get(TitleRecordImpl obj) {
                return obj.getVaultName();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setVaultName((String)value);
            }
        }
        ,
        DocUsageRoyaltiesFlag {
            public Object get(TitleRecordImpl obj) {
                return obj.getDocUsageRoyaltiesFlag();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setDocUsageRoyaltiesFlag((String)value);
            }
        }
        ,
        PrimarySourceType {
            public Object get(TitleRecordImpl obj) {
                return obj.getPrimarySourceType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPrimarySourceType((String)value);
            }
        }
        ,
        OvrId {
            public Object get(TitleRecordImpl obj) {
                return obj.getOvrId();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setOvrId((Number)value);
            }
        }
        ,
        ContentSource {
            public Object get(TitleRecordImpl obj) {
                return obj.getContentSource();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setContentSource((String)value);
            }
        }
        ,
        CoverImageLocationId {
            public Object get(TitleRecordImpl obj) {
                return obj.getCoverImageLocationId();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setCoverImageLocationId((Number)value);
            }
        }
        ,
        CoverImageType {
            public Object get(TitleRecordImpl obj) {
                return obj.getCoverImageType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setCoverImageType((String)value);
            }
        }
        ,
        AltRightsTitleRecordId {
            public Object get(TitleRecordImpl obj) {
                return obj.getAltRightsTitleRecordId();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAltRightsTitleRecordId((Number)value);
            }
        }
        ,
        CountryOfPublication {
            public Object get(TitleRecordImpl obj) {
                return obj.getCountryOfPublication();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setCountryOfPublication((String)value);
            }
        }
        ,
        OkForExportFlag {
            public Object get(TitleRecordImpl obj) {
                return obj.getOkForExportFlag();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setOkForExportFlag((String)value);
            }
        }
        ,
        GenerationMethod {
            public Object get(TitleRecordImpl obj) {
                return obj.getGenerationMethod();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setGenerationMethod((String)value);
            }
        }
        ,
        AutogenRuleSet {
            public Object get(TitleRecordImpl obj) {
                return obj.getAutogenRuleSet();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAutogenRuleSet((String)value);
            }
        }
        ,
        DoNotUse {
            public Object get(TitleRecordImpl obj) {
                return obj.getDoNotUse();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setDoNotUse((String)value);
            }
        }
        ,
        ContentModel {
            public Object get(TitleRecordImpl obj) {
                return obj.getContentModel();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setContentModel((String)value);
            }
        }
        ,
        ContentSourceCutover {
            public Object get(TitleRecordImpl obj) {
                return obj.getContentSourceCutover();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setContentSourceCutover((String)value);
            }
        }
        ,
        CsCutoverCreatedDate {
            public Object get(TitleRecordImpl obj) {
                return obj.getCsCutoverCreatedDate();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setCsCutoverCreatedDate((Date)value);
            }
        }
        ,
        CblId {
            public Object get(TitleRecordImpl obj) {
                return obj.getCblId();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PublicAccessContent {
            public Object get(TitleRecordImpl obj) {
                return obj.getPublicAccessContent();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPublicAccessContent((String)value);
            }
        }
        ,
        K12SourceType {
            public Object get(TitleRecordImpl obj) {
                return obj.getK12SourceType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setK12SourceType((String)value);
            }
        }
        ,
        UnstructuredFlag {
            public Object get(TitleRecordImpl obj) {
                return obj.getUnstructuredFlag();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setUnstructuredFlag((String)value);
            }
        }
        ,
        HideFtAvailability {
            public Object get(TitleRecordImpl obj) {
                return obj.getHideFtAvailability();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setHideFtAvailability((String)value);
            }
        }
        ,
        LinkOutType {
            public Object get(TitleRecordImpl obj) {
                return obj.getLinkOutType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setLinkOutType((String)value);
            }
        }
        ,
        PublicationNote {
            public Object get(TitleRecordImpl obj) {
                return obj.getPublicationNote();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPublicationNote((String)value);
            }
        }
        ,
        PublicationCoverageNote {
            public Object get(TitleRecordImpl obj) {
                return obj.getPublicationCoverageNote();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setPublicationCoverageNote((String)value);
            }
        }
        ,
        Title1 {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitle1();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setTitle1((TitleImpl)value);
            }
        }
        ,
        TitleRecordRight {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleRecordRight();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleRecordHistory {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleRecordHistory();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleSubject {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleSubject();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VaryingForm {
            public Object get(TitleRecordImpl obj) {
                return obj.getVaryingForm();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleLanguage {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleLanguage();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Classification {
            public Object get(TitleRecordImpl obj) {
                return obj.getClassification();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OvrBrowseType {
            public Object get(TitleRecordImpl obj) {
                return obj.getOvrBrowseType();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OvrPublisher {
            public Object get(TitleRecordImpl obj) {
                return obj.getOvrPublisher();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleRecordPmClass {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleRecordPmClass();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxBlockingRuleOvr {
            public Object get(TitleRecordImpl obj) {
                return obj.getTraxBlockingRuleOvr();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleRecordLegacyData {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleRecordLegacyData();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleRecordSchedule {
            public Object get(TitleRecordImpl obj) {
                return obj.getTitleRecordSchedule();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxImportOvrDataParse {
            public Object get(TitleRecordImpl obj) {
                return obj.getTraxImportOvrDataParse();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxOvrAttribute {
            public Object get(TitleRecordImpl obj) {
                return obj.getTraxOvrAttribute();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxOvrRightsNote {
            public Object get(TitleRecordImpl obj) {
                return obj.getTraxOvrRightsNote();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxOvrLegacyContractNotes {
            public Object get(TitleRecordImpl obj) {
                return obj.getTraxOvrLegacyContractNotes();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxOvrCSCutover {
            public Object get(TitleRecordImpl obj) {
                return obj.getTraxOvrCSCutover();
            }

            public void put(TitleRecordImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TitleRecordImpl object);

        public abstract void put(TitleRecordImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TITLERECORDRIGHT =
        AttributesEnum.TitleRecordRight.index();


// public static final int TRAXOVRCSCUTOVER = AttributesEnum.TraxOvrCSCutover.index();


    public static final int ID = AttributesEnum.Id.index();
    public static final int TITLEID = AttributesEnum.TitleId.index();
    public static final int PMID = AttributesEnum.Pmid.index();
    public static final int PMTITLE = AttributesEnum.PmTitle.index();
    public static final int SUBTITLE = AttributesEnum.SubTitle.index();
    public static final int SORTTITLE = AttributesEnum.SortTitle.index();
    public static final int EDITION = AttributesEnum.Edition.index();
    public static final int QUALIFIER = AttributesEnum.Qualifier.index();
    public static final int PARTNUMBER = AttributesEnum.PartNumber.index();
    public static final int PARTNAME = AttributesEnum.PartName.index();
    public static final int LEGACYPARTNUMBER = AttributesEnum.LegacyPartNumber.index();
    public static final int ACRONYM = AttributesEnum.Acronym.index();
    public static final int SOURCETYPE = AttributesEnum.SourceType.index();
    public static final int PMCLASS = AttributesEnum.PmClass.index();
    public static final int BLOCKBYPUBFLAG = AttributesEnum.BlockByPubFlag.index();
    public static final int TRANSLATIONFLAG = AttributesEnum.TranslationFlag.index();
    public static final int PUBSEARCHALERTFLAG = AttributesEnum.PubSearchAlertFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ASCIISTORAGE = AttributesEnum.AsciiStorage.index();
    public static final int IMAGESTORAGE = AttributesEnum.ImageStorage.index();
    public static final int JOURNALCODE = AttributesEnum.JournalCode.index();
    public static final int MANUFACTURINGPROCESS = AttributesEnum.ManufacturingProcess.index();
    public static final int PMFAMILY = AttributesEnum.PmFamily.index();
    public static final int PMGROUPS = AttributesEnum.PmGroups.index();
    public static final int PMTYPE = AttributesEnum.PmType.index();
    public static final int SECONDARYSOURCETYPE = AttributesEnum.SecondarySourceType.index();
    public static final int VAULTNAME = AttributesEnum.VaultName.index();
    public static final int DOCUSAGEROYALTIESFLAG = AttributesEnum.DocUsageRoyaltiesFlag.index();
    public static final int PRIMARYSOURCETYPE = AttributesEnum.PrimarySourceType.index();
    public static final int OVRID = AttributesEnum.OvrId.index();
    public static final int CONTENTSOURCE = AttributesEnum.ContentSource.index();
    public static final int COVERIMAGELOCATIONID = AttributesEnum.CoverImageLocationId.index();
    public static final int COVERIMAGETYPE = AttributesEnum.CoverImageType.index();
    public static final int ALTRIGHTSTITLERECORDID = AttributesEnum.AltRightsTitleRecordId.index();
    public static final int COUNTRYOFPUBLICATION = AttributesEnum.CountryOfPublication.index();
    public static final int OKFOREXPORTFLAG = AttributesEnum.OkForExportFlag.index();
    public static final int GENERATIONMETHOD = AttributesEnum.GenerationMethod.index();
    public static final int AUTOGENRULESET = AttributesEnum.AutogenRuleSet.index();
    public static final int DONOTUSE = AttributesEnum.DoNotUse.index();
    public static final int CONTENTMODEL = AttributesEnum.ContentModel.index();
    public static final int CONTENTSOURCECUTOVER = AttributesEnum.ContentSourceCutover.index();
    public static final int CSCUTOVERCREATEDDATE = AttributesEnum.CsCutoverCreatedDate.index();
    public static final int CBLID = AttributesEnum.CblId.index();
    public static final int PUBLICACCESSCONTENT = AttributesEnum.PublicAccessContent.index();
    public static final int K12SOURCETYPE = AttributesEnum.K12SourceType.index();
    public static final int UNSTRUCTUREDFLAG = AttributesEnum.UnstructuredFlag.index();
    public static final int HIDEFTAVAILABILITY = AttributesEnum.HideFtAvailability.index();
    public static final int LINKOUTTYPE = AttributesEnum.LinkOutType.index();
    public static final int PUBLICATIONNOTE = AttributesEnum.PublicationNote.index();
    public static final int PUBLICATIONCOVERAGENOTE = AttributesEnum.PublicationCoverageNote.index();
    public static final int TITLE1 = AttributesEnum.Title1.index();
    public static final int TITLERECORDHISTORY = AttributesEnum.TitleRecordHistory.index();
    public static final int TITLESUBJECT = AttributesEnum.TitleSubject.index();
    public static final int VARYINGFORM = AttributesEnum.VaryingForm.index();
    public static final int TITLELANGUAGE = AttributesEnum.TitleLanguage.index();
    public static final int CLASSIFICATION = AttributesEnum.Classification.index();
    public static final int OVRBROWSETYPE = AttributesEnum.OvrBrowseType.index();
    public static final int OVRPUBLISHER = AttributesEnum.OvrPublisher.index();
    public static final int TITLERECORDPMCLASS = AttributesEnum.TitleRecordPmClass.index();
    public static final int TRAXBLOCKINGRULEOVR = AttributesEnum.TraxBlockingRuleOvr.index();
    public static final int TITLERECORDLEGACYDATA = AttributesEnum.TitleRecordLegacyData.index();
    public static final int TITLERECORDSCHEDULE = AttributesEnum.TitleRecordSchedule.index();
    public static final int TRAXIMPORTOVRDATAPARSE = AttributesEnum.TraxImportOvrDataParse.index();
    public static final int TRAXOVRATTRIBUTE = AttributesEnum.TraxOvrAttribute.index();
    public static final int TRAXOVRRIGHTSNOTE = AttributesEnum.TraxOvrRightsNote.index();
    public static final int TRAXOVRLEGACYCONTRACTNOTES = AttributesEnum.TraxOvrLegacyContractNotes.index();
    public static final int TRAXOVRCSCUTOVER = AttributesEnum.TraxOvrCSCutover.index();

    /**This is the default constructor (do not remove)
     */
    public TitleRecordImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.TitleRecord");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        // Add any custom logic you wish to perform in this getter here.
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for TitleId, using the alias name TitleId
     */
    public Number getTitleId() {
        // Add any custom logic you wish to perform in this getter here.
        return (Number)getAttributeInternal(TITLEID);
    }

    /**Sets <code>value</code> as the attribute value for TitleId
     */
    public void setTitleId(Number value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(TITLEID, value);
    }

    /**Gets the attribute value for Pmid, using the alias name Pmid
     */
    public String getPmid() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PMID);
    }

    /**Sets <code>value</code> as the attribute value for Pmid
     */
    public void setPmid(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PMID, value);
    }

    /**Gets the attribute value for PmTitle, using the alias name PmTitle
     */
    public String getPmTitle() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PMTITLE);
    }

    /**Sets <code>value</code> as the attribute value for PmTitle
     */
    public void setPmTitle(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PMTITLE, value);
    }

    /**Gets the attribute value for SubTitle, using the alias name SubTitle
     */
    public String getSubTitle() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(SUBTITLE);
    }

    /**Sets <code>value</code> as the attribute value for SubTitle
     */
    public void setSubTitle(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(SUBTITLE, value);
    }

    /**Gets the attribute value for SortTitle, using the alias name SortTitle
     */
    public String getSortTitle() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(SORTTITLE);
    }

    /**Sets <code>value</code> as the attribute value for SortTitle
     */
    public void setSortTitle(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(SORTTITLE, value);
    }

    /**Gets the attribute value for Edition, using the alias name Edition
     */
    public String getEdition() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(EDITION);
    }

    /**Sets <code>value</code> as the attribute value for Edition
     */
    public void setEdition(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(EDITION, value);
    }

    /**Gets the attribute value for Qualifier, using the alias name Qualifier
     */
    public String getQualifier() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(QUALIFIER);
    }

    /**Sets <code>value</code> as the attribute value for Qualifier
     */
    public void setQualifier(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(QUALIFIER, value);
    }

    /**Gets the attribute value for PartNumber, using the alias name PartNumber
     */
    public String getPartNumber() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PARTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for PartNumber
     */
    public void setPartNumber(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PARTNUMBER, value);
    }

    /**Gets the attribute value for PartName, using the alias name PartName
     */
    public String getPartName() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PARTNAME);
    }

    /**Sets <code>value</code> as the attribute value for PartName
     */
    public void setPartName(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PARTNAME, value);
    }

    /**Gets the attribute value for LegacyPartNumber, using the alias name LegacyPartNumber
     */
    public String getLegacyPartNumber() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(LEGACYPARTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for LegacyPartNumber
     */
    public void setLegacyPartNumber(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(LEGACYPARTNUMBER, value);
    }

    /**Gets the attribute value for Acronym, using the alias name Acronym
     */
    public String getAcronym() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(ACRONYM);
    }

    /**Sets <code>value</code> as the attribute value for Acronym
     */
    public void setAcronym(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ACRONYM, value);
    }

    /**Gets the attribute value for SourceType, using the alias name SourceType
     */
    public String getSourceType() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(SOURCETYPE);
    }

    /**Sets <code>value</code> as the attribute value for SourceType
     */
    public void setSourceType(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(SOURCETYPE, value);
    }

    /**Gets the attribute value for PmClass, using the alias name PmClass
     */
    public String getPmClass() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PMCLASS);
    }

    /**Sets <code>value</code> as the attribute value for PmClass
     */
    public void setPmClass(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PMCLASS, value);
    }

    /**Gets the attribute value for BlockByPubFlag, using the alias name BlockByPubFlag
     */
    public String getBlockByPubFlag() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(BLOCKBYPUBFLAG);
    }

    /**Sets <code>value</code> as the attribute value for BlockByPubFlag
     */
    public void setBlockByPubFlag(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(BLOCKBYPUBFLAG, value);
    }

    /**Gets the attribute value for TranslationFlag, using the alias name TranslationFlag
     */
    public String getTranslationFlag() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(TRANSLATIONFLAG);
    }

    /**Sets <code>value</code> as the attribute value for TranslationFlag
     */
    public void setTranslationFlag(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(TRANSLATIONFLAG, value);
    }

    /**Gets the attribute value for PubSearchAlertFlag, using the alias name PubSearchAlertFlag
     */
    public String getPubSearchAlertFlag() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PUBSEARCHALERTFLAG);
    }

    /**Sets <code>value</code> as the attribute value for PubSearchAlertFlag
     */
    public void setPubSearchAlertFlag(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PUBSEARCHALERTFLAG, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        // Add any custom logic you wish to perform in this getter here.
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        // Add any custom logic you wish to perform in this getter here.
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**Gets the associated entity TitleImpl
     */
    public TitleImpl getTitle1() {
        return (TitleImpl)getAttributeInternal(TITLE1);
    }

    /**Sets <code>value</code> as the associated entity TitleImpl
     */
    public void setTitle1(TitleImpl value) {
        setAttributeInternal(TITLE1, value);
    }


    /**Gets the attribute value for AsciiStorage, using the alias name AsciiStorage
     */
    public String getAsciiStorage() {
        return (String)getAttributeInternal(ASCIISTORAGE);
    }

    /**Sets <code>value</code> as the attribute value for AsciiStorage
     */
    public void setAsciiStorage(String value) {
        setAttributeInternal(ASCIISTORAGE, value);
    }

    /**Gets the attribute value for ImageStorage, using the alias name ImageStorage
     */
    public String getImageStorage() {
        return (String)getAttributeInternal(IMAGESTORAGE);
    }

    /**Sets <code>value</code> as the attribute value for ImageStorage
     */
    public void setImageStorage(String value) {
        setAttributeInternal(IMAGESTORAGE, value);
    }

    /**Gets the attribute value for JournalCode, using the alias name JournalCode
     */
    public String getJournalCode() {
        return (String)getAttributeInternal(JOURNALCODE);
    }

    /**Sets <code>value</code> as the attribute value for JournalCode
     */
    public void setJournalCode(String value) {
        setAttributeInternal(JOURNALCODE, value);
    }

    /**Gets the attribute value for ManufacturingProcess, using the alias name ManufacturingProcess
     */
    public String getManufacturingProcess() {
        return (String)getAttributeInternal(MANUFACTURINGPROCESS);
    }

    /**Sets <code>value</code> as the attribute value for ManufacturingProcess
     */
    public void setManufacturingProcess(String value) {
        setAttributeInternal(MANUFACTURINGPROCESS, value);
    }

    /**Gets the attribute value for PmFamily, using the alias name PmFamily
     */
    public String getPmFamily() {
        return (String)getAttributeInternal(PMFAMILY);
    }

    /**Sets <code>value</code> as the attribute value for PmFamily
     */
    public void setPmFamily(String value) {
        setAttributeInternal(PMFAMILY, value);
    }

    /**Gets the attribute value for PmGroups, using the alias name PmGroups
     */
    public String getPmGroups() {
        return (String)getAttributeInternal(PMGROUPS);
    }

    /**Sets <code>value</code> as the attribute value for PmGroups
     */
    public void setPmGroups(String value) {
        setAttributeInternal(PMGROUPS, value);
    }


    /**Gets the attribute value for PmType, using the alias name PmType
     */
    public String getPmType() {
        return (String)getAttributeInternal(PMTYPE);
    }

    /**Sets <code>value</code> as the attribute value for PmType
     */
    public void setPmType(String value) {
        setAttributeInternal(PMTYPE, value);
    }

    /**Gets the attribute value for SecondarySourceType, using the alias name SecondarySourceType
     */
    public String getSecondarySourceType() {
        return (String)getAttributeInternal(SECONDARYSOURCETYPE);
    }

    /**Sets <code>value</code> as the attribute value for SecondarySourceType
     */
    public void setSecondarySourceType(String value) {
        setAttributeInternal(SECONDARYSOURCETYPE, value);
    }

    /**Gets the attribute value for VaultName, using the alias name VaultName
     */
    public String getVaultName() {
        return (String)getAttributeInternal(VAULTNAME);
    }

    /**Sets <code>value</code> as the attribute value for VaultName
     */
    public void setVaultName(String value) {
        setAttributeInternal(VAULTNAME, value);
    }

    /**Gets the attribute value for DocUsageRoyaltiesFlag, using the alias name DocUsageRoyaltiesFlag
     */
    public String getDocUsageRoyaltiesFlag() {
        return (String)getAttributeInternal(DOCUSAGEROYALTIESFLAG);
    }

    /**Sets <code>value</code> as the attribute value for DocUsageRoyaltiesFlag
     */
    public void setDocUsageRoyaltiesFlag(String value) {
        setAttributeInternal(DOCUSAGEROYALTIESFLAG, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRecordHistory() {
        return (RowIterator)getAttributeInternal(TITLERECORDHISTORY);
    }

    /**Gets the attribute value for PrimarySourceType, using the alias name PrimarySourceType
     */
    public String getPrimarySourceType() {
        return (String)getAttributeInternal(PRIMARYSOURCETYPE);
    }

    /**Sets <code>value</code> as the attribute value for PrimarySourceType
     */
    public void setPrimarySourceType(String value) {
        setAttributeInternal(PRIMARYSOURCETYPE, value);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleSubject() {
        return (RowIterator)getAttributeInternal(TITLESUBJECT);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getVaryingForm() {
        return (RowIterator)getAttributeInternal(VARYINGFORM);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleLanguage() {
        return (RowIterator)getAttributeInternal(TITLELANGUAGE);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getClassification() {
        return (RowIterator)getAttributeInternal(CLASSIFICATION);
    }

    /**Gets the attribute value for OvrId, using the alias name OvrId
     */
    public Number getOvrId() {
        return (Number)getAttributeInternal(OVRID);
    }

    /**Sets <code>value</code> as the attribute value for OvrId
     */
    public void setOvrId(Number value) {
        setAttributeInternal(OVRID, value);
    }

    /**Gets the attribute value for ContentSource, using the alias name ContentSource
     */
    public String getContentSource() {
        return (String)getAttributeInternal(CONTENTSOURCE);
    }

    /**Sets <code>value</code> as the attribute value for ContentSource
     */
    public void setContentSource(String value) {
        setAttributeInternal(CONTENTSOURCE, value);
    }


    protected void prepareForDML(int operation, TransactionEvent e) {

        super.prepareForDML(operation, e);

        try {
            if (operation == DML_INSERT) {
                SequenceImpl seq =
                    new SequenceImpl("TRAX_OVR_ID_SEQ", getDBTransaction());
                Number seqNo = seq.getSequenceNumber();

                setOvrId(seqNo);

                if (this.getGenerationMethod().equalsIgnoreCase("Auto")) {
                    if (this.getContentSource().contains("CSA") && !this.getContentSource().contains("Illuminata")) {
                        this.setQualifier(null);

                        if (this.getContentSource().contains("Illustrata")) {
                            this.setPrimarySourceType("Scholarly Journals");
                        }
                    }
                }
            }
        } catch (Exception eee) {
        }
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        this.setBlockByPubFlag("N");
        this.setTranslationFlag("N");
        this.setPubSearchAlertFlag("N");
        this.setDocUsageRoyaltiesFlag("N");
    }


    /**Gets the attribute value for CoverImageLocationId, using the alias name CoverImageLocationId
     */
    public Number getCoverImageLocationId() {
        return (Number)getAttributeInternal(COVERIMAGELOCATIONID);
    }

    /**Sets <code>value</code> as the attribute value for CoverImageLocationId
     */
    public void setCoverImageLocationId(Number value) {
        setAttributeInternal(COVERIMAGELOCATIONID, value);
    }

    /**Gets the attribute value for CoverImageType, using the alias name CoverImageType
     */
    public String getCoverImageType() {
        return (String)getAttributeInternal(COVERIMAGETYPE);
    }

    /**Sets <code>value</code> as the attribute value for CoverImageType
     */
    public void setCoverImageType(String value) {
        setAttributeInternal(COVERIMAGETYPE, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getOvrBrowseType() {
        return (RowIterator)getAttributeInternal(OVRBROWSETYPE);
    }

    /**Validation method for Pmid
     */
    public boolean validatePmid(String data) {
        if (data != null && data.length() > 0) {
            try {
                PreparedStatement pmidCheck =
                    this.getDBTransaction().createPreparedStatement("select ovr_id, pmid from trax_title_record where pmid = " +
                                                                    data, 1);
                ResultSet pmids = pmidCheck.executeQuery();
                if (pmids.next()) {
                    return false;
                }
            } catch (Exception ex) {

            }
        }
        return true;
    }
    
    public boolean validatePrimarySourceType() {
        String val =this.getPrimarySourceType();
        if (val==null) {
            return false;
        }
        return true;
    }
    public boolean validateContentModel() {
        String val=this.getContentModel();
        if (val==null) {
            return false;
        }
        return true;
    }
   public boolean validateGenerationMethod()
   {
       String val=this.getGenerationMethod();
       if (val==null) {
           return false;
       }
   return true;
   }
   public boolean validateContentSource() {
       String val=this.getContentSource();
       if (val==null) {
           return false;
       }
       return true;
   }
    /**Validation method for TitleRecord
     */
    public boolean validateTitleRecordSourceAndPmid() {
        if (this.getContentSource() != null && this.getContentSource().equalsIgnoreCase("pq") &&
            (this.getPmid() == null || this.getPmid().length() == 0)) {
            return false;
        }
        return true;
    }
    
    /**Validation method for TitleRecord
     */
    public boolean validateTitleRecordPmidAndSource() {
        if ((this.getPmid() != null && !this.getPmid().equalsIgnoreCase("")) &&
            !this.getContentSource().equalsIgnoreCase("pq")) {
            return false;
        }
        return true;
    }

    /**Validation method for TitleRecord
     */
     
    public boolean validateTitleRecordSourceAndVault() {
        if (this.getContentSource() != null && this.getContentSource().equalsIgnoreCase("pq") &&
            (this.getVaultName() == null || this.getVaultName().length() == 0) )
       // || this.getVaultName().equalsIgnoreCase("")
       {
            return false;
        }
        return true;
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRecordLegacyData() {
        return (RowIterator)getAttributeInternal(TITLERECORDLEGACYDATA);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRecordSchedule() {
        return (RowIterator)getAttributeInternal(TITLERECORDSCHEDULE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxImportOvrDataParse() {
        return (RowIterator)getAttributeInternal(TRAXIMPORTOVRDATAPARSE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxOvrAttribute() {
        return (RowIterator)getAttributeInternal(TRAXOVRATTRIBUTE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxOvrRightsNote() {
        return (RowIterator)getAttributeInternal(TRAXOVRRIGHTSNOTE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxOvrLegacyContractNotes() {
        return (RowIterator)getAttributeInternal(TRAXOVRLEGACYCONTRACTNOTES);
    }


    //    /**
//     * @return the associated entity oracle.jbo.RowIterator.
//     */
//    public RowIterator getTraxOvrCSCutover() {
//        return (RowIterator)getAttributeInternal(TRAXOVRCSCUTOVER);
//    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxOvrCSCutover() {
        return (RowIterator)getAttributeInternal(TRAXOVRCSCUTOVER);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * Validation method for TitleRecord.
     */
    public boolean validateBrowseTypeNone() {
        RowIterator acctIter = this.getOvrBrowseType();
        Row bt = null;
        //System.out.println("debug0 in valNone");
        bt = acctIter.first();
        if (bt !=
            null) { //System.out.println("debug1 "+bt.getAttribute("BrowseType")) ;
            if ("None".equals(bt.getAttribute("BrowseType"))) {
                //System.out.println("debug2 "+bt.getAttribute("BrowseType"));
                bt = acctIter.next();
                if (bt != null) {
                    //System.out.println("debug3 "+bt.getAttribute("BrowseType"));
                    return false;
                }
            } else {
                bt = acctIter.next();
                if (bt !=
                    null) { //System.out.println("debug4 "+bt.getAttribute("BrowseType"));
                    if ("None".equals(bt.getAttribute("BrowseType"))) {
                        //System.out.println("debug5 "+bt.getAttribute("BrowseType"));
                        return false;
                    }
                }
            }

        }
        return true;
    }

    public boolean validateSortTitle() {
        if(this.getSortTitle()==null || this.getSortTitle().length()==0)
        {
            return false;
        }
        return true;
    }

    /**
     * Validation method for TitleRecord.
     */
    public boolean validateBrowseTypeIssueDate() {
        RowIterator acctIter = this.getOvrBrowseType();
        Row bt = null;

        bt = acctIter.first();
        if (bt != null) {
            //System.out.println("debug1"+bt.getAttribute("BrowseType"));
            if (!"IssueDateBrowse".equals(bt.getAttribute("BrowseType"))) {
                bt = acctIter.next();
                if (bt != null) {
                    //System.out.println("debug2"+bt.getAttribute("BrowseType"));
                    if (!"IssueDateBrowse".equals(bt.getAttribute("BrowseType")))
                        return false;
                }
            }
            return true;
        }
        return true;
    }


    /**
     * Validation method for TitleRecord.
     */
    public boolean validateBrowseTypesCount() {
        RowIterator acctIter = this.getOvrBrowseType();

        if (acctIter.getRowCount() > 2)
            return false;


        return true;
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRecordRight() {
        return (RowIterator)getAttributeInternal(TITLERECORDRIGHT);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getOvrPublisher() {
        return (RowIterator)getAttributeInternal(OVRPUBLISHER);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRecordPmClass() {
        return (RowIterator)getAttributeInternal(TITLERECORDPMCLASS);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxBlockingRuleOvr() {
        return (RowIterator)getAttributeInternal(TRAXBLOCKINGRULEOVR);
    }


    /**Gets the attribute value for AltRightsTitleRecordId, using the alias name AltRightsTitleRecordId
     */
    public Number getAltRightsTitleRecordId() {
        return (Number)getAttributeInternal(ALTRIGHTSTITLERECORDID);
    }

    /**Sets <code>value</code> as the attribute value for AltRightsTitleRecordId
     */
    public void setAltRightsTitleRecordId(Number value) {
        setAttributeInternal(ALTRIGHTSTITLERECORDID, value);
    }

    /**
     * Gets the attribute value for CountryOfPublication, using the alias name CountryOfPublication.
     * @return the CountryOfPublication
     */
    public String getCountryOfPublication() {
        return (String)getAttributeInternal(COUNTRYOFPUBLICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryOfPublication.
     * @param value value to set the CountryOfPublication
     */
    public void setCountryOfPublication(String value) {
        setAttributeInternal(COUNTRYOFPUBLICATION, value);
    }

    /**
     * Gets the attribute value for OkForExportFlag, using the alias name OkForExportFlag.
     * @return the OkForExportFlag
     */
    public String getOkForExportFlag() {
        return (String)getAttributeInternal(OKFOREXPORTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for OkForExportFlag.
     * @param value value to set the OkForExportFlag
     */
    public void setOkForExportFlag(String value) {
        setAttributeInternal(OKFOREXPORTFLAG, value);
    }

    /**
     * Gets the attribute value for GenerationMethod, using the alias name GenerationMethod.
     * @return the GenerationMethod
     */
    public String getGenerationMethod() {
        return (String)getAttributeInternal(GENERATIONMETHOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for GenerationMethod.
     * @param value value to set the GenerationMethod
     */
    public void setGenerationMethod(String value) {
        setAttributeInternal(GENERATIONMETHOD, value);
    }

    /**
     * Gets the attribute value for AutogenRuleSet, using the alias name AutogenRuleSet.
     * @return the AutogenRuleSet
     */
    public String getAutogenRuleSet() {
        return (String)getAttributeInternal(AUTOGENRULESET);
    }

    /**
     * Sets <code>value</code> as the attribute value for AutogenRuleSet.
     * @param value value to set the AutogenRuleSet
     */
    public void setAutogenRuleSet(String value) {
        setAttributeInternal(AUTOGENRULESET, value);
    }

    /**
     * Gets the attribute value for DoNotUse, using the alias name DoNotUse.
     * @return the DoNotUse
     */
    public String getDoNotUse() {
        return (String)getAttributeInternal(DONOTUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DoNotUse.
     * @param value value to set the DoNotUse
     */
    public void setDoNotUse(String value) {
        setAttributeInternal(DONOTUSE, value);
    }

    /**
     * Gets the attribute value for ContentModel, using the alias name ContentModel.
     * @return the ContentModel
     */
    public String getContentModel() {
        return (String)getAttributeInternal(CONTENTMODEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentModel.
     * @param value value to set the ContentModel
     */
    public void setContentModel(String value) {
        setAttributeInternal(CONTENTMODEL, value);
    }


    /**
     * Gets the attribute value for ContentSourceCutover, using the alias name ContentSourceCutover.
     * @return the ContentSourceCutover
     */
    public String getContentSourceCutover() {
        return (String)getAttributeInternal(CONTENTSOURCECUTOVER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentSourceCutover.
     * @param value value to set the ContentSourceCutover
     */
    public void setContentSourceCutover(String value) {
        setAttributeInternal(CONTENTSOURCECUTOVER, value);
    }

    /**
     * Gets the attribute value for CsCutoverCreatedDate, using the alias name CsCutoverCreatedDate.
     * @return the CsCutoverCreatedDate
     */
    public Date getCsCutoverCreatedDate() {
        return (Date)getAttributeInternal(CSCUTOVERCREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CsCutoverCreatedDate.
     * @param value value to set the CsCutoverCreatedDate
     */
    public void setCsCutoverCreatedDate(Date value) {
        setAttributeInternal(CSCUTOVERCREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CblId, using the alias name CblId.
     * @return the CblId
     */
    public Number getCblId() {
        return (Number)getAttributeInternal(CBLID);
    }


    /**
     * Gets the attribute value for PublicAccessContent, using the alias name PublicAccessContent.
     * @return the PublicAccessContent
     */
    public String getPublicAccessContent() {
        return (String)getAttributeInternal(PUBLICACCESSCONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublicAccessContent.
     * @param value value to set the PublicAccessContent
     */
    public void setPublicAccessContent(String value) {
        setAttributeInternal(PUBLICACCESSCONTENT, value);
    }

    /**
     * Gets the attribute value for K12SourceType, using the alias name K12SourceType.
     * @return the K12SourceType
     */
    public String getK12SourceType() {
        return (String)getAttributeInternal(K12SOURCETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for K12SourceType.
     * @param value value to set the K12SourceType
     */
    public void setK12SourceType(String value) {
        setAttributeInternal(K12SOURCETYPE, value);
    }

    /**
     * Gets the attribute value for UnstructuredFlag, using the alias name UnstructuredFlag.
     * @return the UnstructuredFlag
     */
    public String getUnstructuredFlag() {
        return (String)getAttributeInternal(UNSTRUCTUREDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnstructuredFlag.
     * @param value value to set the UnstructuredFlag
     */
    public void setUnstructuredFlag(String value) {
        setAttributeInternal(UNSTRUCTUREDFLAG, value);
    }

    /**
     * Gets the attribute value for HideFtAvailability, using the alias name HideFtAvailability.
     * @return the HideFtAvailability
     */
    public String getHideFtAvailability() {
        return (String)getAttributeInternal(HIDEFTAVAILABILITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for HideFtAvailability.
     * @param value value to set the HideFtAvailability
     */
    public void setHideFtAvailability(String value) {
        setAttributeInternal(HIDEFTAVAILABILITY, value);
    }

    /**
     * Gets the attribute value for LinkOutType, using the alias name LinkOutType.
     * @return the LinkOutType
     */
    public String getLinkOutType() {
        return (String)getAttributeInternal(LINKOUTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LinkOutType.
     * @param value value to set the LinkOutType
     */
    public void setLinkOutType(String value) {
        setAttributeInternal(LINKOUTTYPE, value);
    }

    /**
     * Gets the attribute value for PublicationNote, using the alias name PublicationNote.
     * @return the PublicationNote
     */
    public String getPublicationNote() {
        return (String)getAttributeInternal(PUBLICATIONNOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublicationNote.
     * @param value value to set the PublicationNote
     */
    public void setPublicationNote(String value) {
        setAttributeInternal(PUBLICATIONNOTE, value);
    }

    /**
     * Gets the attribute value for PublicationCoverageNote, using the alias name PublicationCoverageNote.
     * @return the PublicationCoverageNote
     */
    public String getPublicationCoverageNote() {
        return (String)getAttributeInternal(PUBLICATIONCOVERAGENOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublicationCoverageNote.
     * @param value value to set the PublicationCoverageNote
     */
    public void setPublicationCoverageNote(String value) {
        setAttributeInternal(PUBLICATIONCOVERAGENOTE, value);
    }

    /**Validation method for TitleRecord
     */
    public boolean validateTitleRecordSourceAndLegacyId() {


        try {
            PreparedStatement isLegacyCheck =
                this.getDBTransaction().createPreparedStatement("select content_source, classification_type from trax_legacy_id_validation where content_source = '" +
                                                                this.getContentSource() +
                                                                "'", 1);
            ResultSet isLegacy = isLegacyCheck.executeQuery();
            if (isLegacy.next()) {
                PreparedStatement hasLegacyCheck =
                    this.getDBTransaction().createPreparedStatement("select classification_type, classification_number from trax_classification where classification_type = '" +
                                                                    isLegacy.getString("classification_type") +
                                                                    "' and title_record_id = " +
                                                                    this.getId(),
                                                                    1);
                ResultSet hasLegacy = hasLegacyCheck.executeQuery();

                if (!hasLegacy.next()) {
                    FacesContext.getCurrentInstance().addMessage(null,
                                                                 new FacesMessage("OVR Saved",
                                                                                  "The OVR was saved, but still needs an appropriate Legacy ID added on the Classifications tab."));

                }

            }
        } catch (Exception ex) {

        }

        return true;
    }

    private void autoFillChildRecords() {
        // call pl/sql package to auto-fill OVR child records from Catalog child records
        
        String autoGenRules;

        try {
            Integer titleRecordIdInt = new Integer(this.getId().toString());
            Integer titleIdInt = new Integer(this.getTitleId().toString());
            Integer pubIdInt = null;
            String source_status = "application";

            String uName = this.getLoginUserId();

            DatabaseProcedure autoFillChildRecordsProc =
                DatabaseProcedure.define("procedure pk_trax_ovr_creation.auto_fill_child_records" +
                                         "( p_title_record_id in integer, p_title_id in integer, p_content_source varchar2, p_username varchar2, p_pub_id integer, p_source_status varchar2)");

            if (this.getAutogenRuleSet() != null) {
                autoGenRules = this.getAutogenRuleSet();
            } else {
                autoGenRules = this.getContentSource();
            }
            
            DatabaseProcedure.Result result =
                autoFillChildRecordsProc.call(this.getDBTransaction(),
                                              titleRecordIdInt, titleIdInt,
                                              autoGenRules, uName, pubIdInt, source_status);

            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage("Child records successfully auto-generated."));
        } catch (Exception ex) {
            ex.printStackTrace();
            FacesContext.getCurrentInstance().addMessage(null,
                                                         new FacesMessage(ex.getMessage()));
        }
    }

    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation == DML_INSERT)

            try {
                
//               if(this.getContentSourceCutover() != null){
//                    Date sysdate = new Date();
//                    this.setCsCutoverCreatedDate(sysdate);
//                
//               }
//                

                if (this.getGenerationMethod().equalsIgnoreCase("Auto")) {
                    // call the code to auto-fill child records for the OVR
                    this.autoFillChildRecords();
                }

                OvrBrowseTypeImpl bt =
                    (OvrBrowseTypeImpl)this.getOvrBrowseType().createRow();
                bt.setBrowseType("IssueDateBrowse");

                FacesContext.getCurrentInstance().addMessage(null,
                                                             new FacesMessage("Default Browse Type is also created."));
            } catch (Exception ex) {

                //System.out.println("inside catch DML INSERT"+ex.getMessage());
                //ex.printStackTrace();
                FacesContext.getCurrentInstance().addMessage(null,
                                                             new FacesMessage(ex.getMessage()));
            }

    }

}
