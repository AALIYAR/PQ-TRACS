package com.pq.tracs.model.bo;

import java.math.BigDecimal;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jheadstart.util.DatabaseProcedure;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PublisherAddressImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(PublisherAddressImpl obj) {
                return obj.getId();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        PublisherId {
            public Object get(PublisherAddressImpl obj) {
                return obj.getPublisherId();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setPublisherId((Number)value);
            }
        }
        ,
        StreetAddress {
            public Object get(PublisherAddressImpl obj) {
                return obj.getStreetAddress();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setStreetAddress((String)value);
            }
        }
        ,
        StreetAddress2 {
            public Object get(PublisherAddressImpl obj) {
                return obj.getStreetAddress2();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setStreetAddress2((String)value);
            }
        }
        ,
        City {
            public Object get(PublisherAddressImpl obj) {
                return obj.getCity();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setCity((String)value);
            }
        }
        ,
        StateOrProvince {
            public Object get(PublisherAddressImpl obj) {
                return obj.getStateOrProvince();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setStateOrProvince((String)value);
            }
        }
        ,
        ZipOrPostalCode {
            public Object get(PublisherAddressImpl obj) {
                return obj.getZipOrPostalCode();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setZipOrPostalCode((String)value);
            }
        }
        ,
        Country {
            public Object get(PublisherAddressImpl obj) {
                return obj.getCountry();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        DefaultFlag {
            public Object get(PublisherAddressImpl obj) {
                return obj.getDefaultFlag();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setDefaultFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PublisherAddressImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PublisherAddressImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(PublisherAddressImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(PublisherAddressImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        ZipPlusFour {
            public Object get(PublisherAddressImpl obj) {
                return obj.getZipPlusFour();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setZipPlusFour((String)value);
            }
        }
        ,
        VpId {
            public Object get(PublisherAddressImpl obj) {
                return obj.getVpId();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setVpId((Number)value);
            }
        }
        ,
        Publisher {
            public Object get(PublisherAddressImpl obj) {
                return obj.getPublisher();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setPublisher((PublisherImpl)value);
            }
        }
        ,
        OvrPublisher {
            public Object get(PublisherAddressImpl obj) {
                return obj.getOvrPublisher();
            }

            public void put(PublisherAddressImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PublisherAddressImpl object);

        public abstract void put(PublisherAddressImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PUBLISHERID = AttributesEnum.PublisherId.index();
    public static final int STREETADDRESS = AttributesEnum.StreetAddress.index();
    public static final int STREETADDRESS2 = AttributesEnum.StreetAddress2.index();
    public static final int CITY = AttributesEnum.City.index();
    public static final int STATEORPROVINCE = AttributesEnum.StateOrProvince.index();
    public static final int ZIPORPOSTALCODE = AttributesEnum.ZipOrPostalCode.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int DEFAULTFLAG = AttributesEnum.DefaultFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ZIPPLUSFOUR = AttributesEnum.ZipPlusFour.index();
    public static final int VPID = AttributesEnum.VpId.index();
    public static final int PUBLISHER = AttributesEnum.Publisher.index();
    public static final int OVRPUBLISHER = AttributesEnum.OvrPublisher.index();

    /**This is the default constructor (do not remove)
     */
    public PublisherAddressImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.PublisherAddress");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for PublisherId, using the alias name PublisherId
     */
    public Number getPublisherId() {
        return (Number)getAttributeInternal(PUBLISHERID);
    }

    /**Sets <code>value</code> as the attribute value for PublisherId
     */
    public void setPublisherId(Number value) {
        setAttributeInternal(PUBLISHERID, value);
    }

    /**Gets the attribute value for StreetAddress, using the alias name StreetAddress
     */
    public String getStreetAddress() {
        return (String)getAttributeInternal(STREETADDRESS);
    }

    /**Sets <code>value</code> as the attribute value for StreetAddress
     */
    public void setStreetAddress(String value) {
        setAttributeInternal(STREETADDRESS, value);
    }

    /**Gets the attribute value for StreetAddress2, using the alias name StreetAddress2
     */
    public String getStreetAddress2() {
        return (String)getAttributeInternal(STREETADDRESS2);
    }

    /**Sets <code>value</code> as the attribute value for StreetAddress2
     */
    public void setStreetAddress2(String value) {
        setAttributeInternal(STREETADDRESS2, value);
    }

    /**Gets the attribute value for City, using the alias name City
     */
    public String getCity() {
        return (String)getAttributeInternal(CITY);
    }

    /**Sets <code>value</code> as the attribute value for City
     */
    public void setCity(String value) {
        setAttributeInternal(CITY, value);
    }

    /**Gets the attribute value for StateOrProvince, using the alias name StateOrProvince
     */
    public String getStateOrProvince() {
        return (String)getAttributeInternal(STATEORPROVINCE);
    }

    /**Sets <code>value</code> as the attribute value for StateOrProvince
     */
    public void setStateOrProvince(String value) {
        setAttributeInternal(STATEORPROVINCE, value);
    }

    /**Gets the attribute value for ZipOrPostalCode, using the alias name ZipOrPostalCode
     */
    public String getZipOrPostalCode() {
        return (String)getAttributeInternal(ZIPORPOSTALCODE);
    }

    /**Sets <code>value</code> as the attribute value for ZipOrPostalCode
     */
    public void setZipOrPostalCode(String value) {
        setAttributeInternal(ZIPORPOSTALCODE, value);
    }

    /**Gets the attribute value for Country, using the alias name Country
     */
    public String getCountry() {
        return (String)getAttributeInternal(COUNTRY);
    }

    /**Sets <code>value</code> as the attribute value for Country
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**Gets the attribute value for DefaultFlag, using the alias name DefaultFlag
     */
    public String getDefaultFlag() {
        return (String)getAttributeInternal(DEFAULTFLAG);
    }

    /**Sets <code>value</code> as the attribute value for DefaultFlag
     */
    public void setDefaultFlag(String value) {
        setAttributeInternal(DEFAULTFLAG, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**Gets the attribute value for ZipPlusFour, using the alias name ZipPlusFour
     */
    public String getZipPlusFour() {
        return (String)getAttributeInternal(ZIPPLUSFOUR);
    }

    /**Sets <code>value</code> as the attribute value for ZipPlusFour
     */
    public void setZipPlusFour(String value) {
        setAttributeInternal(ZIPPLUSFOUR, value);
    }

    /**
     * Gets the attribute value for VpId, using the alias name VpId.
     * @return the VpId
     */
    public Number getVpId() {
        return (Number)getAttributeInternal(VPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VpId.
     * @param value value to set the VpId
     */
    public void setVpId(Number value) {
        setAttributeInternal(VPID, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**Gets the associated entity com.pq.tracs.model.bo.TracsBaseEntity
     */
    public PublisherImpl getPublisher() {
        return (PublisherImpl)getAttributeInternal(PUBLISHER);
    }

    /**Sets <code>value</code> as the associated entity com.pq.tracs.model.bo.TracsBaseEntity
     */
    public void setPublisher(PublisherImpl value) {
        setAttributeInternal(PUBLISHER, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getOvrPublisher() {
        return (RowIterator)getAttributeInternal(OVRPUBLISHER);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    protected void prepareForDML(int operation, TransactionEvent e) {
        super.prepareForDML(operation, e);

        try {
            if (operation == DML_INSERT || operation == DML_UPDATE) {
                if (getPublisher().getPublisherAddress().getRowCount() <= 1) {
                    this.setDefaultFlag("Y");
                }
            }
        } catch (Exception efg) {

        }
    }

    /**Validation method for PublisherAddress
     */
    public boolean validatePublisherAddressDefaultFlag() {
        if (this.getDefaultFlag().equalsIgnoreCase("Y")) {
            if (this.getPublisher() != null) {
                RowIterator addresses =
                    this.getPublisher().getPublisherAddress();
                if (addresses.getRowCount() < 2) {
                    return true;
                } else {
                    addresses.reset();
                    while (addresses.hasNext()) {
                        PublisherAddressImpl address =
                            (PublisherAddressImpl)addresses.next();

                        if ((this.getId() != null && address.getId() != null &&
                             address.getId().compareTo(this.getId()) != 0) ||
                            (this.getId() == null &&
                             address.getId() != null)) {
                            if (address.getDefaultFlag().equalsIgnoreCase("Y")) {
                                return false;
                            }
                        }
                    }
                }
            }
        }
        return true;
    }
    
  

}
