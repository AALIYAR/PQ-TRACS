package com.pq.tracs.model.bo;

import com.pq.tracs.model.eo.TraxContactMethodImpl;

import java.util.HashMap;
import java.util.Map;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContactImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
        this.setActiveFlag("Y");
        this.setSendNewsletterFlag("N");
        this.setNeverCallFlag("N");
        this.setNeverEmailFlag("N");
        this.setNeverMailFlag("N");
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ContactImpl obj) {
                return obj.getId();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(ContactImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        FirstName {
            public Object get(ContactImpl obj) {
                return obj.getFirstName();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        MiddleName {
            public Object get(ContactImpl obj) {
                return obj.getMiddleName();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setMiddleName((String)value);
            }
        }
        ,
        LastName {
            public Object get(ContactImpl obj) {
                return obj.getLastName();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        Title {
            public Object get(ContactImpl obj) {
                return obj.getTitle();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        Gender {
            public Object get(ContactImpl obj) {
                return obj.getGender();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setGender((String)value);
            }
        }
        ,
        Pronunciation {
            public Object get(ContactImpl obj) {
                return obj.getPronunciation();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setPronunciation((String)value);
            }
        }
        ,
        JobTitle {
            public Object get(ContactImpl obj) {
                return obj.getJobTitle();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setJobTitle((String)value);
            }
        }
        ,
        Email {
            public Object get(ContactImpl obj) {
                return obj.getEmail();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setEmail((String)value);
            }
        }
        ,
        WorkPhone {
            public Object get(ContactImpl obj) {
                return obj.getWorkPhone();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setWorkPhone((String)value);
            }
        }
        ,
        WorkFax {
            public Object get(ContactImpl obj) {
                return obj.getWorkFax();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setWorkFax((String)value);
            }
        }
        ,
        MobilePhone {
            public Object get(ContactImpl obj) {
                return obj.getMobilePhone();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setMobilePhone((String)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(ContactImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        SendNewsletterFlag {
            public Object get(ContactImpl obj) {
                return obj.getSendNewsletterFlag();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setSendNewsletterFlag((String)value);
            }
        }
        ,
        NeverMailFlag {
            public Object get(ContactImpl obj) {
                return obj.getNeverMailFlag();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setNeverMailFlag((String)value);
            }
        }
        ,
        NeverEmailFlag {
            public Object get(ContactImpl obj) {
                return obj.getNeverEmailFlag();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setNeverEmailFlag((String)value);
            }
        }
        ,
        NeverCallFlag {
            public Object get(ContactImpl obj) {
                return obj.getNeverCallFlag();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setNeverCallFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ContactImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(ContactImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(ContactImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(ContactImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        Timezone {
            public Object get(ContactImpl obj) {
                return obj.getTimezone();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setTimezone((String)value);
            }
        }
        ,
        AddressId {
            public Object get(ContactImpl obj) {
                return obj.getAddressId();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setAddressId((Number)value);
            }
        }
        ,
        JobRole {
            public Object get(ContactImpl obj) {
                return obj.getJobRole();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setJobRole((String)value);
            }
        }
        ,
        Notes {
            public Object get(ContactImpl obj) {
                return obj.getNotes();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setNotes((String)value);
            }
        }
        ,
        RoyaltyInformation {
            public Object get(ContactImpl obj) {
                return obj.getRoyaltyInformation();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Contract {
            public Object get(ContactImpl obj) {
                return obj.getContract();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Contract2 {
            public Object get(ContactImpl obj) {
                return obj.getContract2();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxContactMethod {
            public Object get(ContactImpl obj) {
                return obj.getTraxContactMethod();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxContentOwnerContact {
            public Object get(ContactImpl obj) {
                return obj.getTraxContentOwnerContact();
            }

            public void put(ContactImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ContactImpl object);

        public abstract void put(ContactImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int PRONUNCIATION = AttributesEnum.Pronunciation.index();
    public static final int JOBTITLE = AttributesEnum.JobTitle.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int WORKPHONE = AttributesEnum.WorkPhone.index();
    public static final int WORKFAX = AttributesEnum.WorkFax.index();
    public static final int MOBILEPHONE = AttributesEnum.MobilePhone.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int SENDNEWSLETTERFLAG = AttributesEnum.SendNewsletterFlag.index();
    public static final int NEVERMAILFLAG = AttributesEnum.NeverMailFlag.index();
    public static final int NEVEREMAILFLAG = AttributesEnum.NeverEmailFlag.index();
    public static final int NEVERCALLFLAG = AttributesEnum.NeverCallFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int TIMEZONE = AttributesEnum.Timezone.index();
    public static final int ADDRESSID = AttributesEnum.AddressId.index();
    public static final int JOBROLE = AttributesEnum.JobRole.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int ROYALTYINFORMATION = AttributesEnum.RoyaltyInformation.index();
    public static final int CONTRACT = AttributesEnum.Contract.index();
    public static final int CONTRACT2 = AttributesEnum.Contract2.index();
    public static final int TRAXCONTACTMETHOD = AttributesEnum.TraxContactMethod.index();
    public static final int TRAXCONTENTOWNERCONTACT = AttributesEnum.TraxContentOwnerContact.index();

    /**This is the default constructor (do not remove)
     */
    public ContactImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.Contact");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for ContentOwnerId, using the alias name ContentOwnerId
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**Sets <code>value</code> as the attribute value for ContentOwnerId
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**Gets the attribute value for FirstName, using the alias name FirstName
     */
    public String getFirstName() {
        return (String)getAttributeInternal(FIRSTNAME);
    }

    /**Sets <code>value</code> as the attribute value for FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**Gets the attribute value for MiddleName, using the alias name MiddleName
     */
    public String getMiddleName() {
        return (String)getAttributeInternal(MIDDLENAME);
    }

    /**Sets <code>value</code> as the attribute value for MiddleName
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**Gets the attribute value for LastName, using the alias name LastName
     */
    public String getLastName() {
        return (String)getAttributeInternal(LASTNAME);
    }

    /**Sets <code>value</code> as the attribute value for LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**Gets the attribute value for Title, using the alias name Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**Sets <code>value</code> as the attribute value for Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**Gets the attribute value for Gender, using the alias name Gender
     */
    public String getGender() {
        return (String)getAttributeInternal(GENDER);
    }

    /**Sets <code>value</code> as the attribute value for Gender
     */
    public void setGender(String value) {
        setAttributeInternal(GENDER, value);
    }

    /**Gets the attribute value for Pronunciation, using the alias name Pronunciation
     */
    public String getPronunciation() {
        return (String)getAttributeInternal(PRONUNCIATION);
    }

    /**Sets <code>value</code> as the attribute value for Pronunciation
     */
    public void setPronunciation(String value) {
        setAttributeInternal(PRONUNCIATION, value);
    }

    /**Gets the attribute value for JobTitle, using the alias name JobTitle
     */
    public String getJobTitle() {
        return (String)getAttributeInternal(JOBTITLE);
    }

    /**Sets <code>value</code> as the attribute value for JobTitle
     */
    public void setJobTitle(String value) {
        setAttributeInternal(JOBTITLE, value);
    }

    /**Gets the attribute value for Email, using the alias name Email
     */
    public String getEmail() {
        return (String)getAttributeInternal(EMAIL);
    }

    /**Sets <code>value</code> as the attribute value for Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**Gets the attribute value for WorkPhone, using the alias name WorkPhone
     */
    public String getWorkPhone() {
        return (String)getAttributeInternal(WORKPHONE);
    }

    /**Sets <code>value</code> as the attribute value for WorkPhone
     */
    public void setWorkPhone(String value) {
        setAttributeInternal(WORKPHONE, value);
    }

    /**Gets the attribute value for WorkFax, using the alias name WorkFax
     */
    public String getWorkFax() {
        return (String)getAttributeInternal(WORKFAX);
    }

    /**Sets <code>value</code> as the attribute value for WorkFax
     */
    public void setWorkFax(String value) {
        setAttributeInternal(WORKFAX, value);
    }

    /**Gets the attribute value for MobilePhone, using the alias name MobilePhone
     */
    public String getMobilePhone() {
        return (String)getAttributeInternal(MOBILEPHONE);
    }

    /**Sets <code>value</code> as the attribute value for MobilePhone
     */
    public void setMobilePhone(String value) {
        setAttributeInternal(MOBILEPHONE, value);
    }

    /**Gets the attribute value for ActiveFlag, using the alias name ActiveFlag
     */
    public String getActiveFlag() {
        return (String)getAttributeInternal(ACTIVEFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**Gets the attribute value for SendNewsletterFlag, using the alias name SendNewsletterFlag
     */
    public String getSendNewsletterFlag() {
        return (String)getAttributeInternal(SENDNEWSLETTERFLAG);
    }

    /**Sets <code>value</code> as the attribute value for SendNewsletterFlag
     */
    public void setSendNewsletterFlag(String value) {
        setAttributeInternal(SENDNEWSLETTERFLAG, value);
    }

    /**Gets the attribute value for NeverMailFlag, using the alias name NeverMailFlag
     */
    public String getNeverMailFlag() {
        return (String)getAttributeInternal(NEVERMAILFLAG);
    }

    /**Sets <code>value</code> as the attribute value for NeverMailFlag
     */
    public void setNeverMailFlag(String value) {
        setAttributeInternal(NEVERMAILFLAG, value);
    }

    /**Gets the attribute value for NeverEmailFlag, using the alias name NeverEmailFlag
     */
    public String getNeverEmailFlag() {
        return (String)getAttributeInternal(NEVEREMAILFLAG);
    }

    /**Sets <code>value</code> as the attribute value for NeverEmailFlag
     */
    public void setNeverEmailFlag(String value) {
        setAttributeInternal(NEVEREMAILFLAG, value);
    }

    /**Gets the attribute value for NeverCallFlag, using the alias name NeverCallFlag
     */
    public String getNeverCallFlag() {
        return (String)getAttributeInternal(NEVERCALLFLAG);
    }

    /**Sets <code>value</code> as the attribute value for NeverCallFlag
     */
    public void setNeverCallFlag(String value) {
        setAttributeInternal(NEVERCALLFLAG, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**Gets the attribute value for Timezone, using the alias name Timezone
     */
    public String getTimezone() {
        return (String)getAttributeInternal(TIMEZONE);
    }

    /**Sets <code>value</code> as the attribute value for Timezone
     */
    public void setTimezone(String value) {
        setAttributeInternal(TIMEZONE, value);
    }

    /**Gets the attribute value for AddressId, using the alias name AddressId
     */
    public Number getAddressId() {
        return (Number)getAttributeInternal(ADDRESSID);
    }

    /**Sets <code>value</code> as the attribute value for AddressId
     */
    public void setAddressId(Number value) {
        setAttributeInternal(ADDRESSID, value);
    }

    /**Gets the attribute value for JobRole, using the alias name JobRole
     */
    public String getJobRole() {
        return (String)getAttributeInternal(JOBROLE);
    }

    /**Sets <code>value</code> as the attribute value for JobRole
     */
    public void setJobRole(String value) {
        setAttributeInternal(JOBROLE, value);
    }

    /**
     * Gets the attribute value for Notes, using the alias name Notes.
     * @return the Notes
     */
    public String getNotes() {
        return (String)getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Notes.
     * @param value value to set the Notes
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getRoyaltyInformation() {
        return (RowIterator)getAttributeInternal(ROYALTYINFORMATION);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContract() {
        return (RowIterator)getAttributeInternal(CONTRACT);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContract2() {
        return (RowIterator)getAttributeInternal(CONTRACT2);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxContactMethod() {
        return (RowIterator)getAttributeInternal(TRAXCONTACTMETHOD);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxContentOwnerContact() {
        return (RowIterator)getAttributeInternal(TRAXCONTENTOWNERCONTACT);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * Validation method for Contact.
     */
    public boolean validateContactMethod() {
        // create hash list
               Map<String, String> map = new HashMap<String, String>();


              // get contact method iterator

              RowIterator methodIter = this.getTraxContactMethod();

              // loop through iterator
               while (methodIter.hasNext()) {
                   TraxContactMethodImpl cm =
                       (TraxContactMethodImpl)methodIter.next();


                  // if method type is primary

                  if (cm.getPrimaryFlag().equalsIgnoreCase("Y")) {

                       // look for method type in list
                       // if method type exists in list, FAIL

                      if (map.containsKey(cm.getContactMethod()) == true) {

                           return false;
                       }
                       // else, add method type to list

                      map.put(cm.getContactMethod(), cm.getPrimaryFlag());
                   }


              }
               // finish iterator loop
               return true;
           }
    
    public void setInvalid() {
        super.setInvalid();
    }

    protected void validateEntity() {
        super.validateEntity();
    }


}
