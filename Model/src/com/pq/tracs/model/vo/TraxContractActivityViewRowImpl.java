package com.pq.tracs.model.vo;

import com.pq.tracs.model.bo.ActivityImpl;
import com.pq.tracs.model.bo.TracsBaseEntity;
import com.pq.tracs.model.eo.TraxActivityContentOwnerImpl;
import com.pq.tracs.model.eo.TraxActivityContractImpl;
import com.pq.tracs.model.eo.TraxActivityUserImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowCreateException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 15 18:46:39 EDT 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxContractActivityViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        JhsUsersId {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getJhsUsersId();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setJhsUsersId((Number)value);
            }
        }
        ,
        Type {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getType();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setType((String)value);
            }
        }
        ,
        SubType {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getSubType();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setSubType((String)value);
            }
        }
        ,
        Description {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        Owner {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getOwner();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setOwner((String)value);
            }
        }
        ,
        Status {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getStatus();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        Priority {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getPriority();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setPriority((String)value);
            }
        }
        ,
        DueDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getDueDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setDueDate((Date)value);
            }
        }
        ,
        ExpectedStartDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getExpectedStartDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setExpectedStartDate((Date)value);
            }
        }
        ,
        ActualStartDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getActualStartDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setActualStartDate((Date)value);
            }
        }
        ,
        CompletionDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getCompletionDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setCompletionDate((Date)value);
            }
        }
        ,
        HoursSpent {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getHoursSpent();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setHoursSpent((Number)value);
            }
        }
        ,
        Notes {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getNotes();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setNotes((String)value);
            }
        }
        ,
        PrimaryFlag {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getPrimaryFlag();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setPrimaryFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        AddedDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getAddedDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAddedDate((Date)value);
            }
        }
        ,
        RemovedDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getRemovedDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setRemovedDate((Date)value);
            }
        }
        ,
        UserType {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getUserType();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setUserType((String)value);
            }
        }
        ,
        AddDate {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getAddDate();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAddDate((Date)value);
            }
        }
        ,
        Id1 {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getId1();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setId1((Number)value);
            }
        }
        ,
        ActivityId {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getActivityId();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setActivityId((Number)value);
            }
        }
        ,
        ContractId {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getContractId();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setContractId((Number)value);
            }
        }
        ,
        Id2 {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getId2();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setId2((Number)value);
            }
        }
        ,
        ActivityId1 {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getActivityId1();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setActivityId1((Number)value);
            }
        }
        ,
        RemovedDate1 {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getRemovedDate1();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setRemovedDate1((Date)value);
            }
        }
        ,
        Id3 {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getId3();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setId3((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        PrimaryFlag1 {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getPrimaryFlag1();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setPrimaryFlag1((String)value);
            }
        }
        ,
        AddedDate1 {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getAddedDate1();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAddedDate1((Date)value);
            }
        }
        ,
        ContractView {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getContractView();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActivityStatusLookup {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getActivityStatusLookup();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActivityPriorityLookup {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getActivityPriorityLookup();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActivityTypeLookup {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getActivityTypeLookup();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActivitySubType1Lookup {
            public Object get(TraxContractActivityViewRowImpl obj) {
                return obj.getActivitySubType1Lookup();
            }

            public void put(TraxContractActivityViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxContractActivityViewRowImpl object);

        public abstract void put(TraxContractActivityViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int JHSUSERSID = AttributesEnum.JhsUsersId.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int SUBTYPE = AttributesEnum.SubType.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int OWNER = AttributesEnum.Owner.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int DUEDATE = AttributesEnum.DueDate.index();
    public static final int EXPECTEDSTARTDATE = AttributesEnum.ExpectedStartDate.index();
    public static final int ACTUALSTARTDATE = AttributesEnum.ActualStartDate.index();
    public static final int COMPLETIONDATE = AttributesEnum.CompletionDate.index();
    public static final int HOURSSPENT = AttributesEnum.HoursSpent.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int PRIMARYFLAG = AttributesEnum.PrimaryFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ADDEDDATE = AttributesEnum.AddedDate.index();
    public static final int REMOVEDDATE = AttributesEnum.RemovedDate.index();
    public static final int USERTYPE = AttributesEnum.UserType.index();
    public static final int ADDDATE = AttributesEnum.AddDate.index();
    public static final int ID1 = AttributesEnum.Id1.index();
    public static final int ACTIVITYID = AttributesEnum.ActivityId.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int ID2 = AttributesEnum.Id2.index();
    public static final int ACTIVITYID1 = AttributesEnum.ActivityId1.index();
    public static final int REMOVEDDATE1 = AttributesEnum.RemovedDate1.index();
    public static final int ID3 = AttributesEnum.Id3.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int PRIMARYFLAG1 = AttributesEnum.PrimaryFlag1.index();
    public static final int ADDEDDATE1 = AttributesEnum.AddedDate1.index();
    public static final int CONTRACTVIEW = AttributesEnum.ContractView.index();
    public static final int ACTIVITYSTATUSLOOKUP = AttributesEnum.ActivityStatusLookup.index();
    public static final int ACTIVITYPRIORITYLOOKUP = AttributesEnum.ActivityPriorityLookup.index();
    public static final int ACTIVITYTYPELOOKUP = AttributesEnum.ActivityTypeLookup.index();
    public static final int ACTIVITYSUBTYPE1LOOKUP = AttributesEnum.ActivitySubType1Lookup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxContractActivityViewRowImpl() {
    }

    /**
     * Gets TraxActivityContract entity object.
     * @return the TraxActivityContract
     */
    public TraxActivityContractImpl getTraxActivityContract() {
        return (TraxActivityContractImpl)getEntity(0);
    }

    /**
     * Gets Activity entity object.
     * @return the Activity
     */
    public ActivityImpl getActivity() {
        return (ActivityImpl)getEntity(1);
    }

    /**
     * Gets TraxActivityUser entity object.
     * @return the TraxActivityUser
     */
    public TraxActivityUserImpl getTraxActivityUser() {
        return (TraxActivityUserImpl)getEntity(2);
    }

    /**
     * Gets TraxActivityContentOwner entity object.
     * @return the TraxActivityContentOwner
     */
    public TraxActivityContentOwnerImpl getTraxActivityContentOwner() {
        return (TraxActivityContentOwnerImpl)getEntity(3);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for TYPE using the alias name Type.
     * @return the TYPE
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPE using the alias name Type.
     * @param value value to set the TYPE
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for SUB_TYPE using the alias name SubType.
     * @return the SUB_TYPE
     */
    public String getSubType() {
        return (String) getAttributeInternal(SUBTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUB_TYPE using the alias name SubType.
     * @param value value to set the SUB_TYPE
     */
    public void setSubType(String value) {
        setAttributeInternal(SUBTYPE, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for STATUS using the alias name Status.
     * @return the STATUS
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS using the alias name Status.
     * @param value value to set the STATUS
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public String getPriority() {
        return (String) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(String value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for DUE_DATE using the alias name DueDate.
     * @return the DUE_DATE
     */
    public Date getDueDate() {
        return (Date) getAttributeInternal(DUEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DUE_DATE using the alias name DueDate.
     * @param value value to set the DUE_DATE
     */
    public void setDueDate(Date value) {
        setAttributeInternal(DUEDATE, value);
    }

    /**
     * Gets the attribute value for EXPECTED_START_DATE using the alias name ExpectedStartDate.
     * @return the EXPECTED_START_DATE
     */
    public Date getExpectedStartDate() {
        return (Date) getAttributeInternal(EXPECTEDSTARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPECTED_START_DATE using the alias name ExpectedStartDate.
     * @param value value to set the EXPECTED_START_DATE
     */
    public void setExpectedStartDate(Date value) {
        setAttributeInternal(EXPECTEDSTARTDATE, value);
    }

    /**
     * Gets the attribute value for ACTUAL_START_DATE using the alias name ActualStartDate.
     * @return the ACTUAL_START_DATE
     */
    public Date getActualStartDate() {
        return (Date) getAttributeInternal(ACTUALSTARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_START_DATE using the alias name ActualStartDate.
     * @param value value to set the ACTUAL_START_DATE
     */
    public void setActualStartDate(Date value) {
        setAttributeInternal(ACTUALSTARTDATE, value);
    }

    /**
     * Gets the attribute value for COMPLETION_DATE using the alias name CompletionDate.
     * @return the COMPLETION_DATE
     */
    public Date getCompletionDate() {
        return (Date) getAttributeInternal(COMPLETIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPLETION_DATE using the alias name CompletionDate.
     * @param value value to set the COMPLETION_DATE
     */
    public void setCompletionDate(Date value) {
        setAttributeInternal(COMPLETIONDATE, value);
    }

    /**
     * Gets the attribute value for HOURS_SPENT using the alias name HoursSpent.
     * @return the HOURS_SPENT
     */
    public Number getHoursSpent() {
        return (Number) getAttributeInternal(HOURSSPENT);
    }

    /**
     * Sets <code>value</code> as attribute value for HOURS_SPENT using the alias name HoursSpent.
     * @param value value to set the HOURS_SPENT
     */
    public void setHoursSpent(Number value) {
        setAttributeInternal(HOURSSPENT, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }


    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id1.
     * @return the ID
     */
    public Number getId1() {
        return (Number) getAttributeInternal(ID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id1.
     * @param value value to set the ID
     */
    public void setId1(Number value) {
        setAttributeInternal(ID1, value);
    }

    /**
     * Gets the attribute value for ACTIVITY_ID using the alias name ActivityId.
     * @return the ACTIVITY_ID
     */
    public Number getActivityId() {
        return (Number) getAttributeInternal(ACTIVITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVITY_ID using the alias name ActivityId.
     * @param value value to set the ACTIVITY_ID
     */
    public void setActivityId(Number value) {
        setAttributeInternal(ACTIVITYID, value);
    }

    /**
     * Gets the attribute value for CONTRACT_ID using the alias name ContractId.
     * @return the CONTRACT_ID
     */
    public Number getContractId() {
        return (Number) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTRACT_ID using the alias name ContractId.
     * @param value value to set the CONTRACT_ID
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for PRIMARY_FLAG using the alias name PrimaryFlag.
     * @return the PRIMARY_FLAG
     */
    public String getPrimaryFlag() {
        return (String) getAttributeInternal(PRIMARYFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIMARY_FLAG using the alias name PrimaryFlag.
     * @param value value to set the PRIMARY_FLAG
     */
    public void setPrimaryFlag(String value) {
        setAttributeInternal(PRIMARYFLAG, value);
    }

    /**
     * Gets the attribute value for ADDED_DATE using the alias name AddedDate.
     * @return the ADDED_DATE
     */
    public Date getAddedDate() {
        return (Date) getAttributeInternal(ADDEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDED_DATE using the alias name AddedDate.
     * @param value value to set the ADDED_DATE
     */
    public void setAddedDate(Date value) {
        setAttributeInternal(ADDEDDATE, value);
    }

    /**
     * Gets the attribute value for REMOVED_DATE using the alias name RemovedDate.
     * @return the REMOVED_DATE
     */
    public Date getRemovedDate() {
        return (Date) getAttributeInternal(REMOVEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for REMOVED_DATE using the alias name RemovedDate.
     * @param value value to set the REMOVED_DATE
     */
    public void setRemovedDate(Date value) {
        setAttributeInternal(REMOVEDDATE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id2.
     * @return the ID
     */
    public Number getId2() {
        return (Number) getAttributeInternal(ID2);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id2.
     * @param value value to set the ID
     */
    public void setId2(Number value) {
        setAttributeInternal(ID2, value);
    }

    /**
     * Gets the attribute value for ACTIVITY_ID using the alias name ActivityId1.
     * @return the ACTIVITY_ID
     */
    public Number getActivityId1() {
        return (Number) getAttributeInternal(ACTIVITYID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVITY_ID using the alias name ActivityId1.
     * @param value value to set the ACTIVITY_ID
     */
    public void setActivityId1(Number value) {
        setAttributeInternal(ACTIVITYID1, value);
    }

    /**
     * Gets the attribute value for JHS_USERS_ID using the alias name JhsUsersId.
     * @return the JHS_USERS_ID
     */
    public Number getJhsUsersId() {
        return (Number) getAttributeInternal(JHSUSERSID);
    }

    /**
     * Sets <code>value</code> as attribute value for JHS_USERS_ID using the alias name JhsUsersId.
     * @param value value to set the JHS_USERS_ID
     */
    public void setJhsUsersId(Number value) {
        setAttributeInternal(JHSUSERSID, value);
    }

    /**
     * Gets the attribute value for USER_TYPE using the alias name UserType.
     * @return the USER_TYPE
     */
    public String getUserType() {
        return (String) getAttributeInternal(USERTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_TYPE using the alias name UserType.
     * @param value value to set the USER_TYPE
     */
    public void setUserType(String value) {
        setAttributeInternal(USERTYPE, value);
    }

    /**
     * Gets the attribute value for ADD_DATE using the alias name AddDate.
     * @return the ADD_DATE
     */
    public Date getAddDate() {
        return (Date) getAttributeInternal(ADDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADD_DATE using the alias name AddDate.
     * @param value value to set the ADD_DATE
     */
    public void setAddDate(Date value) {
        setAttributeInternal(ADDDATE, value);
    }

    /**
     * Gets the attribute value for REMOVED_DATE using the alias name RemovedDate1.
     * @return the REMOVED_DATE
     */
    public Date getRemovedDate1() {
        return (Date) getAttributeInternal(REMOVEDDATE1);
    }

    /**
     * Sets <code>value</code> as attribute value for REMOVED_DATE using the alias name RemovedDate1.
     * @param value value to set the REMOVED_DATE
     */
    public void setRemovedDate1(Date value) {
        setAttributeInternal(REMOVEDDATE1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Owner.
     * @return the Owner
     */
    public String getOwner() {
        return (String) getAttributeInternal(OWNER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Owner.
     * @param value value to set the  Owner
     */
    public void setOwner(String value) {
        setAttributeInternal(OWNER, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id3.
     * @return the ID
     */
    public Number getId3() {
        return (Number)getAttributeInternal(ID3);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id3.
     * @param value value to set the ID
     */
    public void setId3(Number value) {
        setAttributeInternal(ID3, value);
    }

    /**
     * Gets the attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @return the CONTENT_OWNER_ID
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT_OWNER_ID using the alias name ContentOwnerId.
     * @param value value to set the CONTENT_OWNER_ID
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**
     * Gets the attribute value for PRIMARY_FLAG using the alias name PrimaryFlag1.
     * @return the PRIMARY_FLAG
     */
    public String getPrimaryFlag1() {
        return (String) getAttributeInternal(PRIMARYFLAG1);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIMARY_FLAG using the alias name PrimaryFlag1.
     * @param value value to set the PRIMARY_FLAG
     */
    public void setPrimaryFlag1(String value) {
        setAttributeInternal(PRIMARYFLAG1, value);
    }

    /**
     * Gets the attribute value for ADDED_DATE using the alias name AddedDate1.
     * @return the ADDED_DATE
     */
    public Date getAddedDate1() {
        return (Date)getAttributeInternal(ADDEDDATE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDED_DATE using the alias name AddedDate1.
     * @param value value to set the ADDED_DATE
     */
    public void setAddedDate1(Date value) {
        setAttributeInternal(ADDEDDATE1, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ContractView.
     */
    public Row getContractView() {
        return (Row)getAttributeInternal(CONTRACTVIEW);
    }

    /**
     * Sets the master-detail link ContractView between this object and <code>value</code>.
     */
    public void setContractView(Row value) {
        setAttributeInternal(CONTRACTVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ActivityStatusLookup.
     */
    public RowSet getActivityStatusLookup() {
        return (RowSet)getAttributeInternal(ACTIVITYSTATUSLOOKUP);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ActivityPriorityLookup.
     */
    public RowSet getActivityPriorityLookup() {
        return (RowSet)getAttributeInternal(ACTIVITYPRIORITYLOOKUP);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ActivityTypeLookup.
     */
    public RowSet getActivityTypeLookup() {
        return (RowSet)getAttributeInternal(ACTIVITYTYPELOOKUP);
    }


    /**
     * Gets the view accessor <code>RowSet</code> ActivitySubType1Lookup.
     */
    public RowSet getActivitySubType1Lookup() {
        return (RowSet)getAttributeInternal(ACTIVITYSUBTYPE1LOOKUP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
  protected void create(AttributeList attributeList) {
    // The view row will already have created "blank" entity instances
    ActivityImpl newActivity = this.getActivity();
    TraxActivityContractImpl newActivityContract = (TraxActivityContractImpl)this.getTraxActivityContract();
    TraxActivityUserImpl newActivityUser = this.getTraxActivityUser();
    TraxActivityContentOwnerImpl newActivityContentOwner = (TraxActivityContentOwnerImpl)this.getTraxActivityContentOwner();
    try {
        // Let event "blank" entity instance do programmatic defaulting
        newActivity.create(attributeList);
        // Let event content owner "blank" entity instance do programmatic
        // defaulting passing in new TraxEventImpl instance so its attributes
        // are available to the TraxEventContentOwnerImpl's create method.
        newActivityContract.create(newActivity);
        newActivityContract.setActivityId(newActivity.getId());
        
        // create the activity user row and set the user type to Owner
        newActivityUser.create(newActivity);
        newActivityUser.setActivityId(newActivity.getId());
        newActivityUser.setUserType("Owner");
        this.setOwner(newActivityUser.getUserDisplayName());
          
        newActivityContentOwner.create(newActivity);
        newActivityContentOwner.setActivityId(newActivity.getId());
        newActivityContentOwner.setContentOwnerId((Number)this.getContractView().getAttribute("ContentOwnerId"));
        newActivityContentOwner.setPrimaryFlag("Y");
        newActivityContentOwner.setAddedDate((Date)Date.getCurrentDate());
                
     }
     catch (JboException ex) {
       newActivity.revert();
       newActivityContract.revert();
       newActivityUser.revert();
        newActivityContentOwner.revert();
       throw ex;
     }
     catch (Exception otherEx) {
       newActivity.revert();
       newActivityContract.revert();
       newActivityUser.revert();    
        newActivityContentOwner.revert();  
       throw new RowCreateException(true      /* EO Row? */,
                                    "ContractActivity" /* EO Name */,
                                    otherEx   /* Details */);
     }
  }
  
}
