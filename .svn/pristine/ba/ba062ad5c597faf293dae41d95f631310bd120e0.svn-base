package com.pq.tracs.model.bo;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractRightCategoryImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getId();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContractRightId {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getContractRightId();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setContractRightId((Number)value);
            }
        }
        ,
        CategoryId {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getCategoryId();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setCategoryId((Number)value);
            }
        }
        ,
        Name {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getName();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Value {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getValue();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setValue((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        FullOrPartial {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getFullOrPartial();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setFullOrPartial((String)value);
            }
        }
        ,
        PermitFlag {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getPermitFlag();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setPermitFlag((String)value);
            }
        }
        ,
        SubcategoryValue {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getSubcategoryValue();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setSubcategoryValue((String)value);
            }
        }
        ,
        SubcategoryValuePermitFlag {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getSubcategoryValuePermitFlag();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setSubcategoryValuePermitFlag((String)value);
            }
        }
        ,
        ContractRight {
            public Object get(ContractRightCategoryImpl obj) {
                return obj.getContractRight();
            }

            public void put(ContractRightCategoryImpl obj, Object value) {
                obj.setContractRight((ContractRightImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ContractRightCategoryImpl object);

        public abstract void put(ContractRightCategoryImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTRACTRIGHTID = AttributesEnum.ContractRightId.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int FULLORPARTIAL = AttributesEnum.FullOrPartial.index();
    public static final int PERMITFLAG = AttributesEnum.PermitFlag.index();
    public static final int SUBCATEGORYVALUE = AttributesEnum.SubcategoryValue.index();
    public static final int SUBCATEGORYVALUEPERMITFLAG = AttributesEnum.SubcategoryValuePermitFlag.index();
    public static final int CONTRACTRIGHT = AttributesEnum.ContractRight.index();

    /**This is the default constructor (do not remove)
     */
    public ContractRightCategoryImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.ContractRightCategory");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for ContractRightId, using the alias name ContractRightId
     */
    public Number getContractRightId() {
        return (Number)getAttributeInternal(CONTRACTRIGHTID);
    }

    /**Sets <code>value</code> as the attribute value for ContractRightId
     */
    public void setContractRightId(Number value) {
        setAttributeInternal(CONTRACTRIGHTID, value);
    }

    /**Gets the attribute value for CategoryId, using the alias name CategoryId
     */
    public Number getCategoryId() {
        return (Number)getAttributeInternal(CATEGORYID);
    }

    /**Sets <code>value</code> as the attribute value for CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**Gets the attribute value for Name, using the alias name Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**Sets <code>value</code> as the attribute value for Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**Gets the attribute value for Value, using the alias name Value
     */
    public String getValue() {
        return (String)getAttributeInternal(VALUE);
    }

    /**Sets <code>value</code> as the attribute value for Value
     */
    public void setValue(String value) {
        setAttributeInternal(VALUE, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**Gets the associated entity ContractRightImpl
     */
    public ContractRightImpl getContractRight() {
        return (ContractRightImpl)getAttributeInternal(CONTRACTRIGHT);
    }

    /**Sets <code>value</code> as the associated entity ContractRightImpl
     */
    public void setContractRight(ContractRightImpl value) {
        setAttributeInternal(CONTRACTRIGHT, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**Gets the attribute value for FullOrPartial, using the alias name FullOrPartial
     */
    public String getFullOrPartial() {
        return (String)getAttributeInternal(FULLORPARTIAL);
    }

    /**Sets <code>value</code> as the attribute value for FullOrPartial
     */
    public void setFullOrPartial(String value) {
        setAttributeInternal(FULLORPARTIAL, value);
    }

    /**Gets the attribute value for PermitFlag, using the alias name PermitFlag
     */
    public String getPermitFlag() {
        return (String)getAttributeInternal(PERMITFLAG);
    }

    /**Sets <code>value</code> as the attribute value for PermitFlag
     */
    public void setPermitFlag(String value) {
        setAttributeInternal(PERMITFLAG, value);
    }

    /**
     * Gets the attribute value for SubcategoryValue, using the alias name SubcategoryValue.
     * @return the SubcategoryValue
     */
    public String getSubcategoryValue() {
        return (String)getAttributeInternal(SUBCATEGORYVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubcategoryValue.
     * @param value value to set the SubcategoryValue
     */
    public void setSubcategoryValue(String value) {
        setAttributeInternal(SUBCATEGORYVALUE, value);
    }

    /**
     * Gets the attribute value for SubcategoryValuePermitFlag, using the alias name SubcategoryValuePermitFlag.
     * @return the SubcategoryValuePermitFlag
     */
    public String getSubcategoryValuePermitFlag() {
        return (String)getAttributeInternal(SUBCATEGORYVALUEPERMITFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubcategoryValuePermitFlag.
     * @param value value to set the SubcategoryValuePermitFlag
     */
    public void setSubcategoryValuePermitFlag(String value) {
        setAttributeInternal(SUBCATEGORYVALUEPERMITFLAG, value);
    }

}
