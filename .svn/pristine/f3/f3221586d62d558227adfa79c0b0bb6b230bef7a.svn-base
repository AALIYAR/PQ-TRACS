package com.pq.tracs.model.bo;

import com.pq.tracs.model.dao.TitleContentOwnerViewRowImpl;
import com.pq.tracs.model.eo.TraxTitleUlrichsRelationImpl;
import com.pq.tracs.model.services.TracsServiceImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TitleImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TitleImpl obj) {
                return obj.getId();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(TitleImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        LongTitle {
            public Object get(TitleImpl obj) {
                return obj.getLongTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setLongTitle((String)value);
            }
        }
        ,
        CatalogNumber {
            public Object get(TitleImpl obj) {
                return obj.getCatalogNumber();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCatalogNumber((String)value);
            }
        }
        ,
        CatalogPrefix {
            public Object get(TitleImpl obj) {
                return obj.getCatalogPrefix();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCatalogPrefix((String)value);
            }
        }
        ,
        CatalogRoot {
            public Object get(TitleImpl obj) {
                return obj.getCatalogRoot();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCatalogRoot((String)value);
            }
        }
        ,
        CatalogSuffix {
            public Object get(TitleImpl obj) {
                return obj.getCatalogSuffix();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCatalogSuffix((String)value);
            }
        }
        ,
        Author {
            public Object get(TitleImpl obj) {
                return obj.getAuthor();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAuthor((String)value);
            }
        }
        ,
        CurrentCatalogNumber {
            public Object get(TitleImpl obj) {
                return obj.getCurrentCatalogNumber();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCurrentCatalogNumber((String)value);
            }
        }
        ,
        CurrentCatalogPrefix {
            public Object get(TitleImpl obj) {
                return obj.getCurrentCatalogPrefix();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCurrentCatalogPrefix((String)value);
            }
        }
        ,
        CurrentCatalogRoot {
            public Object get(TitleImpl obj) {
                return obj.getCurrentCatalogRoot();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCurrentCatalogRoot((String)value);
            }
        }
        ,
        CurrentCatalogSuffix {
            public Object get(TitleImpl obj) {
                return obj.getCurrentCatalogSuffix();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCurrentCatalogSuffix((String)value);
            }
        }
        ,
        PublicationStartYear {
            public Object get(TitleImpl obj) {
                return obj.getPublicationStartYear();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPublicationStartYear((String)value);
            }
        }
        ,
        PublicationEndYear {
            public Object get(TitleImpl obj) {
                return obj.getPublicationEndYear();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPublicationEndYear((String)value);
            }
        }
        ,
        ShortTitle {
            public Object get(TitleImpl obj) {
                return obj.getShortTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setShortTitle((String)value);
            }
        }
        ,
        FilmAvailability {
            public Object get(TitleImpl obj) {
                return obj.getFilmAvailability();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setFilmAvailability((String)value);
            }
        }
        ,
        BibliographicStatus {
            public Object get(TitleImpl obj) {
                return obj.getBibliographicStatus();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setBibliographicStatus((String)value);
            }
        }
        ,
        TitleDescription {
            public Object get(TitleImpl obj) {
                return obj.getTitleDescription();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setTitleDescription((String)value);
            }
        }
        ,
        SecondaryCatalogNumber {
            public Object get(TitleImpl obj) {
                return obj.getSecondaryCatalogNumber();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setSecondaryCatalogNumber((String)value);
            }
        }
        ,
        OriginalPublishingCo {
            public Object get(TitleImpl obj) {
                return obj.getOriginalPublishingCo();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setOriginalPublishingCo((String)value);
            }
        }
        ,
        OriginalPlaceOfPublication {
            public Object get(TitleImpl obj) {
                return obj.getOriginalPlaceOfPublication();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setOriginalPlaceOfPublication((String)value);
            }
        }
        ,
        OriginalDatesOfPublication {
            public Object get(TitleImpl obj) {
                return obj.getOriginalDatesOfPublication();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setOriginalDatesOfPublication((String)value);
            }
        }
        ,
        PlaceOfPublicationCode {
            public Object get(TitleImpl obj) {
                return obj.getPlaceOfPublicationCode();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPlaceOfPublicationCode((String)value);
            }
        }
        ,
        LanguageNote {
            public Object get(TitleImpl obj) {
                return obj.getLanguageNote();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setLanguageNote((String)value);
            }
        }
        ,
        ExercisingRights {
            public Object get(TitleImpl obj) {
                return obj.getExercisingRights();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setExercisingRights((String)value);
            }
        }
        ,
        NonFilingIndicator {
            public Object get(TitleImpl obj) {
                return obj.getNonFilingIndicator();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setNonFilingIndicator((String)value);
            }
        }
        ,
        EditionStatement {
            public Object get(TitleImpl obj) {
                return obj.getEditionStatement();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setEditionStatement((String)value);
            }
        }
        ,
        AlphaRecordDates {
            public Object get(TitleImpl obj) {
                return obj.getAlphaRecordDates();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAlphaRecordDates((String)value);
            }
        }
        ,
        PubYearVolumeFormatted {
            public Object get(TitleImpl obj) {
                return obj.getPubYearVolumeFormatted();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPubYearVolumeFormatted((String)value);
            }
        }
        ,
        PubYearVolumeUnformatted {
            public Object get(TitleImpl obj) {
                return obj.getPubYearVolumeUnformatted();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPubYearVolumeUnformatted((String)value);
            }
        }
        ,
        CatalogingSourceUrl {
            public Object get(TitleImpl obj) {
                return obj.getCatalogingSourceUrl();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCatalogingSourceUrl((String)value);
            }
        }
        ,
        SerialSubType {
            public Object get(TitleImpl obj) {
                return obj.getSerialSubType();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setSerialSubType((String)value);
            }
        }
        ,
        PublicationFrequency {
            public Object get(TitleImpl obj) {
                return obj.getPublicationFrequency();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPublicationFrequency((String)value);
            }
        }
        ,
        CatalogPublicationCity {
            public Object get(TitleImpl obj) {
                return obj.getCatalogPublicationCity();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCatalogPublicationCity((String)value);
            }
        }
        ,
        CatalogIndicator {
            public Object get(TitleImpl obj) {
                return obj.getCatalogIndicator();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCatalogIndicator((String)value);
            }
        }
        ,
        CheckInRequirements {
            public Object get(TitleImpl obj) {
                return obj.getCheckInRequirements();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCheckInRequirements((String)value);
            }
        }
        ,
        Routing {
            public Object get(TitleImpl obj) {
                return obj.getRouting();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setRouting((String)value);
            }
        }
        ,
        SpecialCopyright {
            public Object get(TitleImpl obj) {
                return obj.getSpecialCopyright();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setSpecialCopyright((String)value);
            }
        }
        ,
        CompSubAccountNumber {
            public Object get(TitleImpl obj) {
                return obj.getCompSubAccountNumber();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCompSubAccountNumber((String)value);
            }
        }
        ,
        PaidSubAccountNumber {
            public Object get(TitleImpl obj) {
                return obj.getPaidSubAccountNumber();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPaidSubAccountNumber((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TitleImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TitleImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TitleImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TitleImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        SecondaryPmClass {
            public Object get(TitleImpl obj) {
                return obj.getSecondaryPmClass();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setSecondaryPmClass((String)value);
            }
        }
        ,
        PrimaryPmClass {
            public Object get(TitleImpl obj) {
                return obj.getPrimaryPmClass();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPrimaryPmClass((String)value);
            }
        }
        ,
        ProductLine {
            public Object get(TitleImpl obj) {
                return obj.getProductLine();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setProductLine((String)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(TitleImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        NewspaperEditionFilmed {
            public Object get(TitleImpl obj) {
                return obj.getNewspaperEditionFilmed();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setNewspaperEditionFilmed((String)value);
            }
        }
        ,
        ContentType {
            public Object get(TitleImpl obj) {
                return obj.getContentType();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setContentType((String)value);
            }
        }
        ,
        Enumeration {
            public Object get(TitleImpl obj) {
                return obj.getEnumeration();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setEnumeration((String)value);
            }
        }
        ,
        NumberOfUnits {
            public Object get(TitleImpl obj) {
                return obj.getNumberOfUnits();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setNumberOfUnits((String)value);
            }
        }
        ,
        SubContentType {
            public Object get(TitleImpl obj) {
                return obj.getSubContentType();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setSubContentType((String)value);
            }
        }
        ,
        PeerReviewFlag {
            public Object get(TitleImpl obj) {
                return obj.getPeerReviewFlag();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPeerReviewFlag((String)value);
            }
        }
        ,
        OpenAccess {
            public Object get(TitleImpl obj) {
                return obj.getOpenAccess();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setOpenAccess((String)value);
            }
        }
        ,
        TargetTrackingNo {
            public Object get(TitleImpl obj) {
                return obj.getTargetTrackingNo();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setTargetTrackingNo((Number)value);
            }
        }
        ,
        EditableFlag {
            public Object get(TitleImpl obj) {
                return obj.getEditableFlag();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setEditableFlag((String)value);
            }
        }
        ,
        CataloguedBy {
            public Object get(TitleImpl obj) {
                return obj.getCataloguedBy();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCataloguedBy((String)value);
            }
        }
        ,
        CurrentCatalogId {
            public Object get(TitleImpl obj) {
                return obj.getCurrentCatalogId();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setCurrentCatalogId((Number)value);
            }
        }
        ,
        SortTitle {
            public Object get(TitleImpl obj) {
                return obj.getSortTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setSortTitle((String)value);
            }
        }
        ,
        ReasonNotExercisingRights {
            public Object get(TitleImpl obj) {
                return obj.getReasonNotExercisingRights();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setReasonNotExercisingRights((String)value);
            }
        }
        ,
        PrimarySourceFlag {
            public Object get(TitleImpl obj) {
                return obj.getPrimarySourceFlag();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setPrimarySourceFlag((String)value);
            }
        }
        ,
        ContentOwner {
            public Object get(TitleImpl obj) {
                return obj.getContentOwner();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setContentOwner((ContentOwnerImpl)value);
            }
        }
        ,
        ContentOwnerTitle {
            public Object get(TitleImpl obj) {
                return obj.getContentOwnerTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Classification {
            public Object get(TitleImpl obj) {
                return obj.getClassification();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OtherEditorContributor {
            public Object get(TitleImpl obj) {
                return obj.getOtherEditorContributor();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleSubject {
            public Object get(TitleImpl obj) {
                return obj.getTitleSubject();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VaryingForm {
            public Object get(TitleImpl obj) {
                return obj.getVaryingForm();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AddedEntry {
            public Object get(TitleImpl obj) {
                return obj.getAddedEntry();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleAbstractLanguage {
            public Object get(TitleImpl obj) {
                return obj.getTitleAbstractLanguage();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleRecord1 {
            public Object get(TitleImpl obj) {
                return obj.getTitleRecord1();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractTitle {
            public Object get(TitleImpl obj) {
                return obj.getContractTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RelatedTitle {
            public Object get(TitleImpl obj) {
                return obj.getRelatedTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RelatedTitle1 {
            public Object get(TitleImpl obj) {
                return obj.getRelatedTitle1();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RelatedTitle2 {
            public Object get(TitleImpl obj) {
                return obj.getRelatedTitle2();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Activity1 {
            public Object get(TitleImpl obj) {
                return obj.getActivity1();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleNote {
            public Object get(TitleImpl obj) {
                return obj.getTitleNote();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        JTraxTitleContractRight {
            public Object get(TitleImpl obj) {
                return obj.getJTraxTitleContractRight();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleSeries {
            public Object get(TitleImpl obj) {
                return obj.getTitleSeries();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleLanguage {
            public Object get(TitleImpl obj) {
                return obj.getTitleLanguage();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleRoyaltyRate {
            public Object get(TitleImpl obj) {
                return obj.getTitleRoyaltyRate();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleContractGuarantee {
            public Object get(TitleImpl obj) {
                return obj.getTitleContractGuarantee();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityTitle {
            public Object get(TitleImpl obj) {
                return obj.getTraxActivityTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleAttachment {
            public Object get(TitleImpl obj) {
                return obj.getTraxTitleAttachment();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleUlrichsRelation {
            public Object get(TitleImpl obj) {
                return obj.getTraxTitleUlrichsRelation();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxTitleIndexInclusion {
            public Object get(TitleImpl obj) {
                return obj.getTraxTitleIndexInclusion();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxImportDataParse {
            public Object get(TitleImpl obj) {
                return obj.getTraxImportDataParse();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxPreResultTarget {
            public Object get(TitleImpl obj) {
                return obj.getTraxPreResultTarget();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrmTargetedProductTitle {
            public Object get(TitleImpl obj) {
                return obj.getPrmTargetedProductTitle();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleContractView {
            public Object get(TitleImpl obj) {
                return obj.getTitleContractView();
            }

            public void put(TitleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TitleImpl object);

        public abstract void put(TitleImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int LONGTITLE = AttributesEnum.LongTitle.index();
    public static final int CATALOGNUMBER = AttributesEnum.CatalogNumber.index();
    public static final int CATALOGPREFIX = AttributesEnum.CatalogPrefix.index();
    public static final int CATALOGROOT = AttributesEnum.CatalogRoot.index();
    public static final int CATALOGSUFFIX = AttributesEnum.CatalogSuffix.index();
    public static final int AUTHOR = AttributesEnum.Author.index();
    public static final int CURRENTCATALOGNUMBER = AttributesEnum.CurrentCatalogNumber.index();
    public static final int CURRENTCATALOGPREFIX = AttributesEnum.CurrentCatalogPrefix.index();
    public static final int CURRENTCATALOGROOT = AttributesEnum.CurrentCatalogRoot.index();
    public static final int CURRENTCATALOGSUFFIX = AttributesEnum.CurrentCatalogSuffix.index();
    public static final int PUBLICATIONSTARTYEAR = AttributesEnum.PublicationStartYear.index();
    public static final int PUBLICATIONENDYEAR = AttributesEnum.PublicationEndYear.index();
    public static final int SHORTTITLE = AttributesEnum.ShortTitle.index();
    public static final int FILMAVAILABILITY = AttributesEnum.FilmAvailability.index();
    public static final int BIBLIOGRAPHICSTATUS = AttributesEnum.BibliographicStatus.index();
    public static final int TITLEDESCRIPTION = AttributesEnum.TitleDescription.index();
    public static final int SECONDARYCATALOGNUMBER = AttributesEnum.SecondaryCatalogNumber.index();
    public static final int ORIGINALPUBLISHINGCO = AttributesEnum.OriginalPublishingCo.index();
    public static final int ORIGINALPLACEOFPUBLICATION = AttributesEnum.OriginalPlaceOfPublication.index();
    public static final int ORIGINALDATESOFPUBLICATION = AttributesEnum.OriginalDatesOfPublication.index();
    public static final int PLACEOFPUBLICATIONCODE = AttributesEnum.PlaceOfPublicationCode.index();
    public static final int LANGUAGENOTE = AttributesEnum.LanguageNote.index();
    public static final int EXERCISINGRIGHTS = AttributesEnum.ExercisingRights.index();
    public static final int NONFILINGINDICATOR = AttributesEnum.NonFilingIndicator.index();
    public static final int EDITIONSTATEMENT = AttributesEnum.EditionStatement.index();
    public static final int ALPHARECORDDATES = AttributesEnum.AlphaRecordDates.index();
    public static final int PUBYEARVOLUMEFORMATTED = AttributesEnum.PubYearVolumeFormatted.index();
    public static final int PUBYEARVOLUMEUNFORMATTED = AttributesEnum.PubYearVolumeUnformatted.index();
    public static final int CATALOGINGSOURCEURL = AttributesEnum.CatalogingSourceUrl.index();
    public static final int SERIALSUBTYPE = AttributesEnum.SerialSubType.index();
    public static final int PUBLICATIONFREQUENCY = AttributesEnum.PublicationFrequency.index();
    public static final int CATALOGPUBLICATIONCITY = AttributesEnum.CatalogPublicationCity.index();
    public static final int CATALOGINDICATOR = AttributesEnum.CatalogIndicator.index();
    public static final int CHECKINREQUIREMENTS = AttributesEnum.CheckInRequirements.index();
    public static final int ROUTING = AttributesEnum.Routing.index();
    public static final int SPECIALCOPYRIGHT = AttributesEnum.SpecialCopyright.index();
    public static final int COMPSUBACCOUNTNUMBER = AttributesEnum.CompSubAccountNumber.index();
    public static final int PAIDSUBACCOUNTNUMBER = AttributesEnum.PaidSubAccountNumber.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int SECONDARYPMCLASS = AttributesEnum.SecondaryPmClass.index();
    public static final int PRIMARYPMCLASS = AttributesEnum.PrimaryPmClass.index();
    public static final int PRODUCTLINE = AttributesEnum.ProductLine.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int NEWSPAPEREDITIONFILMED = AttributesEnum.NewspaperEditionFilmed.index();
    public static final int CONTENTTYPE = AttributesEnum.ContentType.index();
    public static final int ENUMERATION = AttributesEnum.Enumeration.index();
    public static final int NUMBEROFUNITS = AttributesEnum.NumberOfUnits.index();
    public static final int SUBCONTENTTYPE = AttributesEnum.SubContentType.index();
    public static final int PEERREVIEWFLAG = AttributesEnum.PeerReviewFlag.index();
    public static final int OPENACCESS = AttributesEnum.OpenAccess.index();
    public static final int TARGETTRACKINGNO = AttributesEnum.TargetTrackingNo.index();
    public static final int EDITABLEFLAG = AttributesEnum.EditableFlag.index();
    public static final int CATALOGUEDBY = AttributesEnum.CataloguedBy.index();
    public static final int CURRENTCATALOGID = AttributesEnum.CurrentCatalogId.index();
    public static final int SORTTITLE = AttributesEnum.SortTitle.index();
    public static final int REASONNOTEXERCISINGRIGHTS = AttributesEnum.ReasonNotExercisingRights.index();
    public static final int PRIMARYSOURCEFLAG = AttributesEnum.PrimarySourceFlag.index();
    public static final int CONTENTOWNER = AttributesEnum.ContentOwner.index();
    public static final int CONTENTOWNERTITLE = AttributesEnum.ContentOwnerTitle.index();
    public static final int CLASSIFICATION = AttributesEnum.Classification.index();
    public static final int OTHEREDITORCONTRIBUTOR = AttributesEnum.OtherEditorContributor.index();
    public static final int TITLESUBJECT = AttributesEnum.TitleSubject.index();
    public static final int VARYINGFORM = AttributesEnum.VaryingForm.index();
    public static final int ADDEDENTRY = AttributesEnum.AddedEntry.index();
    public static final int TITLEABSTRACTLANGUAGE = AttributesEnum.TitleAbstractLanguage.index();
    public static final int TITLERECORD1 = AttributesEnum.TitleRecord1.index();
    public static final int CONTRACTTITLE = AttributesEnum.ContractTitle.index();
    public static final int RELATEDTITLE = AttributesEnum.RelatedTitle.index();
    public static final int RELATEDTITLE1 = AttributesEnum.RelatedTitle1.index();
    public static final int RELATEDTITLE2 = AttributesEnum.RelatedTitle2.index();
    public static final int ACTIVITY1 = AttributesEnum.Activity1.index();
    public static final int TITLENOTE = AttributesEnum.TitleNote.index();
    public static final int JTRAXTITLECONTRACTRIGHT = AttributesEnum.JTraxTitleContractRight.index();
    public static final int TITLESERIES = AttributesEnum.TitleSeries.index();
    public static final int TITLELANGUAGE = AttributesEnum.TitleLanguage.index();
    public static final int TITLEROYALTYRATE = AttributesEnum.TitleRoyaltyRate.index();
    public static final int TITLECONTRACTGUARANTEE = AttributesEnum.TitleContractGuarantee.index();
    public static final int TRAXACTIVITYTITLE = AttributesEnum.TraxActivityTitle.index();
    public static final int TRAXTITLEATTACHMENT = AttributesEnum.TraxTitleAttachment.index();
    public static final int TRAXTITLEULRICHSRELATION = AttributesEnum.TraxTitleUlrichsRelation.index();
    public static final int TRAXTITLEINDEXINCLUSION = AttributesEnum.TraxTitleIndexInclusion.index();
    public static final int TRAXIMPORTDATAPARSE = AttributesEnum.TraxImportDataParse.index();
    public static final int TRAXPRERESULTTARGET = AttributesEnum.TraxPreResultTarget.index();
    public static final int PRMTARGETEDPRODUCTTITLE = AttributesEnum.PrmTargetedProductTitle.index();
    public static final int TITLECONTRACTVIEW = AttributesEnum.TitleContractView.index();

    /**This is the default constructor (do not remove)
     */
    public TitleImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.Title");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        // Add any custom logic you wish to perform in this getter here.
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for ContentOwnerId, using the alias name ContentOwnerId
     */
    public Number getContentOwnerId() {
        // Add any custom logic you wish to perform in this getter here.
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**Sets <code>value</code> as the attribute value for ContentOwnerId
     */
    public void setContentOwnerId(Number value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CONTENTOWNERID, value);

    }

    /**Gets the attribute value for LongTitle, using the alias name LongTitle
     */
    public String getLongTitle() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(LONGTITLE);
    }

    /**Sets <code>value</code> as the attribute value for LongTitle
     */
    public void setLongTitle(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(LONGTITLE, value);

        //We create the sort title to map to OVRs here
        this.setSortTitle(this.createSortTitle());
    }


    /**Gets the attribute value for CatalogNumber, using the alias name CatalogNumber
     */
    public String getCatalogNumber() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CATALOGNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for CatalogNumber
     */
    public void setCatalogNumber(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CATALOGNUMBER, value);
    }

    /**Gets the attribute value for CatalogPrefix, using the alias name CatalogPrefix
     */
    public String getCatalogPrefix() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CATALOGPREFIX);
    }

    /**Sets <code>value</code> as the attribute value for CatalogPrefix
     */
    public void setCatalogPrefix(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CATALOGPREFIX, value);
    }

    /**Gets the attribute value for CatalogRoot, using the alias name CatalogRoot
     */
    public String getCatalogRoot() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CATALOGROOT);
    }

    /**Sets <code>value</code> as the attribute value for CatalogRoot
     */
    public void setCatalogRoot(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CATALOGROOT, value);
    }

    /**Gets the attribute value for CatalogSuffix, using the alias name CatalogSuffix
     */
    public String getCatalogSuffix() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CATALOGSUFFIX);
    }

    /**Sets <code>value</code> as the attribute value for CatalogSuffix
     */
    public void setCatalogSuffix(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CATALOGSUFFIX, value);
    }

    /**Gets the attribute value for Author, using the alias name Author
     */
    public String getAuthor() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(AUTHOR);
    }

    /**Sets <code>value</code> as the attribute value for Author
     */
    public void setAuthor(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(AUTHOR, value);
    }

    /**Gets the attribute value for CurrentCatalogNumber, using the alias name CurrentCatalogNumber
     */
    public String getCurrentCatalogNumber() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CURRENTCATALOGNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for CurrentCatalogNumber
     */
    public void setCurrentCatalogNumber(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CURRENTCATALOGNUMBER, value);
    }

    /**Gets the attribute value for CurrentCatalogPrefix, using the alias name CurrentCatalogPrefix
     */
    public String getCurrentCatalogPrefix() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CURRENTCATALOGPREFIX);
    }

    /**Sets <code>value</code> as the attribute value for CurrentCatalogPrefix
     */
    public void setCurrentCatalogPrefix(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CURRENTCATALOGPREFIX, value);
    }

    /**Gets the attribute value for CurrentCatalogRoot, using the alias name CurrentCatalogRoot
     */
    public String getCurrentCatalogRoot() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CURRENTCATALOGROOT);
    }

    /**Sets <code>value</code> as the attribute value for CurrentCatalogRoot
     */
    public void setCurrentCatalogRoot(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CURRENTCATALOGROOT, value);
    }

    /**Gets the attribute value for CurrentCatalogSuffix, using the alias name CurrentCatalogSuffix
     */
    public String getCurrentCatalogSuffix() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CURRENTCATALOGSUFFIX);
    }

    /**Sets <code>value</code> as the attribute value for CurrentCatalogSuffix
     */
    public void setCurrentCatalogSuffix(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CURRENTCATALOGSUFFIX, value);
    }

    /**Gets the attribute value for PublicationStartYear, using the alias name PublicationStartYear
     */
    public String getPublicationStartYear() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PUBLICATIONSTARTYEAR);
    }

    /**Sets <code>value</code> as the attribute value for PublicationStartYear
     */
    public void setPublicationStartYear(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PUBLICATIONSTARTYEAR, value);
    }

    /**Gets the attribute value for PublicationEndYear, using the alias name PublicationEndYear
     */
    public String getPublicationEndYear() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PUBLICATIONENDYEAR);
    }

    /**Sets <code>value</code> as the attribute value for PublicationEndYear
     */
    public void setPublicationEndYear(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PUBLICATIONENDYEAR, value);
    }

    /**Gets the attribute value for ShortTitle, using the alias name ShortTitle
     */
    public String getShortTitle() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(SHORTTITLE);
    }

    /**Sets <code>value</code> as the attribute value for ShortTitle
     */
    public void setShortTitle(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(SHORTTITLE, value);
    }

    /**Gets the attribute value for FilmAvailability, using the alias name FilmAvailability
     */
    public String getFilmAvailability() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(FILMAVAILABILITY);
    }

    /**Sets <code>value</code> as the attribute value for FilmAvailability
     */
    public void setFilmAvailability(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(FILMAVAILABILITY, value);
    }

    /**Gets the attribute value for BibliographicStatus, using the alias name BibliographicStatus
     */
    public String getBibliographicStatus() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(BIBLIOGRAPHICSTATUS);
    }

    /**Sets <code>value</code> as the attribute value for BibliographicStatus
     */
    public void setBibliographicStatus(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(BIBLIOGRAPHICSTATUS, value);
    }

    /**Gets the attribute value for TitleDescription, using the alias name TitleDescription
     */
    public String getTitleDescription() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(TITLEDESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for TitleDescription
     */
    public void setTitleDescription(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(TITLEDESCRIPTION, value);
    }

    /**Gets the attribute value for SecondaryCatalogNumber, using the alias name SecondaryCatalogNumber
     */
    public String getSecondaryCatalogNumber() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(SECONDARYCATALOGNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for SecondaryCatalogNumber
     */
    public void setSecondaryCatalogNumber(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(SECONDARYCATALOGNUMBER, value);
    }

    /**Gets the attribute value for OriginalPublishingCo, using the alias name OriginalPublishingCo
     */
    public String getOriginalPublishingCo() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(ORIGINALPUBLISHINGCO);
    }

    /**Sets <code>value</code> as the attribute value for OriginalPublishingCo
     */
    public void setOriginalPublishingCo(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ORIGINALPUBLISHINGCO, value);
    }

    /**Gets the attribute value for OriginalPlaceOfPublication, using the alias name OriginalPlaceOfPublication
     */
    public String getOriginalPlaceOfPublication() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(ORIGINALPLACEOFPUBLICATION);
    }

    /**Sets <code>value</code> as the attribute value for OriginalPlaceOfPublication
     */
    public void setOriginalPlaceOfPublication(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ORIGINALPLACEOFPUBLICATION, value);
    }

    /**Gets the attribute value for OriginalDatesOfPublication, using the alias name OriginalDatesOfPublication
     */
    public String getOriginalDatesOfPublication() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(ORIGINALDATESOFPUBLICATION);
    }

    /**Sets <code>value</code> as the attribute value for OriginalDatesOfPublication
     */
    public void setOriginalDatesOfPublication(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ORIGINALDATESOFPUBLICATION, value);
    }

    /**Gets the attribute value for PlaceOfPublicationCode, using the alias name PlaceOfPublicationCode
     */
    public String getPlaceOfPublicationCode() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PLACEOFPUBLICATIONCODE);
    }

    /**Sets <code>value</code> as the attribute value for PlaceOfPublicationCode
     */
    public void setPlaceOfPublicationCode(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PLACEOFPUBLICATIONCODE, value);
    }

    /**Gets the attribute value for LanguageNote, using the alias name LanguageNote
     */
    public String getLanguageNote() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(LANGUAGENOTE);
    }

    /**Sets <code>value</code> as the attribute value for LanguageNote
     */
    public void setLanguageNote(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(LANGUAGENOTE, value);
    }

    /**Gets the attribute value for ExercisingRights, using the alias name ExercisingRights
     */
    public String getExercisingRights() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(EXERCISINGRIGHTS);
    }

    /**Sets <code>value</code> as the attribute value for ExercisingRights
     */
    public void setExercisingRights(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(EXERCISINGRIGHTS, value);
    }

    /**Gets the attribute value for NonFilingIndicator, using the alias name NonFilingIndicator
     */
    public String getNonFilingIndicator() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(NONFILINGINDICATOR);
    }

    /**Sets <code>value</code> as the attribute value for NonFilingIndicator
     */
    public void setNonFilingIndicator(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(NONFILINGINDICATOR, value);
    }

    /**Gets the attribute value for EditionStatement, using the alias name EditionStatement
     */
    public String getEditionStatement() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(EDITIONSTATEMENT);
    }

    /**Sets <code>value</code> as the attribute value for EditionStatement
     */
    public void setEditionStatement(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(EDITIONSTATEMENT, value);
    }

    /**Gets the attribute value for AlphaRecordDates, using the alias name AlphaRecordDates
     */
    public String getAlphaRecordDates() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(ALPHARECORDDATES);
    }

    /**Sets <code>value</code> as the attribute value for AlphaRecordDates
     */
    public void setAlphaRecordDates(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ALPHARECORDDATES, value);
    }

    /**Gets the attribute value for PubYearVolumeFormatted, using the alias name PubYearVolumeFormatted
     */
    public String getPubYearVolumeFormatted() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PUBYEARVOLUMEFORMATTED);
    }

    /**Sets <code>value</code> as the attribute value for PubYearVolumeFormatted
     */
    public void setPubYearVolumeFormatted(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PUBYEARVOLUMEFORMATTED, value);
    }

    /**Gets the attribute value for PubYearVolumeUnformatted, using the alias name PubYearVolumeUnformatted
     */
    public String getPubYearVolumeUnformatted() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PUBYEARVOLUMEUNFORMATTED);
    }

    /**Sets <code>value</code> as the attribute value for PubYearVolumeUnformatted
     */
    public void setPubYearVolumeUnformatted(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PUBYEARVOLUMEUNFORMATTED, value);
    }

    /**Gets the attribute value for CatalogingSourceUrl, using the alias name CatalogingSourceUrl
     */
    public String getCatalogingSourceUrl() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CATALOGINGSOURCEURL);
    }

    /**Sets <code>value</code> as the attribute value for CatalogingSourceUrl
     */
    public void setCatalogingSourceUrl(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CATALOGINGSOURCEURL, value);
    }

    /**Gets the attribute value for SerialSubType, using the alias name SerialSubType
     */
    public String getSerialSubType() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(SERIALSUBTYPE);
    }

    /**Sets <code>value</code> as the attribute value for SerialSubType
     */
    public void setSerialSubType(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(SERIALSUBTYPE, value);
    }

    /**Gets the attribute value for PublicationFrequency, using the alias name PublicationFrequency
     */
    public String getPublicationFrequency() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PUBLICATIONFREQUENCY);
    }

    /**Sets <code>value</code> as the attribute value for PublicationFrequency
     */
    public void setPublicationFrequency(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PUBLICATIONFREQUENCY, value);
    }

    /**Gets the attribute value for CatalogPublicationCity, using the alias name CatalogPublicationCity
     */
    public String getCatalogPublicationCity() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CATALOGPUBLICATIONCITY);
    }

    /**Sets <code>value</code> as the attribute value for CatalogPublicationCity
     */
    public void setCatalogPublicationCity(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CATALOGPUBLICATIONCITY, value);
    }

    /**Gets the attribute value for CatalogIndicator, using the alias name CatalogIndicator
     */
    public String getCatalogIndicator() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CATALOGINDICATOR);
    }

    /**Sets <code>value</code> as the attribute value for CatalogIndicator
     */
    public void setCatalogIndicator(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CATALOGINDICATOR, value);
    }


    /**Gets the attribute value for CheckInRequirements, using the alias name CheckInRequirements
     */
    public String getCheckInRequirements() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CHECKINREQUIREMENTS);
    }

    /**Sets <code>value</code> as the attribute value for CheckInRequirements
     */
    public void setCheckInRequirements(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(CHECKINREQUIREMENTS, value);
    }

    /**Gets the attribute value for Routing, using the alias name Routing
     */
    public String getRouting() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(ROUTING);
    }

    /**Sets <code>value</code> as the attribute value for Routing
     */
    public void setRouting(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(ROUTING, value);
    }

    /**Gets the attribute value for SpecialCopyright, using the alias name SpecialCopyright
     */
    public String getSpecialCopyright() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(SPECIALCOPYRIGHT);
    }

    /**Sets <code>value</code> as the attribute value for SpecialCopyright
     */
    public void setSpecialCopyright(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(SPECIALCOPYRIGHT, value);
    }

    /**Gets the attribute value for CompSubAccountNumber, using the alias name CompSubAccountNumber
     */
    public String getCompSubAccountNumber() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(COMPSUBACCOUNTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for CompSubAccountNumber
     */
    public void setCompSubAccountNumber(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(COMPSUBACCOUNTNUMBER, value);
    }

    /**Gets the attribute value for PaidSubAccountNumber, using the alias name PaidSubAccountNumber
     */
    public String getPaidSubAccountNumber() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(PAIDSUBACCOUNTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for PaidSubAccountNumber
     */
    public void setPaidSubAccountNumber(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(PAIDSUBACCOUNTNUMBER, value);
    }


    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        // Add any custom logic you wish to perform in this getter here.
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        // Add any custom logic you wish to perform in this getter here.
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        // Add any custom logic you wish to perform in this getter here.
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**Gets the associated entity ContentOwnerImpl
     */
    public ContentOwnerImpl getContentOwner() {
        return (ContentOwnerImpl)getAttributeInternal(CONTENTOWNER);
    }

    /**Sets <code>value</code> as the associated entity ContentOwnerImpl
     */
    public void setContentOwner(ContentOwnerImpl value) {
        setAttributeInternal(CONTENTOWNER, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContentOwnerTitle() {
        return (RowIterator)getAttributeInternal(CONTENTOWNERTITLE);
    }


    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        // Add custom validation or business logic for this setter here.
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getClassification() {
        return (RowIterator)getAttributeInternal(CLASSIFICATION);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getOtherEditorContributor() {
        return (RowIterator)getAttributeInternal(OTHEREDITORCONTRIBUTOR);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleSubject() {
        return (RowIterator)getAttributeInternal(TITLESUBJECT);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getVaryingForm() {
        return (RowIterator)getAttributeInternal(VARYINGFORM);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getAddedEntry() {
        return (RowIterator)getAttributeInternal(ADDEDENTRY);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleAbstractLanguage() {
        return (RowIterator)getAttributeInternal(TITLEABSTRACTLANGUAGE);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRecord1() {
        return (RowIterator)getAttributeInternal(TITLERECORD1);
    }


    /**Custom DML update/insert/delete logic here.
     * This is an override of the doDML mehtod to allow updates to the ContentOwnerTitle table
     * If a Title is new, and has a content owner,
     * a record should be created in ContentOwnerTitle
     * and that record should be flagged as primary.
     * If a Title is being updated, and has a content owner,
     * then ContentOwnerTitle should be checked to make sure
     * the content owner exists and is flagged as primary
     */
    @Override
    protected void doDML(int operation, TransactionEvent e) {

        super.doDML(operation, e);

        //inserting content owner as primary content owner in trax_contet_owner_title.
        if (operation == DML_INSERT) {
            if (getContentOwnerId() != null) {
                try {
                    Row r = getContentOwnerTitle().createRow();
                    r.setAttribute("ContentOwnerId", getContentOwnerId());
                    r.setAttribute("OwnerType", "");
                    r.setAttribute("PrimaryFlag", "Y");
                    getContentOwnerTitle().insertRow(r);
                } catch (Exception ex) {
                    System.out.println("Primary content owner insertion failed. Error :" +
                                       ex.toString());
                }
            }
        }

        else if (operation == DML_UPDATE) {
            boolean newCO = true;
            if (getContentOwnerId() != null) {
                try {
                    RowIterator cIter = getContentOwnerTitle();
                    while (cIter.hasNext()) {
                        ContentOwnerTitleImpl coTitle =
                            (ContentOwnerTitleImpl)cIter.next();
                        if (coTitle.getContentOwnerId().compareTo(getContentOwnerId()) ==
                            0) {
                            coTitle.setPrimaryFlag("Y");
                            newCO = false;
                            //break;
                        } else {
                            if (this.getCatalogNumber() != null) {
                                coTitle.setPrimaryFlag("N");
                            } else if (this.getCatalogNumber() == null) {
                                coTitle.remove();
                            }
                        }
                    }

                    if (newCO) {
                        Row r = getContentOwnerTitle().createRow();
                        r.setAttribute("ContentOwnerId", getContentOwnerId());
                        r.setAttribute("OwnerType", "");
                        r.setAttribute("PrimaryFlag", "Y");
                        getContentOwnerTitle().insertRow(r);


                    }
                } catch (Exception ex) {
                    System.out.println("Primary content owner update failed. Error :" +
                                       ex.toString());
                }
            }
        }
    }


    /**Gets the attribute value for SecondaryPmClass, using the alias name SecondaryPmClass
     */
    public String getSecondaryPmClass() {
        return (String)getAttributeInternal(SECONDARYPMCLASS);
    }

    /**Sets <code>value</code> as the attribute value for SecondaryPmClass
     */
    public void setSecondaryPmClass(String value) {
        setAttributeInternal(SECONDARYPMCLASS, value);
    }

    /**Gets the attribute value for PrimaryPmClass, using the alias name PrimaryPmClass
     */
    public String getPrimaryPmClass() {
        return (String)getAttributeInternal(PRIMARYPMCLASS);
    }

    /**Sets <code>value</code> as the attribute value for PrimaryPmClass
     */
    public void setPrimaryPmClass(String value) {
        setAttributeInternal(PRIMARYPMCLASS, value);
    }

    /**Gets the attribute value for ProductLine, using the alias name ProductLine
     */
    public String getProductLine() {
        return (String)getAttributeInternal(PRODUCTLINE);
    }

    /**Sets <code>value</code> as the attribute value for ProductLine
     */
    public void setProductLine(String value) {
        setAttributeInternal(PRODUCTLINE, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContractTitle() {
        return (RowIterator)getAttributeInternal(CONTRACTTITLE);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getRelatedTitle() {
        return (RowIterator)getAttributeInternal(RELATEDTITLE);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getRelatedTitle1() {
        return (RowIterator)getAttributeInternal(RELATEDTITLE1);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getRelatedTitle2() {
        return (RowIterator)getAttributeInternal(RELATEDTITLE2);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getActivity1() {
        return (RowIterator)getAttributeInternal(ACTIVITY1);
    }

    /**Uses the link TitlesContractLink to return rows of TitleContractView
     */
    public RowIterator getTitleContractView() {
        return (RowIterator)getAttributeInternal(TITLECONTRACTVIEW);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * Validation method for Title.
     */
    public boolean validateTitleContentOwner() {
        RowIterator acctIter = this.getContentOwnerTitle();
        ContentOwnerTitleImpl co = null;
        int i = 0;
        int j = 0;

        while (j < this.getContentOwnerTitle().getRowCount()) {
            co = (ContentOwnerTitleImpl)acctIter.next();

            if ("Y".equalsIgnoreCase(co.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**
     * Validation method for Title.
     */
    public boolean validateUlrichsPrimary() {

        RowIterator ulrichsIter = this.getTraxTitleUlrichsRelation();
        TraxTitleUlrichsRelationImpl ulrichs = null;
        int i = 0;
        int j = 0;

        while (j < this.getTraxTitleUlrichsRelation().getRowCount()) {
            ulrichs = (TraxTitleUlrichsRelationImpl)ulrichsIter.next();

            if ("Y".equalsIgnoreCase(ulrichs.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleNote() {
        return (RowIterator)getAttributeInternal(TITLENOTE);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getJTraxTitleContractRight() {
        return (RowIterator)getAttributeInternal(JTRAXTITLECONTRACTRIGHT);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleSeries() {
        return (RowIterator)getAttributeInternal(TITLESERIES);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleLanguage() {
        return (RowIterator)getAttributeInternal(TITLELANGUAGE);
    }


    protected void prepareForDML(int operation, TransactionEvent e) {
        super.prepareForDML(operation, e);

        if (operation == DML_INSERT) {

            TracsServiceImpl am =
                (TracsServiceImpl)getDBTransaction().getRootApplicationModule();

            //Create VO Names Array to determine the active VO.  Active VO located at
            //element 0.  If active VO is TitleView1, create catalog number.
            String[] vos = am.getViewObjectNames();

            if (vos[0].equalsIgnoreCase("TitleView1")) {
                if (getCatalogNumber() == null ||
                    getCatalogNumber().trim().length() == 0) {
                    String catNum =
                        am.generateCatalogNumber("" + ((oracle.jbo.domain.Number)getContentOwnerId()).intValue(),
                                                 getCatalogRoot(),
                                                 getProductLine());
                    if (catNum != null && catNum.trim().length() > 0) {
                        String root = catNum.substring(0, catNum.indexOf("."));
                        String suffix =
                            catNum.substring(catNum.indexOf(".") + 1);
                        setCatalogRoot(root);
                        setCatalogSuffix(suffix);
                    }
                    setCatalogNumber(catNum);
                    this.setCataloguedBy(am.getUsername());
                }
            }
        }

    }

    /**Gets the attribute value for ActiveFlag, using the alias name ActiveFlag
     */
    public String getActiveFlag() {
        return (String)getAttributeInternal(ACTIVEFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**Gets the attribute value for NewspaperEditionFilmed, using the alias name NewspaperEditionFilmed
     */
    public String getNewspaperEditionFilmed() {
        return (String)getAttributeInternal(NEWSPAPEREDITIONFILMED);
    }

    /**Sets <code>value</code> as the attribute value for NewspaperEditionFilmed
     */
    public void setNewspaperEditionFilmed(String value) {
        setAttributeInternal(NEWSPAPEREDITIONFILMED, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRoyaltyRate() {
        return (RowIterator)getAttributeInternal(TITLEROYALTYRATE);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleContractGuarantee() {
        return (RowIterator)getAttributeInternal(TITLECONTRACTGUARANTEE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityTitle() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYTITLE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleAttachment() {
        return (RowIterator)getAttributeInternal(TRAXTITLEATTACHMENT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleUlrichsRelation() {
        return (RowIterator)getAttributeInternal(TRAXTITLEULRICHSRELATION);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxTitleIndexInclusion() {
        return (RowIterator)getAttributeInternal(TRAXTITLEINDEXINCLUSION);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxImportDataParse() {
        return (RowIterator)getAttributeInternal(TRAXIMPORTDATAPARSE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxPreResultTarget() {
        return (RowIterator)getAttributeInternal(TRAXPRERESULTTARGET);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPrmTargetedProductTitle() {
        return (RowIterator)getAttributeInternal(PRMTARGETEDPRODUCTTITLE);
    }

    /**Gets the attribute value for ContentType, using the alias name ContentType
     */
    public String getContentType() {
        return (String)getAttributeInternal(CONTENTTYPE);
    }

    /**Sets <code>value</code> as the attribute value for ContentType
     */
    public void setContentType(String value) {
        setAttributeInternal(CONTENTTYPE, value);
    }

    /**Gets the attribute value for Enumeration, using the alias name Enumeration
     */
    public String getEnumeration() {
        return (String)getAttributeInternal(ENUMERATION);
    }

    /**Sets <code>value</code> as the attribute value for Enumeration
     */
    public void setEnumeration(String value) {
        setAttributeInternal(ENUMERATION, value);
    }

    /**Gets the attribute value for NumberOfUnits, using the alias name NumberOfUnits
     */
    public String getNumberOfUnits() {
        return (String)getAttributeInternal(NUMBEROFUNITS);
    }

    /**Sets <code>value</code> as the attribute value for NumberOfUnits
     */
    public void setNumberOfUnits(String value) {
        setAttributeInternal(NUMBEROFUNITS, value);
    }

    /**Gets the attribute value for SubContentType, using the alias name SubContentType
     */
    public String getSubContentType() {
        return (String)getAttributeInternal(SUBCONTENTTYPE);
    }

    /**Sets <code>value</code> as the attribute value for SubContentType
     */
    public void setSubContentType(String value) {
        setAttributeInternal(SUBCONTENTTYPE, value);
    }

    /**Gets the attribute value for PeerReviewFlag, using the alias name PeerReviewFlag
     */
    public String getPeerReviewFlag() {
        return (String)getAttributeInternal(PEERREVIEWFLAG);
    }

    /**Sets <code>value</code> as the attribute value for PeerReviewFlag
     */
    public void setPeerReviewFlag(String value) {
        setAttributeInternal(PEERREVIEWFLAG, value);
    }

    /**Gets the attribute value for OpenAccess, using the alias name OpenAccess
     */
    public String getOpenAccess() {
        return (String)getAttributeInternal(OPENACCESS);
    }

    /**Sets <code>value</code> as the attribute value for OpenAccess
     */
    public void setOpenAccess(String value) {
        setAttributeInternal(OPENACCESS, value);
    }

    /**
     * Gets the attribute value for TargetTrackingNo, using the alias name TargetTrackingNo.
     * @return the TargetTrackingNo
     */
    public Number getTargetTrackingNo() {
        return (Number)getAttributeInternal(TARGETTRACKINGNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetTrackingNo.
     * @param value value to set the TargetTrackingNo
     */
    public void setTargetTrackingNo(Number value) {
        setAttributeInternal(TARGETTRACKINGNO, value);
    }

    /**
     * Gets the attribute value for EditableFlag, using the alias name EditableFlag.
     * @return the EditableFlag
     */
    public String getEditableFlag() {
        return (String)getAttributeInternal(EDITABLEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for EditableFlag.
     * @param value value to set the EditableFlag
     */
    public void setEditableFlag(String value) {
        setAttributeInternal(EDITABLEFLAG, value);
    }

    /**
     * Gets the attribute value for CataloguedBy, using the alias name CataloguedBy.
     * @return the CataloguedBy
     */
    public String getCataloguedBy() {
        return (String)getAttributeInternal(CATALOGUEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CataloguedBy.
     * @param value value to set the CataloguedBy
     */
    public void setCataloguedBy(String value) {
        setAttributeInternal(CATALOGUEDBY, value);
    }

    /**
     * Gets the attribute value for CurrentCatalogId, using the alias name CurrentCatalogId.
     * @return the CurrentCatalogId
     */
    public Number getCurrentCatalogId() {
        return (Number)getAttributeInternal(CURRENTCATALOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentCatalogId.
     * @param value value to set the CurrentCatalogId
     */
    public void setCurrentCatalogId(Number value) {
        setAttributeInternal(CURRENTCATALOGID, value);
    }

    /**
     * Gets the attribute value for SortTitle, using the alias name SortTitle.
     * @return the SortTitle
     */
    public String getSortTitle() {
        return (String)getAttributeInternal(SORTTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SortTitle.
     * @param value value to set the SortTitle
     */
    public void setSortTitle(String value) {
        setAttributeInternal(SORTTITLE, value);
    }

    /**
     * Gets the attribute value for ReasonNotExercisingRights, using the alias name ReasonNotExercisingRights.
     * @return the ReasonNotExercisingRights
     */
    public String getReasonNotExercisingRights() {
        return (String)getAttributeInternal(REASONNOTEXERCISINGRIGHTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReasonNotExercisingRights.
     * @param value value to set the ReasonNotExercisingRights
     */
    public void setReasonNotExercisingRights(String value) {
        setAttributeInternal(REASONNOTEXERCISINGRIGHTS, value);
    }

    /**
     * Gets the attribute value for PrimarySourceFlag, using the alias name PrimarySourceFlag.
     * @return the PrimarySourceFlag
     */
    public String getPrimarySourceFlag() {
        return (String)getAttributeInternal(PRIMARYSOURCEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrimarySourceFlag.
     * @param value value to set the PrimarySourceFlag
     */
    public void setPrimarySourceFlag(String value) {
        setAttributeInternal(PRIMARYSOURCEFLAG, value);
    }

    public void setInvalid() {
        super.setInvalid();
    }

    protected void validateEntity() {
        super.validateEntity();
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList atts) {

        super.create(atts);

        try {
            SequenceImpl seq =
                new SequenceImpl("PRM_TARGET_TRACKING_NO_SEQ", getDBTransaction());
            this.setTargetTrackingNo(seq.getSequenceNumber());

        } catch (Exception e1) {
            System.out.println("*******************Exception while creating target tracking number***********************");
            System.out.println("Error :" + e1.toString());
            //throw new JboException("Invalid primary key value.");
        }
    }

    /**Validation method for Title
     */
    public boolean validateTitleClassifications() {
        RowIterator acctIter = getClassification();
        int i = 0;
        int j = 0;

        while (j < this.getClassification().getRowCount()) {
            ClassificationImpl cls = (ClassificationImpl)acctIter.next();
            if (cls.getPrimaryFlag().equalsIgnoreCase("Y")) {
                i++;
            }
            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**Validation method for Title
     */
    public boolean validateTitleVaryingForms() {
        RowIterator acctIter = getVaryingForm();
        int i = 0;
        int j = 0;

        while (j < this.getVaryingForm().getRowCount()) {
            VaryingFormImpl cls = (VaryingFormImpl)acctIter.next();
            if ("Y".equalsIgnoreCase(cls.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**Validation method for Title
     */
    public boolean validateTitleSubjects() {

        RowIterator acctIter = this.getTitleSubject();
        TitleSubjectImpl sub = null;
        int i = 0;
        int j = 0;
        

        while (j < this.getTitleSubject().getRowCount()) {
            sub = (TitleSubjectImpl)acctIter.next();

            if ("Y".equalsIgnoreCase(sub.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**Validation method for Title
     */
    public boolean validateTitleSeries() {
        RowIterator acctIter = getTitleSeries();
        int i = 0;
        int j = 0;

        while (j < this.getTitleSeries().getRowCount()) {
            TitleSeriesImpl sub = (TitleSeriesImpl)acctIter.next();
            if ("Y".equalsIgnoreCase(sub.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**Validation method for Title
     */
    public boolean validateTitleLanguages() {
        RowIterator acctIter = getTitleLanguage();
        int i = 0;
        int j = 0;

        while (j < this.getTitleLanguage().getRowCount()) {
            TitleLanguageImpl lan = (TitleLanguageImpl)acctIter.next();
            if ("Y".equalsIgnoreCase(lan.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**Validation method for Title
     */
    public boolean validateTitleAbstractLanguages() {
        RowIterator acctIter = getTitleAbstractLanguage();
        int i = 0;
        int j = 0;

        while (j < this.getTitleAbstractLanguage().getRowCount()) {
            TitleAbstractLanguageImpl lan =
                (TitleAbstractLanguageImpl)acctIter.next();
            if ("Y".equalsIgnoreCase(lan.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**Validation method for Title
     */
    public boolean validateTitleAddedEntries() {
        RowIterator acctIter = getAddedEntry();
        int i = 0;
        int j = 0;

        while (j < this.getAddedEntry().getRowCount()) {
            AddedEntryImpl cls = (AddedEntryImpl)acctIter.next();
            if ("Y".equalsIgnoreCase(cls.getPrimaryFlag())) {
                i++;
            }

            if (i > 1) {
                return false;
            }

            j++;
        }

        return true;
    }

    /**Create Sort Title method to be used for OVR generation
     */

    private String createSortTitle() {
        String value = this.getLongTitle();
        try {

            if (value != null && value.trim().length() > 0) {
                value = value.trim();
                if (value.startsWith("The ") || value.startsWith("THE ") ||
                    value.startsWith("the "))
                    value = value.substring(4) + " " + value.substring(0, 3);
                else if (value.startsWith("An ") || value.startsWith("AN ") ||
                         value.startsWith("an "))
                    value = value.substring(3) + " " + value.substring(0, 2);
                else if (value.startsWith("A ") || value.startsWith("a "))
                    value = value.substring(2) + " " + value.substring(0, 1);
            }
        } catch (Exception e) {
            return this.getLongTitle();
        }

        return value;
    }
}
