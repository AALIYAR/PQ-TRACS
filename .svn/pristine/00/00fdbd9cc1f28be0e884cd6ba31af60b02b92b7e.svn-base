package com.pq.tracs.model.vo;


import com.pq.tracs.model.eo.TraxOvrCSCutoverImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.RowCreateException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.Entity;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 23 10:22:16 EST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxOvrCSCutoverViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ContentSourceCutover {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getContentSourceCutover();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setContentSourceCutover((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        CsCutoverCreatedDate {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getCsCutoverCreatedDate();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setCsCutoverCreatedDate((Date)value);
            }
        }
        ,
        Id {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        TitleRecordId {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getTitleRecordId();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setTitleRecordId((Number)value);
            }
        }
        ,
        ContentSourceCutoverLookup {
            public Object get(TraxOvrCSCutoverViewRowImpl obj) {
                return obj.getContentSourceCutoverLookup();
            }

            public void put(TraxOvrCSCutoverViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(TraxOvrCSCutoverViewRowImpl object);

        public abstract void put(TraxOvrCSCutoverViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CONTENTSOURCECUTOVER = AttributesEnum.ContentSourceCutover.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CSCUTOVERCREATEDDATE = AttributesEnum.CsCutoverCreatedDate.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int TITLERECORDID = AttributesEnum.TitleRecordId.index();
    public static final int CONTENTSOURCECUTOVERLOOKUP = AttributesEnum.ContentSourceCutoverLookup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxOvrCSCutoverViewRowImpl() {
    }

    /**
     * Gets TraxOvrCSCutover entity object.
     * @return the TraxOvrCSCutover
     */
    public TraxOvrCSCutoverImpl getTraxOvrCSCutover() {
        return (TraxOvrCSCutoverImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for CONTENT_SOURCE_CUTOVER using the alias name ContentSourceCutover.
     * @return the CONTENT_SOURCE_CUTOVER
     */
    public String getContentSourceCutover() {
        return (String) getAttributeInternal(CONTENTSOURCECUTOVER);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTENT_SOURCE_CUTOVER using the alias name ContentSourceCutover.
     * @param value value to set the CONTENT_SOURCE_CUTOVER
     */
    public void setContentSourceCutover(String value) {
        setAttributeInternal(CONTENTSOURCECUTOVER, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CS_CUTOVER_CREATED_DATE using the alias name CsCutoverCreatedDate.
     * @return the CS_CUTOVER_CREATED_DATE
     */
    public Date getCsCutoverCreatedDate() {
        return (Date)getAttributeInternal(CSCUTOVERCREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CS_CUTOVER_CREATED_DATE using the alias name CsCutoverCreatedDate.
     * @param value value to set the CS_CUTOVER_CREATED_DATE
     */
    public void setCsCutoverCreatedDate(Date value) {
         setAttributeInternal(CSCUTOVERCREATEDDATE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for TITLE_RECORD_ID using the alias name TitleRecordId.
     * @return the TITLE_RECORD_ID
     */
    public Number getTitleRecordId() {
        return (Number)getAttributeInternal(TITLERECORDID);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE_RECORD_ID using the alias name TitleRecordId.
     * @param value value to set the TITLE_RECORD_ID
     */
    public void setTitleRecordId(Number value) {
        setAttributeInternal(TITLERECORDID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ContentSourceCutoverLookup.
     */
    public RowSet getContentSourceCutoverLookup() {
        return (RowSet)getAttributeInternal(CONTENTSOURCECUTOVERLOOKUP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
        protected void create(AttributeList attributeList) {
        
            TraxOvrCSCutoverImpl newCSCutover = (TraxOvrCSCutoverImpl)this.getTraxOvrCSCutover();
           
                   try {
                newCSCutover.create(attributeList);
                       
                newCSCutover.setCsCutoverCreatedDate((Date)Date.getCurrentDate());
            }
                   
           catch (Exception e) {
                       newCSCutover.revert();
                        throw new RowCreateException(true      /* EO Row? */,
                                                     "Content Source Cutover" /* EO Name */,
                                                     e   /* Details */);
                    }
         
            }

    }


