package com.pq.tracs.model.dao;


import com.pq.tracs.model.bo.CategoryImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CategoryViewRowImpl extends ViewRowImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getId();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ParentCategoryId {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getParentCategoryId();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setParentCategoryId((Number)value);
            }
        }
        ,
        ParentValueId {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getParentValueId();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setParentValueId((Number)value);
            }
        }
        ,
        Name {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getName();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Type {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getType();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ,
        SingularFlag {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getSingularFlag();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setSingularFlag((String)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        FullOrPartialFlag {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getFullOrPartialFlag();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setFullOrPartialFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        TraxCategoryValueView {
            public Object get(CategoryViewRowImpl obj) {
                return obj.getTraxCategoryValueView();
            }

            public void put(CategoryViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CategoryViewRowImpl object);

        public abstract void put(CategoryViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int PARENTCATEGORYID = AttributesEnum.ParentCategoryId.index();
    public static final int PARENTVALUEID = AttributesEnum.ParentValueId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int SINGULARFLAG = AttributesEnum.SingularFlag.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int FULLORPARTIALFLAG = AttributesEnum.FullOrPartialFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int TRAXCATEGORYVALUEVIEW = AttributesEnum.TraxCategoryValueView.index();

    /**This is the default constructor (do not remove)
     */
    public CategoryViewRowImpl() {
    }

    /**Gets TraxCategory entity object.
     */
    public CategoryImpl getTraxCategory() {
        return (CategoryImpl)getEntity(0);
    }

    /**Gets the attribute value for ID using the alias name Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as attribute value for ID using the alias name Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for NAME using the alias name Name
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**Sets <code>value</code> as attribute value for NAME using the alias name Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**Gets the attribute value for TYPE using the alias name Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**Sets <code>value</code> as attribute value for TYPE using the alias name Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**Gets the attribute value for SINGULAR_FLAG using the alias name SingularFlag
     */
    public String getSingularFlag() {
        return (String) getAttributeInternal(SINGULARFLAG);
    }

    /**Sets <code>value</code> as attribute value for SINGULAR_FLAG using the alias name SingularFlag
     */
    public void setSingularFlag(String value) {
        setAttributeInternal(SINGULARFLAG, value);
    }

    /**Gets the attribute value for PARENT_CATEGORY_ID using the alias name ParentCategoryId
     */
    public Number getParentCategoryId() {
        return (Number) getAttributeInternal(PARENTCATEGORYID);
    }

    /**Sets <code>value</code> as attribute value for PARENT_CATEGORY_ID using the alias name ParentCategoryId
     */
    public void setParentCategoryId(Number value) {
        setAttributeInternal(PARENTCATEGORYID, value);
    }

    /**Gets the attribute value for PARENT_VALUE_ID using the alias name ParentValueId
     */
    public Number getParentValueId() {
        return (Number) getAttributeInternal(PARENTVALUEID);
    }

    /**Sets <code>value</code> as attribute value for PARENT_VALUE_ID using the alias name ParentValueId
     */
    public void setParentValueId(Number value) {
        setAttributeInternal(PARENTVALUEID, value);
    }

    /**Gets the attribute value for CREATED_BY using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CREATED_DATE using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**Gets the attribute value for ACTIVE_FLAG using the alias name ActiveFlag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**Sets <code>value</code> as attribute value for ACTIVE_FLAG using the alias name ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**Gets the attribute value for FULL_OR_PARTIAL_FLAG using the alias name FullOrPartialFlag
     */
    public String getFullOrPartialFlag() {
        return (String) getAttributeInternal(FULLORPARTIALFLAG);
    }

    /**Sets <code>value</code> as attribute value for FULL_OR_PARTIAL_FLAG using the alias name FullOrPartialFlag
     */
    public void setFullOrPartialFlag(String value) {
        setAttributeInternal(FULLORPARTIALFLAG, value);
    }

    /**Gets the associated <code>Row</code> using master-detail link TraxCategoryValueView
     */
    public Row getTraxCategoryValueView() {
        return (Row)getAttributeInternal(TRAXCATEGORYVALUEVIEW);
    }


    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


}
