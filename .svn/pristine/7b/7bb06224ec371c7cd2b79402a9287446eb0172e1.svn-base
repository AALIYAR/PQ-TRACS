package com.pq.tracs.model.bo;

import java.sql.PreparedStatement;
import java.sql.ResultSet;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OvrPublisherImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        this.setGenerationMethod("Manual");
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(OvrPublisherImpl obj) {
                return obj.getId();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        TitleRecordId {
            public Object get(OvrPublisherImpl obj) {
                return obj.getTitleRecordId();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setTitleRecordId((Number)value);
            }
        }
        ,
        PublisherId {
            public Object get(OvrPublisherImpl obj) {
                return obj.getPublisherId();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setPublisherId((Number)value);
            }
        }
        ,
        PublisherAddressId {
            public Object get(OvrPublisherImpl obj) {
                return obj.getPublisherAddressId();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setPublisherAddressId((Number)value);
            }
        }
        ,
        StartDate {
            public Object get(OvrPublisherImpl obj) {
                return obj.getStartDate();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setStartDate((Date)value);
            }
        }
        ,
        EndDate {
            public Object get(OvrPublisherImpl obj) {
                return obj.getEndDate();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        Url {
            public Object get(OvrPublisherImpl obj) {
                return obj.getUrl();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setUrl((String)value);
            }
        }
        ,
        Notes {
            public Object get(OvrPublisherImpl obj) {
                return obj.getNotes();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setNotes((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(OvrPublisherImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(OvrPublisherImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(OvrPublisherImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(OvrPublisherImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        GenerationMethod {
            public Object get(OvrPublisherImpl obj) {
                return obj.getGenerationMethod();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setGenerationMethod((String)value);
            }
        }
        ,
        Publisher {
            public Object get(OvrPublisherImpl obj) {
                return obj.getPublisher();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setPublisher((PublisherImpl)value);
            }
        }
        ,
        PublisherAddress {
            public Object get(OvrPublisherImpl obj) {
                return obj.getPublisherAddress();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setPublisherAddress((PublisherAddressImpl)value);
            }
        }
        ,
        TitleRecord {
            public Object get(OvrPublisherImpl obj) {
                return obj.getTitleRecord();
            }

            public void put(OvrPublisherImpl obj, Object value) {
                obj.setTitleRecord((TitleRecordImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OvrPublisherImpl object);

        public abstract void put(OvrPublisherImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int TITLERECORDID = AttributesEnum.TitleRecordId.index();
    public static final int PUBLISHERID = AttributesEnum.PublisherId.index();
    public static final int PUBLISHERADDRESSID = AttributesEnum.PublisherAddressId.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int URL = AttributesEnum.Url.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int GENERATIONMETHOD = AttributesEnum.GenerationMethod.index();
    public static final int PUBLISHER = AttributesEnum.Publisher.index();
    public static final int PUBLISHERADDRESS = AttributesEnum.PublisherAddress.index();
    public static final int TITLERECORD = AttributesEnum.TitleRecord.index();

    /**This is the default constructor (do not remove)
     */
    public OvrPublisherImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.OvrPublisher");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for TitleRecordId, using the alias name TitleRecordId
     */
    public Number getTitleRecordId() {
        return (Number)getAttributeInternal(TITLERECORDID);
    }

    /**Sets <code>value</code> as the attribute value for TitleRecordId
     */
    public void setTitleRecordId(Number value) {
        setAttributeInternal(TITLERECORDID, value);
    }

    /**Gets the attribute value for PublisherId, using the alias name PublisherId
     */
    public Number getPublisherId() {
        return (Number)getAttributeInternal(PUBLISHERID);
    }

    /**Sets <code>value</code> as the attribute value for PublisherId
     */
    public void setPublisherId(Number value) {
        setAttributeInternal(PUBLISHERID, value);
    }

    /**Gets the attribute value for PublisherAddressId, using the alias name PublisherAddressId
     */
    public Number getPublisherAddressId() {
        return (Number)getAttributeInternal(PUBLISHERADDRESSID);
    }

    /**Sets <code>value</code> as the attribute value for PublisherAddressId
     */
    public void setPublisherAddressId(Number value) {
        setAttributeInternal(PUBLISHERADDRESSID, value);
    }

    /**Gets the attribute value for StartDate, using the alias name StartDate
     */
    public Date getStartDate() {
        return (Date)getAttributeInternal(STARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**Gets the attribute value for EndDate, using the alias name EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**Gets the attribute value for Url, using the alias name Url
     */
    public String getUrl() {
        return (String)getAttributeInternal(URL);
    }

    /**Sets <code>value</code> as the attribute value for Url
     */
    public void setUrl(String value) {
        setAttributeInternal(URL, value);
    }

    /**Gets the attribute value for Notes, using the alias name Notes
     */
    public String getNotes() {
        return (String)getAttributeInternal(NOTES);
    }

    /**Sets <code>value</code> as the attribute value for Notes
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for GenerationMethod, using the alias name GenerationMethod.
     * @return the GenerationMethod
     */
    public String getGenerationMethod() {
        return (String)getAttributeInternal(GENERATIONMETHOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for GenerationMethod.
     * @param value value to set the GenerationMethod
     */
    public void setGenerationMethod(String value) {
        setAttributeInternal(GENERATIONMETHOD, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**Gets the associated entity com.pq.tracs.model.bo.TracsBaseEntity
     */
    public PublisherImpl getPublisher() {
        return (PublisherImpl)getAttributeInternal(PUBLISHER);
    }

    /**Sets <code>value</code> as the associated entity com.pq.tracs.model.bo.TracsBaseEntity
     */
    public void setPublisher(PublisherImpl value) {
        setAttributeInternal(PUBLISHER, value);
    }

    /**Gets the associated entity com.pq.tracs.model.bo.TracsBaseEntity
     */
    public PublisherAddressImpl getPublisherAddress() {
        return (PublisherAddressImpl)getAttributeInternal(PUBLISHERADDRESS);
    }

    /**Sets <code>value</code> as the associated entity com.pq.tracs.model.bo.TracsBaseEntity
     */
    public void setPublisherAddress(PublisherAddressImpl value) {
        setAttributeInternal(PUBLISHERADDRESS, value);
    }

    /**Gets the associated entity TitleRecordImpl
     */
    public TitleRecordImpl getTitleRecord() {
        return (TitleRecordImpl)getAttributeInternal(TITLERECORD);
    }

    /**Sets <code>value</code> as the associated entity TitleRecordImpl
     */
    public void setTitleRecord(TitleRecordImpl value) {
        setAttributeInternal(TITLERECORD, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**Validation method for OvrPublisher
     */
    public boolean validateOvrPublisherEndDates() {
        if (this.getEndDate() != null) {
            try {
                RowIterator publishers = this.getTitleRecord().getOvrPublisher();
                if (publishers.getRowCount() < 2) {
                    return true;
                } else {
                    publishers.reset();
                    while (publishers.hasNext()) {
                        OvrPublisherImpl publisher = (OvrPublisherImpl)publishers.next();
                        if (this.getId() != null && publisher.getId() != null && publisher.getId().compareTo(this.getId()) != 0) {
                            if (publisher.getEndDate().compareTo(this.getEndDate()) == 0) {
                                return false;
                            }
                        }
                    }
                }
            } catch (Exception ex) {
                
            }
        } else {
            try {
                RowIterator publishers = this.getTitleRecord().getOvrPublisher();
                if (publishers.getRowCount() < 2) {
                    return true;
                } else {
                    publishers.reset();
                    while (publishers.hasNext()) {
                        OvrPublisherImpl publisher = (OvrPublisherImpl)publishers.next();
                        if (this.getId() != null && publisher.getId() != null && publisher.getId().compareTo(this.getId()) != 0) {
                            if (publisher.getEndDate() == null) {
                                return false;
                            }
                        }
                    }
                }
            } catch (Exception ex) {
                
            }
        }
        return true;
    }

}
