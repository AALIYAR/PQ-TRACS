package com.pq.tracs.model.services.common;

import com.pq.tracs.model.dao.ContractViewRowImpl;
import com.pq.tracs.model.dao.TitleViewRowImpl;

import java.util.ArrayList;
import java.util.HashMap;

import javax.faces.event.ActionEvent;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.domain.Number;

import oracle.jheadstart.model.adfbc.service.common.JhsModelService;
import oracle.jheadstart.model.adfbc.v2.JhsApplicationModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---------------------------------------------------------------------
public interface TracsService extends JhsApplicationModule, ApplicationModule {
    void applyBindParams(String voUsage, ArrayList args);


    String getJhsOrgKey();

    JhsModelService getNestedJhsModelService();

    void processParentShuttle(Row parentRow, String childUsage, 
                              String unselectedListUsage, 
                              Key[] oldSelectedKeys, Key[] newSelectedKeys, 
                              HashMap parentChildRefAttrs);

    void processIntersectionShuttle(Row parent1Row, String intersectionUsage, 
                                    String parent2Usage, Key[] oldSelectedKeys, 
                                    Key[] newSelectedKeys, 
                                    HashMap parent2ChildRefAttrs);

    void setRangeStart(String viewObjectUsage, String rangeStart);

    void queryByKeyValue(String viewObjectUsage, String keyValue);


    void setCurrentRowWithKeyValue(String viewObjectUsage, Number keyValue);

    void advancedSearch(String viewObjectUsage, ArrayList arguments, 
                        Boolean allConditionsMet);


    void createTargetFromUlrichs();

    void forwardToApex();

    void createContractFromOpp(Number pAgreementId);


    void createCatalogNumberForTarget();

    ContractViewRowImpl copyContract();

    void excludeAll();

    void validateImportData(Number pFileId);

    void saveImportData(Number pFileId);

    void clearDeepLinkViewCriteria(String viewObjectUsage,
                                   Boolean requeryIfFound);

    void clearViewCriteria(String viewObjectUsage, String vcName);


    TitleViewRowImpl copyTitle();

    TitleViewRowImpl executeNameChange();

    void addTitlesToContract(Number pContractId, Number pOppId);


}
