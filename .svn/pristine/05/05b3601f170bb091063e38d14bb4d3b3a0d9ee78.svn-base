package com.pq.tracs.model.vo;

import com.pq.tracs.model.bo.TitleImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 09 15:33:36 EST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TraxTitleChildTitleViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TraxTitleChildTitleViewRowImpl obj) {
                return obj.getId();
            }

            public void put(TraxTitleChildTitleViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        CurrentCatalogId {
            public Object get(TraxTitleChildTitleViewRowImpl obj) {
                return obj.getCurrentCatalogId();
            }

            public void put(TraxTitleChildTitleViewRowImpl obj, Object value) {
                obj.setCurrentCatalogId((Number)value);
            }
        }
        ,
        CatalogNumber {
            public Object get(TraxTitleChildTitleViewRowImpl obj) {
                return obj.getCatalogNumber();
            }

            public void put(TraxTitleChildTitleViewRowImpl obj, Object value) {
                obj.setCatalogNumber((String)value);
            }
        }
        ,
        CatalogRoot {
            public Object get(TraxTitleChildTitleViewRowImpl obj) {
                return obj.getCatalogRoot();
            }

            public void put(TraxTitleChildTitleViewRowImpl obj, Object value) {
                obj.setCatalogRoot((String)value);
            }
        }
        ,
        LongTitle {
            public Object get(TraxTitleChildTitleViewRowImpl obj) {
                return obj.getLongTitle();
            }

            public void put(TraxTitleChildTitleViewRowImpl obj, Object value) {
                obj.setLongTitle((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TraxTitleChildTitleViewRowImpl object);

        public abstract void put(TraxTitleChildTitleViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int CURRENTCATALOGID = AttributesEnum.CurrentCatalogId.index();
    public static final int CATALOGNUMBER = AttributesEnum.CatalogNumber.index();
    public static final int CATALOGROOT = AttributesEnum.CatalogRoot.index();
    public static final int LONGTITLE = AttributesEnum.LongTitle.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TraxTitleChildTitleViewRowImpl() {
    }

    /**
     * Gets Title entity object.
     * @return the Title
     */
    public TitleImpl getTitle() {
        return (TitleImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for CURRENT_CATALOG_ID using the alias name CurrentCatalogId.
     * @return the CURRENT_CATALOG_ID
     */
    public Number getCurrentCatalogId() {
        return (Number)getAttributeInternal(CURRENTCATALOGID);
    }

    /**
     * Sets <code>value</code> as attribute value for CURRENT_CATALOG_ID using the alias name CurrentCatalogId.
     * @param value value to set the CURRENT_CATALOG_ID
     */
    public void setCurrentCatalogId(Number value) {
        setAttributeInternal(CURRENTCATALOGID, value);
    }

    /**
     * Gets the attribute value for CATALOG_NUMBER using the alias name CatalogNumber.
     * @return the CATALOG_NUMBER
     */
    public String getCatalogNumber() {
        return (String) getAttributeInternal(CATALOGNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for CATALOG_NUMBER using the alias name CatalogNumber.
     * @param value value to set the CATALOG_NUMBER
     */
    public void setCatalogNumber(String value) {
        setAttributeInternal(CATALOGNUMBER, value);
    }

    /**
     * Gets the attribute value for CATALOG_ROOT using the alias name CatalogRoot.
     * @return the CATALOG_ROOT
     */
    public String getCatalogRoot() {
        return (String) getAttributeInternal(CATALOGROOT);
    }

    /**
     * Sets <code>value</code> as attribute value for CATALOG_ROOT using the alias name CatalogRoot.
     * @param value value to set the CATALOG_ROOT
     */
    public void setCatalogRoot(String value) {
        setAttributeInternal(CATALOGROOT, value);
    }

    /**
     * Gets the attribute value for LONG_TITLE using the alias name LongTitle.
     * @return the LONG_TITLE
     */
    public String getLongTitle() {
        return (String) getAttributeInternal(LONGTITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for LONG_TITLE using the alias name LongTitle.
     * @param value value to set the LONG_TITLE
     */
    public void setLongTitle(String value) {
        setAttributeInternal(LONGTITLE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
