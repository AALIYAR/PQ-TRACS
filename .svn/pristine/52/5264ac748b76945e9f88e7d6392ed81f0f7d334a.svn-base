package com.pq.tracs.model.bo;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TitleRecordScheduleImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getId();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        TitleRecordId {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getTitleRecordId();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setTitleRecordId((Number)value);
            }
        }
        ,
        PublicationFrequency {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getPublicationFrequency();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setPublicationFrequency((Number)value);
            }
        }
        ,
        Regularity {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getRegularity();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setRegularity((String)value);
            }
        }
        ,
        AdditionalIssues {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getAdditionalIssues();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setAdditionalIssues((Number)value);
            }
        }
        ,
        FrequencyType {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getFrequencyType();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setFrequencyType((String)value);
            }
        }
        ,
        FrequencySource {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getFrequencySource();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setFrequencySource((String)value);
            }
        }
        ,
        FrequencyAdded {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getFrequencyAdded();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setFrequencyAdded((Date)value);
            }
        }
        ,
        FrequencyChanged {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getFrequencyChanged();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setFrequencyChanged((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreatedDate {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(TitleRecordScheduleImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(TitleRecordScheduleImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TitleRecordScheduleImpl object);

        public abstract void put(TitleRecordScheduleImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int TITLERECORDID = AttributesEnum.TitleRecordId.index();
    public static final int PUBLICATIONFREQUENCY = AttributesEnum.PublicationFrequency.index();
    public static final int REGULARITY = AttributesEnum.Regularity.index();
    public static final int ADDITIONALISSUES = AttributesEnum.AdditionalIssues.index();
    public static final int FREQUENCYTYPE = AttributesEnum.FrequencyType.index();
    public static final int FREQUENCYSOURCE = AttributesEnum.FrequencySource.index();
    public static final int FREQUENCYADDED = AttributesEnum.FrequencyAdded.index();
    public static final int FREQUENCYCHANGED = AttributesEnum.FrequencyChanged.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();

    /**This is the default constructor (do not remove)
     */
    public TitleRecordScheduleImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.TitleRecordSchedule");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for TitleRecordId, using the alias name TitleRecordId
     */
    public Number getTitleRecordId() {
        return (Number)getAttributeInternal(TITLERECORDID);
    }

    /**Sets <code>value</code> as the attribute value for TitleRecordId
     */
    public void setTitleRecordId(Number value) {
        setAttributeInternal(TITLERECORDID, value);
    }

    /**Gets the attribute value for PublicationFrequency, using the alias name PublicationFrequency
     */
    public Number getPublicationFrequency() {
        return (Number)getAttributeInternal(PUBLICATIONFREQUENCY);
    }

    /**Sets <code>value</code> as the attribute value for PublicationFrequency
     */
    public void setPublicationFrequency(Number value) {
        setAttributeInternal(PUBLICATIONFREQUENCY, value);
    }

    /**Gets the attribute value for Regularity, using the alias name Regularity
     */
    public String getRegularity() {
        return (String)getAttributeInternal(REGULARITY);
    }

    /**Sets <code>value</code> as the attribute value for Regularity
     */
    public void setRegularity(String value) {
        setAttributeInternal(REGULARITY, value);
    }

    /**Gets the attribute value for AdditionalIssues, using the alias name AdditionalIssues
     */
    public Number getAdditionalIssues() {
        return (Number)getAttributeInternal(ADDITIONALISSUES);
    }

    /**Sets <code>value</code> as the attribute value for AdditionalIssues
     */
    public void setAdditionalIssues(Number value) {
        setAttributeInternal(ADDITIONALISSUES, value);
    }

    /**Gets the attribute value for FrequencyType, using the alias name FrequencyType
     */
    public String getFrequencyType() {
        return (String)getAttributeInternal(FREQUENCYTYPE);
    }

    /**Sets <code>value</code> as the attribute value for FrequencyType
     */
    public void setFrequencyType(String value) {
        setAttributeInternal(FREQUENCYTYPE, value);
    }

    /**Gets the attribute value for FrequencySource, using the alias name FrequencySource
     */
    public String getFrequencySource() {
        return (String)getAttributeInternal(FREQUENCYSOURCE);
    }

    /**Sets <code>value</code> as the attribute value for FrequencySource
     */
    public void setFrequencySource(String value) {
        setAttributeInternal(FREQUENCYSOURCE, value);
    }

    /**Gets the attribute value for FrequencyAdded, using the alias name FrequencyAdded
     */
    public Date getFrequencyAdded() {
        return (Date)getAttributeInternal(FREQUENCYADDED);
    }

    /**Sets <code>value</code> as the attribute value for FrequencyAdded
     */
    public void setFrequencyAdded(Date value) {
        setAttributeInternal(FREQUENCYADDED, value);
    }

    /**Gets the attribute value for FrequencyChanged, using the alias name FrequencyChanged
     */
    public Date getFrequencyChanged() {
        return (Date)getAttributeInternal(FREQUENCYCHANGED);
    }

    /**Sets <code>value</code> as the attribute value for FrequencyChanged
     */
    public void setFrequencyChanged(Date value) {
        setAttributeInternal(FREQUENCYCHANGED, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }


    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }


    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }


}
