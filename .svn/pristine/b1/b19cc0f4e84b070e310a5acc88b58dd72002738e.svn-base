package com.pq.tracs.model.bo;

import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.SQLException;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RoyaltyRateImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getId();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContractId {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getContractId();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setContractId((Number)value);
            }
        }
        ,
        Media {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getMedia();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setMedia((String)value);
            }
        }
        ,
        RateType {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getRateType();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setRateType((String)value);
            }
        }
        ,
        RoyaltyRate {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getRoyaltyRate();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setRoyaltyRate((Number)value);
            }
        }
        ,
        EffectiveStartDate {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getEffectiveStartDate();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setEffectiveStartDate((Date)value);
            }
        }
        ,
        EffectiveEndDate {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getEffectiveEndDate();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setEffectiveEndDate((Date)value);
            }
        }
        ,
        ExceptionFlag {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getExceptionFlag();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setExceptionFlag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreatedDate {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RoyaltyRateException {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getRoyaltyRateException();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleRoyaltyRate {
            public Object get(RoyaltyRateImpl obj) {
                return obj.getTitleRoyaltyRate();
            }

            public void put(RoyaltyRateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(RoyaltyRateImpl object);

        public abstract void put(RoyaltyRateImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int MEDIA = AttributesEnum.Media.index();
    public static final int RATETYPE = AttributesEnum.RateType.index();
    public static final int ROYALTYRATE = AttributesEnum.RoyaltyRate.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int EXCEPTIONFLAG = AttributesEnum.ExceptionFlag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ROYALTYRATEEXCEPTION = AttributesEnum.RoyaltyRateException.index();
    public static final int TITLEROYALTYRATE = AttributesEnum.TitleRoyaltyRate.index();

    /**This is the default constructor (do not remove)
     */
    public RoyaltyRateImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.RoyaltyRate");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for ContractId, using the alias name ContractId
     */
    public Number getContractId() {
        return (Number)getAttributeInternal(CONTRACTID);
    }

    /**Sets <code>value</code> as the attribute value for ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**Gets the attribute value for Media, using the alias name Media
     */
    public String getMedia() {
        return (String)getAttributeInternal(MEDIA);
    }

    /**Sets <code>value</code> as the attribute value for Media
     */
    public void setMedia(String value) {
        setAttributeInternal(MEDIA, value);
    }

    /**Gets the attribute value for RateType, using the alias name RateType
     */
    public String getRateType() {
        return (String)getAttributeInternal(RATETYPE);
    }

    /**Sets <code>value</code> as the attribute value for RateType
     */
    public void setRateType(String value) {
        setAttributeInternal(RATETYPE, value);
    }

    /**Gets the attribute value for RoyaltyRate, using the alias name RoyaltyRate
     */
    public Number getRoyaltyRate() {
        return (Number)getAttributeInternal(ROYALTYRATE);
    }

    /**Sets <code>value</code> as the attribute value for RoyaltyRate
     */
    public void setRoyaltyRate(Number value) {
        setAttributeInternal(ROYALTYRATE, value);
    }

    /**Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date)getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date)getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**Gets the attribute value for ExceptionFlag, using the alias name ExceptionFlag
     */
    public String getExceptionFlag() {
        return (String)getAttributeInternal(EXCEPTIONFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ExceptionFlag
     */
    public void setExceptionFlag(String value) {
        setAttributeInternal(EXCEPTIONFLAG, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }


    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }


    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    protected void prepareForDML(int operation, TransactionEvent e) {
       super.prepareForDML(operation,e);

    }
    

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getRoyaltyRateException() {
        return (RowIterator)getAttributeInternal(ROYALTYRATEEXCEPTION);
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleRoyaltyRate() {
        return (RowIterator)getAttributeInternal(TITLEROYALTYRATE);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }


}
