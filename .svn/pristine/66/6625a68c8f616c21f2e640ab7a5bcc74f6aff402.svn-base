package com.pq.tracs.model.bo;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractImpl extends TracsBaseEntity {

    private static EntityDefImpl mDefinitionObject;
    
    private Number templateId;
    private ContractImpl template;

    @Override
    protected void create(AttributeList atts) {
        super.create(atts);
        this.setCompleteContentSet("Yes");
        this.setRoyaltyBearing("Yes");
        this.setFairTreatmentClause("Yes");
        this.setIssueEditionCoverage("Yes");
        this.setAssignment("Standard");
        this.setGovernance("Michigan");
        this.setWarrantyAndIndemnification("Standard");
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ContractImpl obj) {
                return obj.getId();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContentOwnerId {
            public Object get(ContractImpl obj) {
                return obj.getContentOwnerId();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContentOwnerId((Number)value);
            }
        }
        ,
        ContractNumber {
            public Object get(ContractImpl obj) {
                return obj.getContractNumber();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContractNumber((String)value);
            }
        }
        ,
        Form {
            public Object get(ContractImpl obj) {
                return obj.getForm();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setForm((String)value);
            }
        }
        ,
        Status {
            public Object get(ContractImpl obj) {
                return obj.getStatus();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        Type {
            public Object get(ContractImpl obj) {
                return obj.getType();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ,
        Division {
            public Object get(ContractImpl obj) {
                return obj.getDivision();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setDivision((String)value);
            }
        }
        ,
        CompSubsToProvide {
            public Object get(ContractImpl obj) {
                return obj.getCompSubsToProvide();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCompSubsToProvide((Number)value);
            }
        }
        ,
        FormatOfCompSubs {
            public Object get(ContractImpl obj) {
                return obj.getFormatOfCompSubs();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setFormatOfCompSubs((String)value);
            }
        }
        ,
        EffectiveDate {
            public Object get(ContractImpl obj) {
                return obj.getEffectiveDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setEffectiveDate((Date)value);
            }
        }
        ,
        ExpirationDate {
            public Object get(ContractImpl obj) {
                return obj.getExpirationDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setExpirationDate((Date)value);
            }
        }
        ,
        TermLength {
            public Object get(ContractImpl obj) {
                return obj.getTermLength();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setTermLength((String)value);
            }
        }
        ,
        CancellationNoticeTerm {
            public Object get(ContractImpl obj) {
                return obj.getCancellationNoticeTerm();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCancellationNoticeTerm((Number)value);
            }
        }
        ,
        RolloverDate {
            public Object get(ContractImpl obj) {
                return obj.getRolloverDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setRolloverDate((Date)value);
            }
        }
        ,
        CancellationDate {
            public Object get(ContractImpl obj) {
                return obj.getCancellationDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCancellationDate((Date)value);
            }
        }
        ,
        CancellationEffectiveDate {
            public Object get(ContractImpl obj) {
                return obj.getCancellationEffectiveDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCancellationEffectiveDate((Date)value);
            }
        }
        ,
        CancellationReason {
            public Object get(ContractImpl obj) {
                return obj.getCancellationReason();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCancellationReason((String)value);
            }
        }
        ,
        AutoRenewsFlag {
            public Object get(ContractImpl obj) {
                return obj.getAutoRenewsFlag();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAutoRenewsFlag((String)value);
            }
        }
        ,
        Signatory {
            public Object get(ContractImpl obj) {
                return obj.getSignatory();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setSignatory((String)value);
            }
        }
        ,
        ContractSignedDate {
            public Object get(ContractImpl obj) {
                return obj.getContractSignedDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContractSignedDate((Date)value);
            }
        }
        ,
        AutoRenewTermMonths {
            public Object get(ContractImpl obj) {
                return obj.getAutoRenewTermMonths();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAutoRenewTermMonths((Number)value);
            }
        }
        ,
        Exclusivity {
            public Object get(ContractImpl obj) {
                return obj.getExclusivity();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setExclusivity((String)value);
            }
        }
        ,
        ContentMasterOwner {
            public Object get(ContractImpl obj) {
                return obj.getContentMasterOwner();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContentMasterOwner((String)value);
            }
        }
        ,
        RightsToBeRetained {
            public Object get(ContractImpl obj) {
                return obj.getRightsToBeRetained();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setRightsToBeRetained((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ContractImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(ContractImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(ContractImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(ContractImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        AgreementContactId {
            public Object get(ContractImpl obj) {
                return obj.getAgreementContactId();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAgreementContactId((Number)value);
            }
        }
        ,
        QaContactId {
            public Object get(ContractImpl obj) {
                return obj.getQaContactId();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setQaContactId((Number)value);
            }
        }
        ,
        TechnicalContactId {
            public Object get(ContractImpl obj) {
                return obj.getTechnicalContactId();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setTechnicalContactId((Number)value);
            }
        }
        ,
        NoteFlag {
            public Object get(ContractImpl obj) {
                return obj.getNoteFlag();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setNoteFlag((String)value);
            }
        }
        ,
        RelationshipOwner {
            public Object get(ContractImpl obj) {
                return obj.getRelationshipOwner();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setRelationshipOwner((String)value);
            }
        }
        ,
        Note {
            public Object get(ContractImpl obj) {
                return obj.getNote();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setNote((String)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(ContractImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        IsTemplateFlag {
            public Object get(ContractImpl obj) {
                return obj.getIsTemplateFlag();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setIsTemplateFlag((String)value);
            }
        }
        ,
        TemplateName {
            public Object get(ContractImpl obj) {
                return obj.getTemplateName();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setTemplateName((String)value);
            }
        }
        ,
        ContractTemplateId {
            public Object get(ContractImpl obj) {
                return obj.getContractTemplateId();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContractTemplateId((Number)value);
            }
        }
        ,
        AutoAdd {
            public Object get(ContractImpl obj) {
                return obj.getAutoAdd();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAutoAdd((String)value);
            }
        }
        ,
        Assignment {
            public Object get(ContractImpl obj) {
                return obj.getAssignment();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAssignment((String)value);
            }
        }
        ,
        RoyaltyBearing {
            public Object get(ContractImpl obj) {
                return obj.getRoyaltyBearing();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setRoyaltyBearing((String)value);
            }
        }
        ,
        FairTreatmentClause {
            public Object get(ContractImpl obj) {
                return obj.getFairTreatmentClause();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setFairTreatmentClause((String)value);
            }
        }
        ,
        IssueEditionCoverage {
            public Object get(ContractImpl obj) {
                return obj.getIssueEditionCoverage();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setIssueEditionCoverage((String)value);
            }
        }
        ,
        CompleteContentSet {
            public Object get(ContractImpl obj) {
                return obj.getCompleteContentSet();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setCompleteContentSet((String)value);
            }
        }
        ,
        WarrantyAndIndemnification {
            public Object get(ContractImpl obj) {
                return obj.getWarrantyAndIndemnification();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setWarrantyAndIndemnification((String)value);
            }
        }
        ,
        Governance {
            public Object get(ContractImpl obj) {
                return obj.getGovernance();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setGovernance((String)value);
            }
        }
        ,
        PublisherChangeContractFlag {
            public Object get(ContractImpl obj) {
                return obj.getPublisherChangeContractFlag();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setPublisherChangeContractFlag((String)value);
            }
        }
        ,
        ContentOwner {
            public Object get(ContractImpl obj) {
                return obj.getContentOwner();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContentOwner((ContentOwnerImpl)value);
            }
        }
        ,
        ContractNote {
            public Object get(ContractImpl obj) {
                return obj.getContractNote();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractRight {
            public Object get(ContractImpl obj) {
                return obj.getContractRight();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RoyaltyInformation {
            public Object get(ContractImpl obj) {
                return obj.getRoyaltyInformation();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setRoyaltyInformation((RoyaltyInformationImpl)value);
            }
        }
        ,
        Contact {
            public Object get(ContractImpl obj) {
                return obj.getContact();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContact((ContactImpl)value);
            }
        }
        ,
        QAContact {
            public Object get(ContractImpl obj) {
                return obj.getQAContact();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setQAContact((ContactImpl)value);
            }
        }
        ,
        Contact2 {
            public Object get(ContractImpl obj) {
                return obj.getContact2();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContact2((ContactImpl)value);
            }
        }
        ,
        Activity1 {
            public Object get(ContractImpl obj) {
                return obj.getActivity1();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractAttachment {
            public Object get(ContractImpl obj) {
                return obj.getContractAttachment();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractTitle {
            public Object get(ContractImpl obj) {
                return obj.getContractTitle();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RoyaltyRate {
            public Object get(ContractImpl obj) {
                return obj.getRoyaltyRate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractGuarantee {
            public Object get(ContractImpl obj) {
                return obj.getContractGuarantee();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractTemplate {
            public Object get(ContractImpl obj) {
                return obj.getContractTemplate();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setContractTemplate((ContractImpl)value);
            }
        }
        ,
        TraxActivityContract {
            public Object get(ContractImpl obj) {
                return obj.getTraxActivityContract();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractTitleView {
            public Object get(ContractImpl obj) {
                return obj.getContractTitleView();
            }

            public void put(ContractImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ContractImpl object);

        public abstract void put(ContractImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTENTOWNERID = AttributesEnum.ContentOwnerId.index();
    public static final int CONTRACTNUMBER = AttributesEnum.ContractNumber.index();
    public static final int FORM = AttributesEnum.Form.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int COMPSUBSTOPROVIDE = AttributesEnum.CompSubsToProvide.index();
    public static final int FORMATOFCOMPSUBS = AttributesEnum.FormatOfCompSubs.index();
    public static final int EFFECTIVEDATE = AttributesEnum.EffectiveDate.index();
    public static final int EXPIRATIONDATE = AttributesEnum.ExpirationDate.index();
    public static final int TERMLENGTH = AttributesEnum.TermLength.index();
    public static final int CANCELLATIONNOTICETERM = AttributesEnum.CancellationNoticeTerm.index();
    public static final int ROLLOVERDATE = AttributesEnum.RolloverDate.index();
    public static final int CANCELLATIONDATE = AttributesEnum.CancellationDate.index();
    public static final int CANCELLATIONEFFECTIVEDATE = AttributesEnum.CancellationEffectiveDate.index();
    public static final int CANCELLATIONREASON = AttributesEnum.CancellationReason.index();
    public static final int AUTORENEWSFLAG = AttributesEnum.AutoRenewsFlag.index();
    public static final int SIGNATORY = AttributesEnum.Signatory.index();
    public static final int CONTRACTSIGNEDDATE = AttributesEnum.ContractSignedDate.index();
    public static final int AUTORENEWTERMMONTHS = AttributesEnum.AutoRenewTermMonths.index();
    public static final int EXCLUSIVITY = AttributesEnum.Exclusivity.index();
    public static final int CONTENTMASTEROWNER = AttributesEnum.ContentMasterOwner.index();
    public static final int RIGHTSTOBERETAINED = AttributesEnum.RightsToBeRetained.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int AGREEMENTCONTACTID = AttributesEnum.AgreementContactId.index();
    public static final int QACONTACTID = AttributesEnum.QaContactId.index();
    public static final int TECHNICALCONTACTID = AttributesEnum.TechnicalContactId.index();
    public static final int NOTEFLAG = AttributesEnum.NoteFlag.index();
    public static final int RELATIONSHIPOWNER = AttributesEnum.RelationshipOwner.index();
    public static final int NOTE = AttributesEnum.Note.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int ISTEMPLATEFLAG = AttributesEnum.IsTemplateFlag.index();
    public static final int TEMPLATENAME = AttributesEnum.TemplateName.index();
    public static final int CONTRACTTEMPLATEID = AttributesEnum.ContractTemplateId.index();
    public static final int AUTOADD = AttributesEnum.AutoAdd.index();
    public static final int ASSIGNMENT = AttributesEnum.Assignment.index();
    public static final int ROYALTYBEARING = AttributesEnum.RoyaltyBearing.index();
    public static final int FAIRTREATMENTCLAUSE = AttributesEnum.FairTreatmentClause.index();
    public static final int ISSUEEDITIONCOVERAGE = AttributesEnum.IssueEditionCoverage.index();
    public static final int COMPLETECONTENTSET = AttributesEnum.CompleteContentSet.index();
    public static final int WARRANTYANDINDEMNIFICATION = AttributesEnum.WarrantyAndIndemnification.index();
    public static final int GOVERNANCE = AttributesEnum.Governance.index();
    public static final int PUBLISHERCHANGECONTRACTFLAG = AttributesEnum.PublisherChangeContractFlag.index();
    public static final int CONTENTOWNER = AttributesEnum.ContentOwner.index();
    public static final int CONTRACTNOTE = AttributesEnum.ContractNote.index();
    public static final int CONTRACTRIGHT = AttributesEnum.ContractRight.index();
    public static final int ROYALTYINFORMATION = AttributesEnum.RoyaltyInformation.index();
    public static final int CONTACT = AttributesEnum.Contact.index();
    public static final int QACONTACT = AttributesEnum.QAContact.index();
    public static final int CONTACT2 = AttributesEnum.Contact2.index();
    public static final int ACTIVITY1 = AttributesEnum.Activity1.index();
    public static final int CONTRACTATTACHMENT = AttributesEnum.ContractAttachment.index();
    public static final int CONTRACTTITLE = AttributesEnum.ContractTitle.index();
    public static final int ROYALTYRATE = AttributesEnum.RoyaltyRate.index();
    public static final int CONTRACTGUARANTEE = AttributesEnum.ContractGuarantee.index();
    public static final int CONTRACTTEMPLATE = AttributesEnum.ContractTemplate.index();
    public static final int TRAXACTIVITYCONTRACT = AttributesEnum.TraxActivityContract.index();
    public static final int CONTRACTTITLEVIEW = AttributesEnum.ContractTitleView.index();

    /**This is the default constructor (do not remove)
     */
    public ContractImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.Contract");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for ContentOwnerId, using the alias name ContentOwnerId
     */
    public Number getContentOwnerId() {
        return (Number)getAttributeInternal(CONTENTOWNERID);
    }

    /**Sets <code>value</code> as the attribute value for ContentOwnerId
     */
    public void setContentOwnerId(Number value) {
        setAttributeInternal(CONTENTOWNERID, value);
    }

    /**Gets the attribute value for ContractNumber, using the alias name ContractNumber
     */
    public String getContractNumber() {
        return (String)getAttributeInternal(CONTRACTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for ContractNumber
     */
    public void setContractNumber(String value) {
        setAttributeInternal(CONTRACTNUMBER, value);
    }

    /**Gets the attribute value for Form, using the alias name Form
     */
    public String getForm() {
        return (String)getAttributeInternal(FORM);
    }

    /**Sets <code>value</code> as the attribute value for Form
     */
    public void setForm(String value) {
        setAttributeInternal(FORM, value);
    }

    /**Gets the attribute value for Status, using the alias name Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**Sets <code>value</code> as the attribute value for Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**Gets the attribute value for Type, using the alias name Type
     */
    public String getType() {
        return (String)getAttributeInternal(TYPE);
    }

    /**Sets <code>value</code> as the attribute value for Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**Gets the attribute value for Division, using the alias name Division
     */
    public String getDivision() {
        return (String)getAttributeInternal(DIVISION);
    }

    /**Sets <code>value</code> as the attribute value for Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**Gets the attribute value for CompSubsToProvide, using the alias name CompSubsToProvide
     */
    public Number getCompSubsToProvide() {
        return (Number)getAttributeInternal(COMPSUBSTOPROVIDE);
    }

    /**Sets <code>value</code> as the attribute value for CompSubsToProvide
     */
    public void setCompSubsToProvide(Number value) {
        setAttributeInternal(COMPSUBSTOPROVIDE, value);
    }

    /**Gets the attribute value for FormatOfCompSubs, using the alias name FormatOfCompSubs
     */
    public String getFormatOfCompSubs() {
        return (String)getAttributeInternal(FORMATOFCOMPSUBS);
    }

    /**Sets <code>value</code> as the attribute value for FormatOfCompSubs
     */
    public void setFormatOfCompSubs(String value) {
        setAttributeInternal(FORMATOFCOMPSUBS, value);
    }

    /**Gets the attribute value for EffectiveDate, using the alias name EffectiveDate
     */
    public Date getEffectiveDate() {
        return (Date)getAttributeInternal(EFFECTIVEDATE);
    }

    /**Sets <code>value</code> as the attribute value for EffectiveDate
     */
    public void setEffectiveDate(Date value) {
        setAttributeInternal(EFFECTIVEDATE, value);
    }

    /**Gets the attribute value for ExpirationDate, using the alias name ExpirationDate
     */
    public Date getExpirationDate() {
        return (Date)getAttributeInternal(EXPIRATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for ExpirationDate
     */
    public void setExpirationDate(Date value) {
        setAttributeInternal(EXPIRATIONDATE, value);
    }

    /**Gets the attribute value for TermLength, using the alias name TermLength
     */
    public String getTermLength() {
        return (String)getAttributeInternal(TERMLENGTH);
    }

    /**Sets <code>value</code> as the attribute value for TermLength
     */
    public void setTermLength(String value) {
        setAttributeInternal(TERMLENGTH, value);
    }

    /**Gets the attribute value for CancellationNoticeTerm, using the alias name CancellationNoticeTerm
     */
    public Number getCancellationNoticeTerm() {
        return (Number)getAttributeInternal(CANCELLATIONNOTICETERM);
    }

    /**Sets <code>value</code> as the attribute value for CancellationNoticeTerm
     */
    public void setCancellationNoticeTerm(Number value) {
        setAttributeInternal(CANCELLATIONNOTICETERM, value);
    }

    /**Gets the attribute value for RolloverDate, using the alias name RolloverDate
     */
    public Date getRolloverDate() {
        return (Date)getAttributeInternal(ROLLOVERDATE);
    }

    /**Sets <code>value</code> as the attribute value for RolloverDate
     */
    public void setRolloverDate(Date value) {
        setAttributeInternal(ROLLOVERDATE, value);
    }

    /**Gets the attribute value for CancellationDate, using the alias name CancellationDate
     */
    public Date getCancellationDate() {
        return (Date)getAttributeInternal(CANCELLATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CancellationDate
     */
    public void setCancellationDate(Date value) {
        setAttributeInternal(CANCELLATIONDATE, value);
    }

    /**Gets the attribute value for CancellationEffectiveDate, using the alias name CancellationEffectiveDate
     */
    public Date getCancellationEffectiveDate() {
        return (Date)getAttributeInternal(CANCELLATIONEFFECTIVEDATE);
    }

    /**Sets <code>value</code> as the attribute value for CancellationEffectiveDate
     */
    public void setCancellationEffectiveDate(Date value) {
        setAttributeInternal(CANCELLATIONEFFECTIVEDATE, value);
    }

    /**Gets the attribute value for CancellationReason, using the alias name CancellationReason
     */
    public String getCancellationReason() {
        return (String)getAttributeInternal(CANCELLATIONREASON);
    }

    /**Sets <code>value</code> as the attribute value for CancellationReason
     */
    public void setCancellationReason(String value) {
        setAttributeInternal(CANCELLATIONREASON, value);
    }

    /**Gets the attribute value for AutoRenewsFlag, using the alias name AutoRenewsFlag
     */
    public String getAutoRenewsFlag() {
        return (String)getAttributeInternal(AUTORENEWSFLAG);
    }

    /**Sets <code>value</code> as the attribute value for AutoRenewsFlag
     */
    public void setAutoRenewsFlag(String value) {
        setAttributeInternal(AUTORENEWSFLAG, value);
    }

    /**Gets the attribute value for Signatory, using the alias name Signatory
     */
    public String getSignatory() {
        return (String)getAttributeInternal(SIGNATORY);
    }

    /**Sets <code>value</code> as the attribute value for Signatory
     */
    public void setSignatory(String value) {
        setAttributeInternal(SIGNATORY, value);
    }

    /**Gets the attribute value for ContractSignedDate, using the alias name ContractSignedDate
     */
    public Date getContractSignedDate() {
        return (Date)getAttributeInternal(CONTRACTSIGNEDDATE);
    }

    /**Sets <code>value</code> as the attribute value for ContractSignedDate
     */
    public void setContractSignedDate(Date value) {
        setAttributeInternal(CONTRACTSIGNEDDATE, value);
    }

    /**Gets the attribute value for AutoRenewTermMonths, using the alias name AutoRenewTermMonths
     */
    public Number getAutoRenewTermMonths() {
        return (Number)getAttributeInternal(AUTORENEWTERMMONTHS);
    }

    /**Sets <code>value</code> as the attribute value for AutoRenewTermMonths
     */
    public void setAutoRenewTermMonths(Number value) {
        setAttributeInternal(AUTORENEWTERMMONTHS, value);
    }

    /**Gets the attribute value for Exclusivity, using the alias name Exclusivity
     */
    public String getExclusivity() {
        return (String)getAttributeInternal(EXCLUSIVITY);
    }

    /**Sets <code>value</code> as the attribute value for Exclusivity
     */
    public void setExclusivity(String value) {
        setAttributeInternal(EXCLUSIVITY, value);
    }

    /**Gets the attribute value for ContentMasterOwner, using the alias name ContentMasterOwner
     */
    public String getContentMasterOwner() {
        return (String)getAttributeInternal(CONTENTMASTEROWNER);
    }

    /**Sets <code>value</code> as the attribute value for ContentMasterOwner
     */
    public void setContentMasterOwner(String value) {
        setAttributeInternal(CONTENTMASTEROWNER, value);
    }

    /**Gets the attribute value for RightsToBeRetained, using the alias name RightsToBeRetained
     */
    public String getRightsToBeRetained() {
        return (String)getAttributeInternal(RIGHTSTOBERETAINED);
    }

    /**Sets <code>value</code> as the attribute value for RightsToBeRetained
     */
    public void setRightsToBeRetained(String value) {
        setAttributeInternal(RIGHTSTOBERETAINED, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }


    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }


    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**Gets the associated entity ContentOwnerImpl
     */
    public ContentOwnerImpl getContentOwner() {
        return (ContentOwnerImpl)getAttributeInternal(CONTENTOWNER);
    }

    /**Sets <code>value</code> as the associated entity ContentOwnerImpl
     */
    public void setContentOwner(ContentOwnerImpl value) {
        setAttributeInternal(CONTENTOWNER, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContractNote() {
        return (RowIterator)getAttributeInternal(CONTRACTNOTE);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContractRight() {
        return (RowIterator)getAttributeInternal(CONTRACTRIGHT);
    }


    /**Add attribute defaulting logic in this method.
     */
     /*
    protected void create(AttributeList attributeList) {
        String userId=this.getLoginUserId();  
        if(userId!=null){
            setCreatedBy(userId);
            setLastUpdatedBy(userId);
        }
        setCreatedDate((Date)Date.getCurrentDate());
        setLastUpdatedDate((Date)Date.getCurrentDate());
        super.create(attributeList);
    }
    */
    
    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
    
        if("N".equals(getIsTemplateFlag())){
            if(getContentOwnerId()==null || getContentOwnerId().intValue()<=0)
                throw new JboException("Content owner is required.");
        }
    
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    
    private void CopyRightData(ContractRightImpl right, int operation, TransactionEvent e) {
        // create the new right
        ContractRightImpl newRight = (ContractRightImpl)this.getContractRight().createRow();
        
        // copy the data from the contract templates right into the new right
        newRight.setAttribute("PermissionType", right.getPermissionType());
        newRight.setAttribute("PermissionSubType", right.getPermissionSubType());
        newRight.setAttribute("RightOrRestrictionType", right.getRightOrRestrictionType());
        newRight.setAttribute("IncludesOrExcludes", right.getIncludesOrExcludes());
        newRight.setAttribute("RightType", right.getRightType());
        newRight.setAttribute("TranslationFlag", right.getTranslationFlag()); 
        newRight.setAttribute("Status", right.getStatus());

        // insert the new right
        this.getContractRight().insertRow(newRight);
        newRight.prepareForDML(operation, e);
        
        // get the categories from the contract template right
        RowIterator categories = right.getContractRightCategory();
        
        // copy the template categories to the new right
        while (categories.hasNext()) {
            Row category = categories.next();

            Row newCat = newRight.getContractRightCategory().createRow();
            newCat.setAttribute("CategoryId", category.getAttribute("CategoryId"));
            newCat.setAttribute("Value", category.getAttribute("Value"));
            newCat.setAttribute("PermitFlag", category.getAttribute("PermitFlag"));
            newCat.setAttribute("FullOrPartial", category.getAttribute("FullOrPartial"));
            // since 2 fields are newly added to Contract Right CAtegories added bellow 2 
            // to get rid of errors while copieng from template.
            newCat.setAttribute("SubcategoryValue", null);
            newCat.setAttribute("SubcategoryValuePermitFlag", "N");
            
            newRight.getContractRightCategory().insertRow(newCat);
        }        
    }
    
    private void CopyTemplateData(int operation, TransactionEvent e) {

        RowIterator rights = template.getContractRight();
        while (rights.hasNext()) {
            CopyRightData((ContractRightImpl)rights.next(), operation, e);
        }
        
        RowIterator rates = template.getRoyaltyRate();
        while (rates.hasNext()) {
            Row rate = rates.next();
            Row newRate = this.getRoyaltyRate().createRow();
            
            newRate.setAttribute("Media", rate.getAttribute("Media"));
            newRate.setAttribute("RateType", rate.getAttribute("RateType"));
            newRate.setAttribute("RoyaltyRate", rate.getAttribute("RoyaltyRate"));
            
            this.getRoyaltyRate().insertRow(newRate);
        }
        
        RowIterator guarantees = template.getContractGuarantee();
        while (guarantees.hasNext()) {
            Row guarantee = guarantees.next();
            Row newGuarantee = this.getContractGuarantee().createRow();
            
            newGuarantee.setAttribute("Currency", guarantee.getAttribute("Currency"));
            newGuarantee.setAttribute("Amount", guarantee.getAttribute("Amount"));
            newGuarantee.setAttribute("Media", guarantee.getAttribute("Media"));
            newGuarantee.setAttribute("DeliveryFormat", guarantee.getAttribute("DeliveryFormat"));
            newGuarantee.setAttribute("ProductCode", guarantee.getAttribute("ProductCode"));
            newGuarantee.setAttribute("InventoryDivision", guarantee.getAttribute("InventoryDivision"));
            
            this.getContractGuarantee().insertRow(newGuarantee);
        }
    }
        
    /**Custom DML update/insert/delete logic here.
     */
     
    protected void prepareForDML (int operation, TransactionEvent e) {
        super.prepareForDML(operation, e);
        
        if(operation==DML_INSERT){
            SequenceImpl seq = new SequenceImpl("TRAX_RULE_NUMBER_SEQ",getDBTransaction());
            int seqNo = seq.getSequenceNumber().intValue();
            
            String ContractNo="2-"+seqNo;
            setAttributeInternal(CONTRACTNUMBER, ContractNo);
                            
        }
         
        templateId = this.getContractTemplateId();
        template = this.getContractTemplate();
        
        // check if the contract is created from a template and copy template data
        if (operation == DML_INSERT && templateId != null) {
            CopyTemplateData(operation, e);
        }
    }
    
    protected void doDML(int operation, TransactionEvent e) {
    
        super.doDML(operation, e);

    }

    /**Validation method for Contract
     */
    public boolean validateContract() {
        //Sudhir Jaiswal->Start
        Date effDate=getEffectiveDate();
        //Date exDate=getExpirationDate();
        Date exDate=getExpirationDate();
        
        /* validation removed 02/24/10, SMJ
         * expiration date does not have to be greater than today's date
         * some contracts are historical
        if(getStatus()!=null && exDate!=null && getStatus().trim().equalsIgnoreCase("Active")){
             if(exDate.compareTo(Date.getCurrentDate())<=0){
                 throw new JboException("Expiration Date should be greater than Today's Date.");
             }
        }
        */
        
        if(effDate!=null && exDate!=null && exDate.compareTo(effDate)<=0 ){  
            return false; 
        }
         //Sudhir Jaiswal->end
        return true;
    }


    /**Gets the attribute value for AgreementContactId, using the alias name AgreementContactId
     */
    public Number getAgreementContactId() {
        return (Number)getAttributeInternal(AGREEMENTCONTACTID);
    }

    /**Sets <code>value</code> as the attribute value for AgreementContactId
     */
    public void setAgreementContactId(Number value) {
        setAttributeInternal(AGREEMENTCONTACTID, value);
    }

    /**Gets the attribute value for QaContactId, using the alias name QaContactId
     */
    public Number getQaContactId() {
        return (Number)getAttributeInternal(QACONTACTID);
    }

    /**Sets <code>value</code> as the attribute value for QaContactId
     */
    public void setQaContactId(Number value) {
        setAttributeInternal(QACONTACTID, value);
    }

    /**Gets the attribute value for TechnicalContactId, using the alias name TechnicalContactId
     */
    public Number getTechnicalContactId() {
        return (Number)getAttributeInternal(TECHNICALCONTACTID);
    }

    /**Sets <code>value</code> as the attribute value for TechnicalContactId
     */
    public void setTechnicalContactId(Number value) {
        setAttributeInternal(TECHNICALCONTACTID, value);
    }

    /**Gets the associated entity ContactImpl
     */
    public ContactImpl getContact() {
        return (ContactImpl)getAttributeInternal(CONTACT);
    }

    /**Sets <code>value</code> as the associated entity ContactImpl
     */
    public void setContact(ContactImpl value) {
        setAttributeInternal(CONTACT, value);
    }


    /**Gets the associated entity ContactImpl
     */
    public ContactImpl getContact2() {
        return (ContactImpl)getAttributeInternal(CONTACT2);
    }

    /**Sets <code>value</code> as the associated entity ContactImpl
     */
    public void setContact2(ContactImpl value) {
        setAttributeInternal(CONTACT2, value);
    }
    /**Gets the attribute value for SiebelRowId, using the alias name SiebelRowId
     */


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getActivity1() {
        return (RowIterator)getAttributeInternal(ACTIVITY1);
    }

    /**Gets the attribute value for NoteFlag, using the alias name NoteFlag
     */
    public String getNoteFlag() {
        return (String)getAttributeInternal(NOTEFLAG);
    }

    /**Sets <code>value</code> as the attribute value for NoteFlag
     */
    public void setNoteFlag(String value) {
        setAttributeInternal(NOTEFLAG, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContractAttachment() {
        return (RowIterator)getAttributeInternal(CONTRACTATTACHMENT);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContractTitle() {
        return (RowIterator)getAttributeInternal(CONTRACTTITLE);
    }


    /**Gets the attribute value for RelationshipOwner, using the alias name RelationshipOwner
     */
    public String getRelationshipOwner() {
        return (String)getAttributeInternal(RELATIONSHIPOWNER);
    }

    /**Sets <code>value</code> as the attribute value for RelationshipOwner
     */
    public void setRelationshipOwner(String value) {
        setAttributeInternal(RELATIONSHIPOWNER, value);
    }

    /**Gets the attribute value for Note, using the alias name Note
     */
    public String getNote() {
        return (String)getAttributeInternal(NOTE);
    }

    /**Sets <code>value</code> as the attribute value for Note
     */
    public void setNote(String value) {
        setAttributeInternal(NOTE, value);
    }

    /**Uses the link ContractTitlesFkLink to return rows of ContractTitleView
     */
    public RowIterator getContractTitleView() {
        return (RowIterator)getAttributeInternal(CONTRACTTITLEVIEW);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getRoyaltyRate() {
        return (RowIterator)getAttributeInternal(ROYALTYRATE);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContractGuarantee() {
        return (RowIterator)getAttributeInternal(CONTRACTGUARANTEE);
    }

    /**Gets the associated entity RoyaltyInformationImpl
     */
    public RoyaltyInformationImpl getRoyaltyInformation() {
        return (RoyaltyInformationImpl)getAttributeInternal(ROYALTYINFORMATION);
    }

    /**Sets <code>value</code> as the associated entity RoyaltyInformationImpl
     */
    public void setRoyaltyInformation(RoyaltyInformationImpl value) {
        setAttributeInternal(ROYALTYINFORMATION, value);
    }

    /**Gets the attribute value for ActiveFlag, using the alias name ActiveFlag
     */
    public String getActiveFlag() {
        return (String)getAttributeInternal(ACTIVEFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ActiveFlag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**Gets the attribute value for IsTemplateFlag, using the alias name IsTemplateFlag
     */
    public String getIsTemplateFlag() {
        return (String)getAttributeInternal(ISTEMPLATEFLAG);
    }

    /**Sets <code>value</code> as the attribute value for IsTemplateFlag
     */
    public void setIsTemplateFlag(String value) {
        setAttributeInternal(ISTEMPLATEFLAG, value);
    }

    /**Gets the attribute value for TemplateName, using the alias name TemplateName
     */
    public String getTemplateName() {
        return (String)getAttributeInternal(TEMPLATENAME);
    }

    /**Sets <code>value</code> as the attribute value for TemplateName
     */
    public void setTemplateName(String value) {
        setAttributeInternal(TEMPLATENAME, value);
    }

    /**Gets the attribute value for ContractTemplateId, using the alias name ContractTemplateId
     */
    public Number getContractTemplateId() {
        return (Number)getAttributeInternal(CONTRACTTEMPLATEID);
    }

    /**Sets <code>value</code> as the attribute value for ContractTemplateId
     */
    public void setContractTemplateId(Number value) {
        setAttributeInternal(CONTRACTTEMPLATEID, value);
    }

    /**
     * Gets the attribute value for AutoAdd, using the alias name AutoAdd.
     * @return the AutoAdd
     */
    public String getAutoAdd() {
        return (String)getAttributeInternal(AUTOADD);
    }

    /**
     * Sets <code>value</code> as the attribute value for AutoAdd.
     * @param value value to set the AutoAdd
     */
    public void setAutoAdd(String value) {
        setAttributeInternal(AUTOADD, value);
    }

    /**
     * Gets the attribute value for Assignment, using the alias name Assignment.
     * @return the Assignment
     */
    public String getAssignment() {
        return (String)getAttributeInternal(ASSIGNMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assignment.
     * @param value value to set the Assignment
     */
    public void setAssignment(String value) {
        setAttributeInternal(ASSIGNMENT, value);
    }

    /**
     * Gets the attribute value for RoyaltyBearing, using the alias name RoyaltyBearing.
     * @return the RoyaltyBearing
     */
    public String getRoyaltyBearing() {
        return (String)getAttributeInternal(ROYALTYBEARING);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoyaltyBearing.
     * @param value value to set the RoyaltyBearing
     */
    public void setRoyaltyBearing(String value) {
        setAttributeInternal(ROYALTYBEARING, value);
    }


    /**
     * Gets the attribute value for FairTreatmentClause, using the alias name FairTreatmentClause.
     * @return the FairTreatmentClause
     */
    public String getFairTreatmentClause() {
        return (String)getAttributeInternal(FAIRTREATMENTCLAUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FairTreatmentClause.
     * @param value value to set the FairTreatmentClause
     */
    public void setFairTreatmentClause(String value) {
        setAttributeInternal(FAIRTREATMENTCLAUSE, value);
    }

    /**
     * Gets the attribute value for IssueEditionCoverage, using the alias name IssueEditionCoverage.
     * @return the IssueEditionCoverage
     */
    public String getIssueEditionCoverage() {
        return (String)getAttributeInternal(ISSUEEDITIONCOVERAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssueEditionCoverage.
     * @param value value to set the IssueEditionCoverage
     */
    public void setIssueEditionCoverage(String value) {
        setAttributeInternal(ISSUEEDITIONCOVERAGE, value);
    }

    /**
     * Gets the attribute value for CompleteContentSet, using the alias name CompleteContentSet.
     * @return the CompleteContentSet
     */
    public String getCompleteContentSet() {
        return (String)getAttributeInternal(COMPLETECONTENTSET);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompleteContentSet.
     * @param value value to set the CompleteContentSet
     */
    public void setCompleteContentSet(String value) {
        setAttributeInternal(COMPLETECONTENTSET, value);
    }

    /**
     * Gets the attribute value for WarrantyAndIndemnification, using the alias name WarrantyAndIndemnification.
     * @return the WarrantyAndIndemnification
     */
    public String getWarrantyAndIndemnification() {
        return (String)getAttributeInternal(WARRANTYANDINDEMNIFICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for WarrantyAndIndemnification.
     * @param value value to set the WarrantyAndIndemnification
     */
    public void setWarrantyAndIndemnification(String value) {
        setAttributeInternal(WARRANTYANDINDEMNIFICATION, value);
    }

    /**
     * Gets the attribute value for Governance, using the alias name Governance.
     * @return the Governance
     */
    public String getGovernance() {
        return (String)getAttributeInternal(GOVERNANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Governance.
     * @param value value to set the Governance
     */
    public void setGovernance(String value) {
        setAttributeInternal(GOVERNANCE, value);
    }

    /**
     * Gets the attribute value for PublisherChangeContractFlag, using the alias name PublisherChangeContractFlag.
     * @return the PublisherChangeContractFlag
     */
    public String getPublisherChangeContractFlag() {
        return (String)getAttributeInternal(PUBLISHERCHANGECONTRACTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublisherChangeContractFlag.
     * @param value value to set the PublisherChangeContractFlag
     */
    public void setPublisherChangeContractFlag(String value) {
        setAttributeInternal(PUBLISHERCHANGECONTRACTFLAG, value);
    }

    /**Gets the associated entity ContractImpl
     */
    public ContractImpl getContractTemplate() {
        return (ContractImpl)getAttributeInternal(CONTRACTTEMPLATE);
    }

    /**Sets <code>value</code> as the associated entity ContractImpl
     */
    public void setContractTemplate(ContractImpl value) {
        setAttributeInternal(CONTRACTTEMPLATE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTraxActivityContract() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYCONTRACT);
    }

    /**Gets the associated entity ContactImpl
     */
    public ContactImpl getQAContact() {
        return (ContactImpl)getAttributeInternal(QACONTACT);
    }

    /**Sets <code>value</code> as the associated entity ContactImpl
     */
    public void setQAContact(ContactImpl value) {
        setAttributeInternal(QACONTACT, value);
    }

}
