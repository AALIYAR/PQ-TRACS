package com.pq.tracs.model.vo;

import com.pq.tracs.model.bo.ActivityImpl;
import com.pq.tracs.model.eo.TraxPublisherChangeImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.ClobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 03 10:47:07 EST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NTCPublisherViewRowImpl extends ViewRowImpl {
    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        this.setType("NTC-P");
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getId();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        NtcNumber {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getNtcNumber();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setNtcNumber((Number)value);
            }
        }
        ,
        Type {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getType();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ,
        SubType {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getSubType();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setSubType((String)value);
            }
        }
        ,
        Status {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getStatus();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        Priority {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getPriority();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setPriority((String)value);
            }
        }
        ,
        Owner {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getOwner();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setOwner((String)value);
            }
        }
        ,
        Description {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getDescription();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        DueDate {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getDueDate();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setDueDate((Date)value);
            }
        }
        ,
        ExpectedStartDate {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getExpectedStartDate();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setExpectedStartDate((Date)value);
            }
        }
        ,
        ActualStartDate {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getActualStartDate();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setActualStartDate((Date)value);
            }
        }
        ,
        CompletionDate {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getCompletionDate();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setCompletionDate((Date)value);
            }
        }
        ,
        HoursSpent {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getHoursSpent();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setHoursSpent((Number)value);
            }
        }
        ,
        Notes {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getNotes();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setNotes((String)value);
            }
        }
        ,
        NtcPriority {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getNtcPriority();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setNtcPriority((String)value);
            }
        }
        ,
        EmailText {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getEmailText();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setEmailText((ClobDomain)value);
            }
        }
        ,
        CreatedBy {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        Id1 {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getId1();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setId1((Number)value);
            }
        }
        ,
        ActivityId {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getActivityId();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setActivityId((Number)value);
            }
        }
        ,
        JhsUsersId {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getJhsUsersId();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setJhsUsersId((Number)value);
            }
        }
        ,
        OldPublisher {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getOldPublisher();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setOldPublisher((String)value);
            }
        }
        ,
        NewPublisher {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getNewPublisher();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setNewPublisher((String)value);
            }
        }
        ,
        Contact {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getContact();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setContact((String)value);
            }
        }
        ,
        Address {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getAddress();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ,
        PhoneNumber {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getPhoneNumber();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setPhoneNumber((String)value);
            }
        }
        ,
        Email {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getEmail();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setEmail((String)value);
            }
        }
        ,
        DateOfSale {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getDateOfSale();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setDateOfSale((Date)value);
            }
        }
        ,
        TitleList {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getTitleList();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setTitleList((String)value);
            }
        }
        ,
        OldContentOwnerId {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getOldContentOwnerId();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setOldContentOwnerId((Number)value);
            }
        }
        ,
        TraxActivityTitleView {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getTraxActivityTitleView();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TraxActivityAttachmentView {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getTraxActivityAttachmentView();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubTypeLookup {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getSubTypeLookup();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContentOwnerLOV1 {
            public Object get(NTCPublisherViewRowImpl obj) {
                return obj.getContentOwnerLOV1();
            }

            public void put(NTCPublisherViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(NTCPublisherViewRowImpl object);

        public abstract void put(NTCPublisherViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int NTCNUMBER = AttributesEnum.NtcNumber.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int SUBTYPE = AttributesEnum.SubType.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int OWNER = AttributesEnum.Owner.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int DUEDATE = AttributesEnum.DueDate.index();
    public static final int EXPECTEDSTARTDATE = AttributesEnum.ExpectedStartDate.index();
    public static final int ACTUALSTARTDATE = AttributesEnum.ActualStartDate.index();
    public static final int COMPLETIONDATE = AttributesEnum.CompletionDate.index();
    public static final int HOURSSPENT = AttributesEnum.HoursSpent.index();
    public static final int NOTES = AttributesEnum.Notes.index();
    public static final int NTCPRIORITY = AttributesEnum.NtcPriority.index();
    public static final int EMAILTEXT = AttributesEnum.EmailText.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int ID1 = AttributesEnum.Id1.index();
    public static final int ACTIVITYID = AttributesEnum.ActivityId.index();
    public static final int JHSUSERSID = AttributesEnum.JhsUsersId.index();
    public static final int OLDPUBLISHER = AttributesEnum.OldPublisher.index();
    public static final int NEWPUBLISHER = AttributesEnum.NewPublisher.index();
    public static final int CONTACT = AttributesEnum.Contact.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int DATEOFSALE = AttributesEnum.DateOfSale.index();
    public static final int TITLELIST = AttributesEnum.TitleList.index();
    public static final int OLDCONTENTOWNERID = AttributesEnum.OldContentOwnerId.index();
    public static final int TRAXACTIVITYTITLEVIEW = AttributesEnum.TraxActivityTitleView.index();
    public static final int TRAXACTIVITYATTACHMENTVIEW = AttributesEnum.TraxActivityAttachmentView.index();
    public static final int SUBTYPELOOKUP = AttributesEnum.SubTypeLookup.index();
    public static final int CONTENTOWNERLOV1 = AttributesEnum.ContentOwnerLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NTCPublisherViewRowImpl() {
    }

    /**
     * Gets Activity entity object.
     * @return the Activity
     */
    public ActivityImpl getActivity() {
        return (ActivityImpl)getEntity(0);
    }

    /**
     * Gets TraxPublisherChange entity object.
     * @return the TraxPublisherChange
     */
    public TraxPublisherChangeImpl getTraxPublisherChange() {
        return (TraxPublisherChangeImpl)getEntity(1);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for NTC_NUMBER using the alias name NtcNumber.
     * @return the NTC_NUMBER
     */
    public Number getNtcNumber() {
        return (Number)getAttributeInternal(NTCNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for NTC_NUMBER using the alias name NtcNumber.
     * @param value value to set the NTC_NUMBER
     */
    public void setNtcNumber(Number value) {
        setAttributeInternal(NTCNUMBER, value);
    }

    /**
     * Gets the attribute value for TYPE using the alias name Type.
     * @return the TYPE
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPE using the alias name Type.
     * @param value value to set the TYPE
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for SUB_TYPE using the alias name SubType.
     * @return the SUB_TYPE
     */
    public String getSubType() {
        return (String) getAttributeInternal(SUBTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUB_TYPE using the alias name SubType.
     * @param value value to set the SUB_TYPE
     */
    public void setSubType(String value) {
        setAttributeInternal(SUBTYPE, value);
    }

    /**
     * Gets the attribute value for STATUS using the alias name Status.
     * @return the STATUS
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS using the alias name Status.
     * @param value value to set the STATUS
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public String getPriority() {
        return (String) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(String value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for OWNER using the alias name Owner.
     * @return the OWNER
     */
    public String getOwner() {
        return (String) getAttributeInternal(OWNER);
    }

    /**
     * Sets <code>value</code> as attribute value for OWNER using the alias name Owner.
     * @param value value to set the OWNER
     */
    public void setOwner(String value) {
        setAttributeInternal(OWNER, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for DUE_DATE using the alias name DueDate.
     * @return the DUE_DATE
     */
    public Date getDueDate() {
        return (Date)getAttributeInternal(DUEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DUE_DATE using the alias name DueDate.
     * @param value value to set the DUE_DATE
     */
    public void setDueDate(Date value) {
        setAttributeInternal(DUEDATE, value);
    }

    /**
     * Gets the attribute value for EXPECTED_START_DATE using the alias name ExpectedStartDate.
     * @return the EXPECTED_START_DATE
     */
    public Date getExpectedStartDate() {
        return (Date)getAttributeInternal(EXPECTEDSTARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPECTED_START_DATE using the alias name ExpectedStartDate.
     * @param value value to set the EXPECTED_START_DATE
     */
    public void setExpectedStartDate(Date value) {
        setAttributeInternal(EXPECTEDSTARTDATE, value);
    }

    /**
     * Gets the attribute value for ACTUAL_START_DATE using the alias name ActualStartDate.
     * @return the ACTUAL_START_DATE
     */
    public Date getActualStartDate() {
        return (Date)getAttributeInternal(ACTUALSTARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_START_DATE using the alias name ActualStartDate.
     * @param value value to set the ACTUAL_START_DATE
     */
    public void setActualStartDate(Date value) {
        setAttributeInternal(ACTUALSTARTDATE, value);
    }

    /**
     * Gets the attribute value for COMPLETION_DATE using the alias name CompletionDate.
     * @return the COMPLETION_DATE
     */
    public Date getCompletionDate() {
        return (Date)getAttributeInternal(COMPLETIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPLETION_DATE using the alias name CompletionDate.
     * @param value value to set the COMPLETION_DATE
     */
    public void setCompletionDate(Date value) {
        setAttributeInternal(COMPLETIONDATE, value);
    }

    /**
     * Gets the attribute value for HOURS_SPENT using the alias name HoursSpent.
     * @return the HOURS_SPENT
     */
    public Number getHoursSpent() {
        return (Number)getAttributeInternal(HOURSSPENT);
    }

    /**
     * Sets <code>value</code> as attribute value for HOURS_SPENT using the alias name HoursSpent.
     * @param value value to set the HOURS_SPENT
     */
    public void setHoursSpent(Number value) {
        setAttributeInternal(HOURSSPENT, value);
    }

    /**
     * Gets the attribute value for NOTES using the alias name Notes.
     * @return the NOTES
     */
    public String getNotes() {
        return (String) getAttributeInternal(NOTES);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTES using the alias name Notes.
     * @param value value to set the NOTES
     */
    public void setNotes(String value) {
        setAttributeInternal(NOTES, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id1.
     * @return the ID
     */
    public Number getId1() {
        return (Number)getAttributeInternal(ID1);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id1.
     * @param value value to set the ID
     */
    public void setId1(Number value) {
        setAttributeInternal(ID1, value);
    }

    /**
     * Gets the attribute value for ACTIVITY_ID using the alias name ActivityId.
     * @return the ACTIVITY_ID
     */
    public Number getActivityId() {
        return (Number)getAttributeInternal(ACTIVITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIVITY_ID using the alias name ActivityId.
     * @param value value to set the ACTIVITY_ID
     */
    public void setActivityId(Number value) {
        setAttributeInternal(ACTIVITYID, value);
    }

    /**
     * Gets the attribute value for JHS_USERS_ID using the alias name JhsUsersId.
     * @return the JHS_USERS_ID
     */
    public Number getJhsUsersId() {
        return (Number)getAttributeInternal(JHSUSERSID);
    }

    /**
     * Sets <code>value</code> as attribute value for JHS_USERS_ID using the alias name JhsUsersId.
     * @param value value to set the JHS_USERS_ID
     */
    public void setJhsUsersId(Number value) {
        setAttributeInternal(JHSUSERSID, value);
    }

    /**
     * Gets the attribute value for OLD_PUBLISHER using the alias name OldPublisher.
     * @return the OLD_PUBLISHER
     */
    public String getOldPublisher() {
        return (String) getAttributeInternal(OLDPUBLISHER);
    }

    /**
     * Sets <code>value</code> as attribute value for OLD_PUBLISHER using the alias name OldPublisher.
     * @param value value to set the OLD_PUBLISHER
     */
    public void setOldPublisher(String value) {
        setAttributeInternal(OLDPUBLISHER, value);
    }

    /**
     * Gets the attribute value for NEW_PUBLISHER using the alias name NewPublisher.
     * @return the NEW_PUBLISHER
     */
    public String getNewPublisher() {
        return (String) getAttributeInternal(NEWPUBLISHER);
    }

    /**
     * Sets <code>value</code> as attribute value for NEW_PUBLISHER using the alias name NewPublisher.
     * @param value value to set the NEW_PUBLISHER
     */
    public void setNewPublisher(String value) {
        setAttributeInternal(NEWPUBLISHER, value);
    }

    /**
     * Gets the attribute value for CONTACT using the alias name Contact.
     * @return the CONTACT
     */
    public String getContact() {
        return (String) getAttributeInternal(CONTACT);
    }

    /**
     * Sets <code>value</code> as attribute value for CONTACT using the alias name Contact.
     * @param value value to set the CONTACT
     */
    public void setContact(String value) {
        setAttributeInternal(CONTACT, value);
    }

    /**
     * Gets the attribute value for ADDRESS using the alias name Address.
     * @return the ADDRESS
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS using the alias name Address.
     * @param value value to set the ADDRESS
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @return the PHONE_NUMBER
     */
    public String getPhoneNumber() {
        return (String) getAttributeInternal(PHONENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @param value value to set the PHONE_NUMBER
     */
    public void setPhoneNumber(String value) {
        setAttributeInternal(PHONENUMBER, value);
    }

    /**
     * Gets the attribute value for EMAIL using the alias name Email.
     * @return the EMAIL
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL using the alias name Email.
     * @param value value to set the EMAIL
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for DATE_OF_SALE using the alias name DateOfSale.
     * @return the DATE_OF_SALE
     */
    public Date getDateOfSale() {
        return (Date) getAttributeInternal(DATEOFSALE);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_OF_SALE using the alias name DateOfSale.
     * @param value value to set the DATE_OF_SALE
     */
    public void setDateOfSale(Date value) {
        setAttributeInternal(DATEOFSALE, value);
    }

    /**
     * Gets the attribute value for TITLE_LIST using the alias name TitleList.
     * @return the TITLE_LIST
     */
    public String getTitleList() {
        return (String) getAttributeInternal(TITLELIST);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE_LIST using the alias name TitleList.
     * @param value value to set the TITLE_LIST
     */
    public void setTitleList(String value) {
        setAttributeInternal(TITLELIST, value);
    }

    /**
     * Gets the attribute value for OLD_CONTENT_OWNER_ID using the alias name OldContentOwnerId.
     * @return the OLD_CONTENT_OWNER_ID
     */
    public Number getOldContentOwnerId() {
        return (Number)getAttributeInternal(OLDCONTENTOWNERID);
    }

    /**
     * Sets <code>value</code> as attribute value for OLD_CONTENT_OWNER_ID using the alias name OldContentOwnerId.
     * @param value value to set the OLD_CONTENT_OWNER_ID
     */
    public void setOldContentOwnerId(Number value) {
        setAttributeInternal(OLDCONTENTOWNERID, value);
    }


    /**
     * Gets the attribute value for NTC_PRIORITY using the alias name NtcPriority.
     * @return the NTC_PRIORITY
     */
    public String getNtcPriority() {
        return (String) getAttributeInternal(NTCPRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for NTC_PRIORITY using the alias name NtcPriority.
     * @param value value to set the NTC_PRIORITY
     */
    public void setNtcPriority(String value) {
        setAttributeInternal(NTCPRIORITY, value);
    }

    /**
     * Gets the attribute value for EMAIL_TEXT using the alias name EmailText.
     * @return the EMAIL_TEXT
     */
    public ClobDomain getEmailText() {
        return (ClobDomain)getAttributeInternal(EMAILTEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL_TEXT using the alias name EmailText.
     * @param value value to set the EMAIL_TEXT
     */
    public void setEmailText(ClobDomain value) {
        setAttributeInternal(EMAILTEXT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TraxActivityTitleView.
     */
    public RowIterator getTraxActivityTitleView() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYTITLEVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TraxActivityAttachmentView.
     */
    public RowIterator getTraxActivityAttachmentView() {
        return (RowIterator)getAttributeInternal(TRAXACTIVITYATTACHMENTVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SubTypeLookup.
     */
    public RowSet getSubTypeLookup() {
        return (RowSet)getAttributeInternal(SUBTYPELOOKUP);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ContentOwnerLOV1.
     */
    public RowSet getContentOwnerLOV1() {
        return (RowSet)getAttributeInternal(CONTENTOWNERLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
