package com.pq.tracs.model.bo;

import java.sql.PreparedStatement;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractRightImpl extends TracsBaseEntity {
    private static EntityDefImpl mDefinitionObject;
    
    private RightTemplateImpl template;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ContractRightImpl obj) {
                return obj.getId();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        ContractId {
            public Object get(ContractRightImpl obj) {
                return obj.getContractId();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setContractId((Number)value);
            }
        }
        ,
        RuleNumber {
            public Object get(ContractRightImpl obj) {
                return obj.getRuleNumber();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setRuleNumber((String)value);
            }
        }
        ,
        PermissionType {
            public Object get(ContractRightImpl obj) {
                return obj.getPermissionType();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setPermissionType((String)value);
            }
        }
        ,
        Status {
            public Object get(ContractRightImpl obj) {
                return obj.getStatus();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        RightOrRestrictionType {
            public Object get(ContractRightImpl obj) {
                return obj.getRightOrRestrictionType();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setRightOrRestrictionType((String)value);
            }
        }
        ,
        SalesRestrictionFlag {
            public Object get(ContractRightImpl obj) {
                return obj.getSalesRestrictionFlag();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setSalesRestrictionFlag((String)value);
            }
        }
        ,
        IncludesOrExcludes {
            public Object get(ContractRightImpl obj) {
                return obj.getIncludesOrExcludes();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setIncludesOrExcludes((String)value);
            }
        }
        ,
        ComplexFlag {
            public Object get(ContractRightImpl obj) {
                return obj.getComplexFlag();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setComplexFlag((String)value);
            }
        }
        ,
        EffectiveStartDate {
            public Object get(ContractRightImpl obj) {
                return obj.getEffectiveStartDate();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setEffectiveStartDate((Date)value);
            }
        }
        ,
        EffectiveEndDate {
            public Object get(ContractRightImpl obj) {
                return obj.getEffectiveEndDate();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setEffectiveEndDate((Date)value);
            }
        }
        ,
        TranslationFlag {
            public Object get(ContractRightImpl obj) {
                return obj.getTranslationFlag();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setTranslationFlag((String)value);
            }
        }
        ,
        ResellerFyiRequiredFlag {
            public Object get(ContractRightImpl obj) {
                return obj.getResellerFyiRequiredFlag();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setResellerFyiRequiredFlag((String)value);
            }
        }
        ,
        WrittenApprovalRequiredFlag {
            public Object get(ContractRightImpl obj) {
                return obj.getWrittenApprovalRequiredFlag();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setWrittenApprovalRequiredFlag((String)value);
            }
        }
        ,
        ComplexRuleDescription {
            public Object get(ContractRightImpl obj) {
                return obj.getComplexRuleDescription();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setComplexRuleDescription((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(ContractRightImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(ContractRightImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(ContractRightImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(ContractRightImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setLastUpdatedDate((Date)value);
            }
        }
        ,
        PublicationStartDate {
            public Object get(ContractRightImpl obj) {
                return obj.getPublicationStartDate();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setPublicationStartDate((Date)value);
            }
        }
        ,
        PublicationEndDate {
            public Object get(ContractRightImpl obj) {
                return obj.getPublicationEndDate();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setPublicationEndDate((Date)value);
            }
        }
        ,
        EmbargoDays {
            public Object get(ContractRightImpl obj) {
                return obj.getEmbargoDays();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setEmbargoDays((Number)value);
            }
        }
        ,
        ReverseEmbargoDays {
            public Object get(ContractRightImpl obj) {
                return obj.getReverseEmbargoDays();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setReverseEmbargoDays((Number)value);
            }
        }
        ,
        RightTemplateId {
            public Object get(ContractRightImpl obj) {
                return obj.getRightTemplateId();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setRightTemplateId((Number)value);
            }
        }
        ,
        RightType {
            public Object get(ContractRightImpl obj) {
                return obj.getRightType();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setRightType((String)value);
            }
        }
        ,
        PermissionSubType {
            public Object get(ContractRightImpl obj) {
                return obj.getPermissionSubType();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setPermissionSubType((String)value);
            }
        }
        ,
        Contract {
            public Object get(ContractRightImpl obj) {
                return obj.getContract();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setContract((ContractImpl)value);
            }
        }
        ,
        ContractRightCategory {
            public Object get(ContractRightImpl obj) {
                return obj.getContractRightCategory();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TitleContractRight {
            public Object get(ContractRightImpl obj) {
                return obj.getTitleContractRight();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        JTraxTitleContractRight {
            public Object get(ContractRightImpl obj) {
                return obj.getJTraxTitleContractRight();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RightTemplate {
            public Object get(ContractRightImpl obj) {
                return obj.getRightTemplate();
            }

            public void put(ContractRightImpl obj, Object value) {
                obj.setRightTemplate((RightTemplateImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ContractRightImpl object);

        public abstract void put(ContractRightImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int RULENUMBER = AttributesEnum.RuleNumber.index();
    public static final int PERMISSIONTYPE = AttributesEnum.PermissionType.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int RIGHTORRESTRICTIONTYPE = AttributesEnum.RightOrRestrictionType.index();
    public static final int SALESRESTRICTIONFLAG = AttributesEnum.SalesRestrictionFlag.index();
    public static final int INCLUDESOREXCLUDES = AttributesEnum.IncludesOrExcludes.index();
    public static final int COMPLEXFLAG = AttributesEnum.ComplexFlag.index();
    public static final int EFFECTIVESTARTDATE = AttributesEnum.EffectiveStartDate.index();
    public static final int EFFECTIVEENDDATE = AttributesEnum.EffectiveEndDate.index();
    public static final int TRANSLATIONFLAG = AttributesEnum.TranslationFlag.index();
    public static final int RESELLERFYIREQUIREDFLAG = AttributesEnum.ResellerFyiRequiredFlag.index();
    public static final int WRITTENAPPROVALREQUIREDFLAG = AttributesEnum.WrittenApprovalRequiredFlag.index();
    public static final int COMPLEXRULEDESCRIPTION = AttributesEnum.ComplexRuleDescription.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int PUBLICATIONSTARTDATE = AttributesEnum.PublicationStartDate.index();
    public static final int PUBLICATIONENDDATE = AttributesEnum.PublicationEndDate.index();
    public static final int EMBARGODAYS = AttributesEnum.EmbargoDays.index();
    public static final int REVERSEEMBARGODAYS = AttributesEnum.ReverseEmbargoDays.index();
    public static final int RIGHTTEMPLATEID = AttributesEnum.RightTemplateId.index();
    public static final int RIGHTTYPE = AttributesEnum.RightType.index();
    public static final int PERMISSIONSUBTYPE = AttributesEnum.PermissionSubType.index();
    public static final int CONTRACT = AttributesEnum.Contract.index();
    public static final int CONTRACTRIGHTCATEGORY = AttributesEnum.ContractRightCategory.index();
    public static final int TITLECONTRACTRIGHT = AttributesEnum.TitleContractRight.index();
    public static final int JTRAXTITLECONTRACTRIGHT = AttributesEnum.JTraxTitleContractRight.index();
    public static final int RIGHTTEMPLATE = AttributesEnum.RightTemplate.index();

    /**This is the default constructor (do not remove)
     */
    public ContractRightImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.pq.tracs.model.bo.ContractRight");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for ContractId, using the alias name ContractId
     */
    public Number getContractId() {
        return (Number)getAttributeInternal(CONTRACTID);
    }

    /**Sets <code>value</code> as the attribute value for ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }


    /**Gets the attribute value for RuleNumber, using the alias name RuleNumber
     */
    public String getRuleNumber() {
        return (String)getAttributeInternal(RULENUMBER);
    }

    /**Sets <code>value</code> as the attribute value for RuleNumber
     */
    public void setRuleNumber(String value) {
        setAttributeInternal(RULENUMBER, value);
    }

    /**Gets the attribute value for PermissionType, using the alias name PermissionType
     */
    public String getPermissionType() {
        return (String)getAttributeInternal(PERMISSIONTYPE);
    }

    /**Sets <code>value</code> as the attribute value for PermissionType
     */
    public void setPermissionType(String value) {
        setAttributeInternal(PERMISSIONTYPE, value);
    }


    /**Gets the attribute value for Status, using the alias name Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**Sets <code>value</code> as the attribute value for Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**Gets the attribute value for RightOrRestrictionType, using the alias name RightOrRestrictionType
     */
    public String getRightOrRestrictionType() {
        return (String)getAttributeInternal(RIGHTORRESTRICTIONTYPE);
    }

    /**Sets <code>value</code> as the attribute value for RightOrRestrictionType
     */
    public void setRightOrRestrictionType(String value) {
        setAttributeInternal(RIGHTORRESTRICTIONTYPE, value);
    }

    /**Gets the attribute value for SalesRestrictionFlag, using the alias name SalesRestrictionFlag
     */
    public String getSalesRestrictionFlag() {
        return (String)getAttributeInternal(SALESRESTRICTIONFLAG);
    }

    /**Sets <code>value</code> as the attribute value for SalesRestrictionFlag
     */
    public void setSalesRestrictionFlag(String value) {
        setAttributeInternal(SALESRESTRICTIONFLAG, value);
    }

    /**Gets the attribute value for IncludesOrExcludes, using the alias name IncludesOrExcludes
     */
    public String getIncludesOrExcludes() {
        return (String)getAttributeInternal(INCLUDESOREXCLUDES);
    }

    /**Sets <code>value</code> as the attribute value for IncludesOrExcludes
     */
    public void setIncludesOrExcludes(String value) {
        setAttributeInternal(INCLUDESOREXCLUDES, value);
    }

    /**Gets the attribute value for ComplexFlag, using the alias name ComplexFlag
     */
    public String getComplexFlag() {
        return (String)getAttributeInternal(COMPLEXFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ComplexFlag
     */
    public void setComplexFlag(String value) {
        setAttributeInternal(COMPLEXFLAG, value);
    }


    /**Gets the attribute value for EffectiveStartDate, using the alias name EffectiveStartDate
     */
    public Date getEffectiveStartDate() {
        return (Date)getAttributeInternal(EFFECTIVESTARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for EffectiveStartDate
     */
    public void setEffectiveStartDate(Date value) {
        setAttributeInternal(EFFECTIVESTARTDATE, value);
    }

    /**Gets the attribute value for EffectiveEndDate, using the alias name EffectiveEndDate
     */
    public Date getEffectiveEndDate() {
        return (Date)getAttributeInternal(EFFECTIVEENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for EffectiveEndDate
     */
    public void setEffectiveEndDate(Date value) {
        setAttributeInternal(EFFECTIVEENDDATE, value);
    }

    /**Gets the attribute value for TranslationFlag, using the alias name TranslationFlag
     */
    public String getTranslationFlag() {
        return (String)getAttributeInternal(TRANSLATIONFLAG);
    }

    /**Sets <code>value</code> as the attribute value for TranslationFlag
     */
    public void setTranslationFlag(String value) {
        setAttributeInternal(TRANSLATIONFLAG, value);
    }

    /**Gets the attribute value for ResellerFyiRequiredFlag, using the alias name ResellerFyiRequiredFlag
     */
    public String getResellerFyiRequiredFlag() {
        return (String)getAttributeInternal(RESELLERFYIREQUIREDFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ResellerFyiRequiredFlag
     */
    public void setResellerFyiRequiredFlag(String value) {
        setAttributeInternal(RESELLERFYIREQUIREDFLAG, value);
    }

    /**Gets the attribute value for WrittenApprovalRequiredFlag, using the alias name WrittenApprovalRequiredFlag
     */
    public String getWrittenApprovalRequiredFlag() {
        return (String)getAttributeInternal(WRITTENAPPROVALREQUIREDFLAG);
    }

    /**Sets <code>value</code> as the attribute value for WrittenApprovalRequiredFlag
     */
    public void setWrittenApprovalRequiredFlag(String value) {
        setAttributeInternal(WRITTENAPPROVALREQUIREDFLAG, value);
    }


    /**Gets the attribute value for ComplexRuleDescription, using the alias name ComplexRuleDescription
     */
    public String getComplexRuleDescription() {
        return (String)getAttributeInternal(COMPLEXRULEDESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for ComplexRuleDescription
     */
    public void setComplexRuleDescription(String value) {
        setAttributeInternal(COMPLEXRULEDESCRIPTION, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreatedDate, using the alias name CreatedDate
     */
    public Date getCreatedDate() {
        return (Date)getAttributeInternal(CREATEDDATE);
    }


    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date)getAttributeInternal(LASTUPDATEDDATE);
    }


    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**Gets the associated entity ContractImpl
     */
    public ContractImpl getContract() {
        return (ContractImpl)getAttributeInternal(CONTRACT);
    }

    /**Sets <code>value</code> as the associated entity ContractImpl
     */
    public void setContract(ContractImpl value) {
        setAttributeInternal(CONTRACT, value);
    }

    /**Gets the attribute value for PublicationStartDate, using the alias name PublicationStartDate
     */
    public Date getPublicationStartDate() {
        return (Date)getAttributeInternal(PUBLICATIONSTARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for PublicationStartDate
     */
    public void setPublicationStartDate(Date value) {
        setAttributeInternal(PUBLICATIONSTARTDATE, value);
    }

    /**Gets the attribute value for PublicationEndDate, using the alias name PublicationEndDate
     */
    public Date getPublicationEndDate() {
        return (Date)getAttributeInternal(PUBLICATIONENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for PublicationEndDate
     */
    public void setPublicationEndDate(Date value) {
        setAttributeInternal(PUBLICATIONENDDATE, value);
    }

    /**Gets the attribute value for EmbargoDays, using the alias name EmbargoDays
     */
    public Number getEmbargoDays() {
        return (Number)getAttributeInternal(EMBARGODAYS);
    }

    /**Sets <code>value</code> as the attribute value for EmbargoDays
     */
    public void setEmbargoDays(Number value) {
        setAttributeInternal(EMBARGODAYS, value);
    }

    /**Gets the attribute value for ReverseEmbargoDays, using the alias name ReverseEmbargoDays
     */
    public Number getReverseEmbargoDays() {
        return (Number)getAttributeInternal(REVERSEEMBARGODAYS);
    }

    /**Sets <code>value</code> as the attribute value for ReverseEmbargoDays
     */
    public void setReverseEmbargoDays(Number value) {
        setAttributeInternal(REVERSEEMBARGODAYS, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getContractRightCategory() {
        return (RowIterator)getAttributeInternal(CONTRACTRIGHTCATEGORY);
    }


    /**Gets the attribute value for RightTemplateId, using the alias name RightTemplateId
     */
    public Number getRightTemplateId() {
        return (Number)getAttributeInternal(RIGHTTEMPLATEID);
    }

    /**Sets <code>value</code> as the attribute value for RightTemplateId
     */
    public void setRightTemplateId(Number value) {
        setAttributeInternal(RIGHTTEMPLATEID, value);
    }

    /**Gets the attribute value for RightType, using the alias name RightType
     */
    public String getRightType() {
        return (String)getAttributeInternal(RIGHTTYPE);
    }

    /**Sets <code>value</code> as the attribute value for RightType
     */
    public void setRightType(String value) {
        setAttributeInternal(RIGHTTYPE, value);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getJTraxTitleContractRight() {
        return (RowIterator)getAttributeInternal(JTRAXTITLECONTRACTRIGHT);
    }

    /**Gets the attribute value for PermissionSubType, using the alias name PermissionSubType
     */
    public String getPermissionSubType() {
        return (String)getAttributeInternal(PERMISSIONSUBTYPE);
    }

    /**Sets <code>value</code> as the attribute value for PermissionSubType
     */
    public void setPermissionSubType(String value) {
        setAttributeInternal(PERMISSIONSUBTYPE, value);
    }

    protected void prepareForDML(int operation, TransactionEvent e) {

        super.prepareForDML(operation,e);
        try {
            if (operation == DML_INSERT) {
                SequenceImpl seq = new SequenceImpl("TRAX_RULE_NUMBER_SEQ",getDBTransaction());
                int seqNo = seq.getSequenceNumber().intValue();
                
                String prefix = "C";
                setRuleNumber(prefix +"-" + seqNo);
                
                if (getRightTemplateId() != null) {
                    template = getRightTemplate();
                    this.setRightTemplateId(null);
                }
            }
            
        }catch(Exception eee){
            throw new JboException("Unable to create new Contract Right.  " + eee.getMessage());
        }
    }
    
    protected void doDML (int operation, TransactionEvent e) {
        super.doDML(operation, e);
        
        if (operation == DML_INSERT && template != null) {
            try {
                //RightTemplateImpl template = getRightTemplate();
                RowIterator categories = template.getRightCategoryTemplate();
                
                while (categories.hasNext()) {
                    Row category = categories.next();
                    Row newCat = getContractRightCategory().createRow();
                    
                    newCat.setAttribute("ContractRightId", getId());
                    newCat.setAttribute("CategoryId", category.getAttribute("CategoryId"));
                    newCat.setAttribute("Value", category.getAttribute("Value"));
                    newCat.setAttribute("PermitFlag", category.getAttribute("PermitFlag"));
                    newCat.setAttribute("FullOrPartial", category.getAttribute("FullOrPartial"));
                    newCat.setAttribute("SubcategoryValue", null);
                    newCat.setAttribute("SubcategoryValuePermitFlag", "N");
                    
                    
                    getContractRightCategory().insertRow(newCat);
                }
            }
            catch (Exception ex) {
                throw new JboException("Unable to apply template categories.  " + ex.getMessage());
            }
        }
    }


    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getTitleContractRight() {
        return (RowIterator)getAttributeInternal(TITLECONTRACTRIGHT);
    }


    /**Gets the associated entity RightTemplateImpl
     */
    public RightTemplateImpl getRightTemplate() {
        return (RightTemplateImpl)getAttributeInternal(RIGHTTEMPLATE);
    }

    /**Sets <code>value</code> as the associated entity RightTemplateImpl
     */
    public void setRightTemplate(RightTemplateImpl value) {
        setAttributeInternal(RIGHTTEMPLATE, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }


}
